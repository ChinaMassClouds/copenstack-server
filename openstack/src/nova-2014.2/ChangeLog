CHANGES
=======

2014.2
------

* Fix pci_request_id break the upgrade from icehouse to juno
* Updated translations
* Fix broken cert revocation
* Update rpc version aliases for juno
* Mask passwords in exceptions and error messages
* Fix KeyError for euca-describe-images
* Fix the os_networks display to show cidr properly
* Disable libvirt NUMA topology support if libvirt < 1.0.4
* Destroy orig VM during resize if triggered by user
* move integrated api client to requests library
* Fix unsafe SSL connection on TrustedFilter

2014.2.rc1
----------

* libvirt: Make sure NUMA cell memory is in Kb in XML
* Correct missing vcpupin elements for numa case
* Imported Translations from Transifex
* VMWare: Fix VM leak when deletion of VM during resizing
* Remove duplicate entry from .gitignore file
* cmd: update the default behavior of serial console
* console: make websocketproxy handles token from path
* VMware: Remove tests for None in fake._db_content['files']
* Fix creating bdm for failed volume attachment
* libvirt: consider vcpu_pin_set when choosing NUMA cells
* Fix hook documentation on entry_points config
* Log original error when attaching volume fails
* Retry on closing of luks encrypted volume in case device is busy
* Fix Typo in method name - parse_Dom
* Fixes missing ec2 api address disassociate error on failure
* Updated from global requirements
* Ironic driver must wait for power state changes
* Fallback to legacy live migration if config error
* libvirt: log exception info when interface detach failed
* libvirt: support live migration with shared instances dir
* Fix SecurityGroupExists error when booting instances
* Undo changes to obj_make_compatible
* Clarify virt driver test comments & log statement
* VMware: Make DatastorePath hashable
* Remove usage of self.__dict__ for message var replacement
* VMware: trivial formatting fix in fake driver
* VMware: Improve logging of DatastorePath in error messages
* VMware: Use vm_mode constants
* Imported Translations from Transifex
* Updated from global requirements
* do not use unittest.TestCase for tests
* Neutron: Atomic update of instance info cache
* Reduce the scope of RT work while holding the big lock
* libvirt: convert CacheConcurrencyTestCase to avoid DB usage
* Give context to the warning in _sync_power_states
* remove test_multiprocess_api
* add time to logging in unit tests
* XenAPI: clean up old snapshots before create new
* Return vcpu pin set as set rather than list
* Fix start/stop return active/stopped immediately in EC2 API
* Reduce the log level for the guestfs being missing
* Sync network_info if instance not found before _build_resources yield
* Remove the AUDIT log message about loaded ext
* Fix unset extra_spec for a flavor
* Add further debug logging for multiprocess test
* Revert "libvirt: support live migrate of instances with conf drives"
* Revert "libvirt: Uses correct imagebackend for configdrive"
* Fixes server list filtering on metadata
* Add good path test cases of osapi_compute_workers
* Be less confusing about notification states
* Remove unused py33 tox env
* fix_typo_in_heal_instance_info_cache
* Refactor test_get_port_vnic_info 2 and 3
* Revert "libvirt: reworks configdrive creation"
* Scheduler: add log warning hints
* Add unit test for glanceclient ssl options
* Fix Broken links in devref/filter_scheduler.rst
* Change "is lazy loaded" detection method in db_api test
* Handle VolumeBDMPathNotFound in _get_disk_over_committed_size_total
* Handle volume bdm not found in lvm.get_volume_size
* Updated from global requirements
* Address nits in I6b4123590
* Add exists check to fetch_func_sync in libvirt imagebackend
* libvirt: avoid changing UUID when redefining nwfilters
* Vmware:Add support for ParaVirtualSCSIController
* Fix floating_ips_bulk unit test name
* tests: kill worker pids as well on timeouts
* Close standard fds in test child process
* Mitigating performance impact with getting pci requests from DB
* Return None from get_swap() if input is not swap
* Require tests for DB migrations
* VMware: fix broken mock of ds_util.mkdir
* Fixes HyperV VM Console Log
* FIX: Fail to remove the logical volume
* correct _sync_instance_power_state log message
* Add support for hypervisor type in IronicHostManager
* Add multinic API unit test
* Add plan for kilo blueprints: project priorities
* make flavors use common limit and marker
* Raise an exception if qemu-img fails
* Mark nova-baremetal driver as deprecated in Juno, removed in K
* libvirt: Unnecessary instance.save(s) called
* Add progress and cell_name into notifications
* XenAPI: run vhd-util repair if VHD check fails
* Get instance_properties from request_spec
* libvirt: convert encrypted LVM test to avoid DB usage
* libvirt: convert test_dmcrypt to avoid DB usage
* libvirt: convert test_blockinfo.py to avoid DB usage
* libvirt: convert test_vif.py to avoid DB usage
* libvirt: remove pointless class in util test suite
* libvirt: avoid need for lockutils setup running test cases
* VMware: Remove host argument to ds_util.get_datastore()
* Fix DB migration 254 by adding missing unittest
* postgresql: use postgres db instead of template1
* Assume VNIC_NORMAL if binding:vnic_type not set
* mock.assert_called_once() is not a valid method
* db: Add @_retry_on_deadlock to service_update()
* XenAPI improve post snapshot coalesce detection
* Catch NotImplementedError on reset_network for xen
* VMware: Fix usage of assertEqual in test_vmops
* Add more information to generic _add_floating_ip exception message
* bring over pretty_tox.sh from tempest
* Console: warn that the Nova VMRC console driver will be deprecated in K
* virt: use compute.vm_mode constants and validate vm mode type
* compute: tweaks to vm_mode APIs to align with arch/hvtype
* Fix NUMA fit testing in claims and filter class
* consolidate apirequest tests to single file
* ensure that we safely encode ec2 utf8 responses
* instance_topology_from_instance handles request_spec properly
* NUMA _get_constraint auto assumed Flavor object
* Imported Translations from Transifex
* Fix 'force' parameter for quota-update
* Update devref
* default=None is unneeded in config definitions
* Remove stale code from ObjectListBase
* Split up libvirt volume's connect_volume method
* Record instance faults during boot process
* ironic/baremetal: add validation of host manager/state APIs
* virt: move assertPublicAPISignatures into base test class
* libvirt: avoid 30 second long test in LXC mount setup
* fix up assertEqual(None...) check to catch more cases
* Fix object version hash test
* disk/vfs: make docstring conventional to python
* disk/vfs: ensure guestfs capabilities
* NIST: increase RSA key length to 2048 bit
* Fix incorrect exception when bdm with error state volume
* Improve secgroup create error message
* Always log the releasing, even under failure
* Fix race condition in update_dhcp
* Make obj_make_compatible consistent
* Correct baremetal/ironic consume_from_instance..
* Fix parsing sloppiness from iscsiadm discover
* correct inverted subtraction in quota check
* Add quotas for Server Groups (quota checks)
* Add quotas for Server Groups (V2 API change)
* check network ambiguity before external network auth
* Updated from global requirements
* libvirt: Consider numa_topology when booting
* Add the NUMATopologyFilter
* Make HostManager track NUMA usage
* API boot process sets NUMA topology for instances
* Make resource tracker track NUMA usage
* Hook NUMA topology checking into claims
* Stash numa-related flavor extra_spec items in system_metadata
* Fixes network_get_all_by_host to use indexes
* Add plan for kilo blueprints: when is a blueprint needed
* Bump FakeDriver's resource numbers
* delete python bytecode before every test run
* Stop using intersphinx
* Don't swallow exceptions in deallocate_port_for_instance
* neutronv2: attempt to delete all ports
* Proxy nova baremetal commands to Ironic
* Increase sleeps in baremetal driver
* Improve logging of external events on the compute node
* virt: use compute.virttype constants and validate virt type
* compute: Add standard constants for hypervisor virt types
* Fix test_create_instance_invalid_key_name
* Fix `confirmResize` action status code in V2
* Remove unnecessary imageRef setting from tests
* Remove unused config "service_down_time" reference
* Clarify logging in lockutils
* Make sure libvirt VIR_ERR_NO_DOMAIN errors are handled correctly
* Adds LOG statements in multiprocess API test
* Block sqlalchemy migrate 0.9.2 as it breaks all of nova
* Nova-net: fix server side deallocate_for_instance()
* Method for getting NUMA usage from an instance
* Imported Translations from Transifex
* Fix 'os-interface' resource name for Nova V2.1
* Add new unit tests for PCI stats
* Fixes AttributeError with api sample test fail
* Fix "revertResize/confirmResize" for V2.1 API
* Add unit test to os-agent API
* check the block_device_allocate_retries
* Support SR-IOV networking in libvirt
* Support SR-IOV networking in nova compute api and nova neutronv2
* Support SR-IOV networking in the PCI modules
* Add request_id in PciDevice
* Replace pci_request flavor storage with proper object usage
* Adds a test for raw_cpu_arch in _node_resource
* Stop stack tracing when trying to auto-stop a stopped instance
* Add quotas for Server Groups (V2 API compatibility & V2.1 support)
* Fixes Hyper-V volume mapping issue on reboot
* Libvirt-Enable support for discard option for disk device
* libvirt: set pae for Xen PVM and HVM
* document why we disable usb_tablet in code
* Fix 'os-start/os-stop' server actions for V2.1 API
* Fix 'createImage' server actions for V2.1 API
* Add unit test to aggregate api
* Handle exception better in v2 attach_interface
* Fix integrated test cases for assisted-volume-snapshots
* libvirt: start lxc from block device
* Remove exclude coverage regex from coverage job
* Pass instance to set_instance_error_state vs. uuid
* Add InstancePCIRequests object
* Drop verbose and useless nova-api log information
* Add instance_extra_update_by_uuid() to DB API
* Add pci_requests to instance_extra table
* Add claims testing to VirtNUMAHostTopology class
* Expose numa_topology to the resource tracker
* libvirt: fix bug when releasing port(s)
* Specify correct operation type when NVH is raised
* Ironic: don't canonicalize extra_specs data
* VMware: add tests for image fetch/cache functions
* VMware: spawn refactor image fetch/cache
* Ironic: Fix direct use of flavor and instance module objects
* Ironic driver fetches extra_specs when needed
* Maint: neutronclient exceptions from a more appropriate module
* Check requirements.txt files for missing (used) requirements
* Sync oslo-incubator module log:
* Add amd64 to arch.canonicalize()
* Sync oslo lockutils to nova
* libvirt: deprecated volume_drivers config parameter
* VMware: Remove get_copy_virtual_disk_spec from vmops and vm_util
* maint: various spelling fixes
* Fix config generator to use keystonemiddleware
* libvirt: improve unit test time
* VMware: prevent race condition with VNC port allocation
* VMware: Fix return type of get_vnc_console()
* VMware: Remove VMwareVCVMOps
* Network: enable instance deletion when dhcp release fails
* Adds ephemeral storage encryption for LVM back-end images
* Don't elevate context when rescheduling
* Ironic driver backports: patch 7
* Improve Ironic driver performance: patch 6
* Import Ironic Driver & supporting files - part 5
* Import Ironic Driver & supporting files - part 4
* Import Ironic Driver & supporting files - part 3
* Import Ironic Driver & supporting files - part 2
* Import Ironic Driver & supporting files - part 1
* Add sqlite dev packages to devref env setup doc
* Add user namespace support for libvirt-lxc
* Move to oslo.db
* api: add serial console API calls v2
* compute: add get_serial_console rpc and cells api calls
* compute: add get_serial_console in manager.py
* virt: add method get_serial_console to driver

2014.2.b3
---------

* Update invalid state error message on reboot API
* Fix race condition with vif plugging in finish migrate
* Fix service groups with zookeeper
* xenapi: send chunk terminator on subprocess exc
* Add support for ipv6 nameservers
* Remove unused oslo.config import
* Support image property for config drive
* warn against sorting requirements
* VMware: remove unused _get_vmdk_path from vmops
* virt: use compute.arch constants and validate architectures
* Change v3 quota-sets API to v2.1
* always set --no-hosts for dnsmasq
* Allow _poll_bandwidth_usage task to hit slave
* Add bandwidth usage object
* VMware: spawn refactor enlist image
* VMware: image user functions for spawn()
* Change v3 flavor_manage API to v2.1
* Port used_limits & used_limits_for_admin into v2.1
* Add API schema for v2.1 access_ips extension
* Add API schema for v2.1 "rebuild a server" API
* Add API schema for v2.1 "update a server" API
* Enabled qemu memory balloon stats
* Reset task state 'migrating' on nova compute restart
* Pass certificate, key and cacert to glanceclient
* Add a policy for handling retrospective vetos
* Adds Hyper-V soft shutdown implementation
* Add API schema for v2.1/v3 multiple_create extension
* Return hydrated net info from novanet add/remove_fixed_ip calls
* Add API schema for v2.1/v3 availability_zone extension
* Add API schema for v2.1/v3 server_metadata API
* Fixes a Hyper-V list_instances localization issue
* Adds list_instance_uuids to the Hyper-V driver
* Change v3 admin_actions to v2.1
* Change v3 aggregate API to v2.1
* Convert v3 ExtendedAvailabilityZone api to v2.1
* Convert v3 hypervisor plugin to v2.1
* Convert server_usage v3 plugin to v2.1 API
* Convert v3 servers return_reservation_id behaviour to v2.1
* the headroom infomation is incomplete
* Port volumes extension to work in v2.1/v3 framework
* vmwareapi oslo.vmware library integration
* Allow forceDelete to delete running instances
* Port limits extension to work in v2.1/v3 framework
* Port image-size extension to work in v2.1/v3 framework
* Port v2 image_metadata extension to work in v2.1(v3) framework
* Port v2 images extension to work in v2.1(v3) framework
* Convert migrate_server v3 plugin to v2.1
* Changes V3 evacuate extension into v2.1
* console: add typed console objects
* virt: setup TCP chardevice in libvirt driver
* Remove snapshot_id from _volume_snapshot_create()
* Check min_ram and min_disk when boot from volume
* Add API schema for v2.1 "create a server" API
* InstanceNUMAToplogy object create remove uuid param
* Change v3 flavor_access to v2.1
* Convert rescue v3 plugin to v2.1 API
* Change v3 security_groups API to v2.1
* Changes V3 remote_console extension into v2.1
* Use common get_instance function in v2 consoles extension
* Add API schema for v2.1/v3 user_data extension
* Convert v3 cells API to v2.1
* Convert v3 server metadata plugin to v2.1
* Convert multiple-create v3 plugin to v2.1
* Convert v3 flavor extraspecs plugin to v2.1
* cmd: add nova-serialproxy service
* console: add serial console module
* Changes V3 server_actions extension into v2.1
* Change v3 version API to v2.1
* Change v3 shelve to v2.1
* Process power state syncs asynchronously
* Made unassigned networks visible in flat networking
* Add functions to setup user namespaced filesystems
* Adds nova-idmapshift cli utility
* Add idmap to libvirt config
* Allow hard reboots when still attempting a soft reboot
* Decrease amount of queries while adding aggregate metadata
* Adds Hyper-V serial console log
* Store original state when suspending
* Fix NoopQuotasDriver.get_settable_quotas()
* Use instance objects consistently in suspend tests
* Instance objects: fix indentation issue
* libvirt: Add method for getting host NUMA topology
* Add instance_extra table and related objects
* Change v3 availability-zone API to v2.1
* Move and generalize decorator serialize_args to nova.objects.base
* Convert v3 certificate API to v2.1
* Make neutronapi use NetworkRequest for allocate_for_instance()
* Use NetworkRequest objects through to nova-network
* Add extension block_device_mapping_v1 for v2.1
* Catch BDM related InvalidBDM exceptions for server create v2.1
* Changes block_device_mapping extension into v2.1
* Fix rootwrap for non openstack.org iqn's
* Let update_available_resource hit slave
* Plumb NetworkRequest objects through conductor and compute RPC
* Updates available resources after live migration
* Convert compute/api to use NetworkRequest object and list
* Refactor the servers API to use NetworkRequest
* Cells: Update set_admin_password for objects
* libvirt: reworks configdrive creation
* Handle non dict metadata in server metadata V2 API
* Fix wrong disk type limitation for disk IO throttling
* Use v2.1 URLs instead of v3 ones in API unit tests
* VMware: Add in support for CPU shares in event of resource contention
* VMware: add resource limits for CPU
* Refactor admin_action plugin and test cases
* Fix error in log when log exception in guestfs.py
* Remove concatenation with translated messages
* Port simple_tenant_usage into v2.1
* Convert console_output v3 plugin to v2.1
* GET servers API sorting enhancements common utilities
* Add _security_group_ensure_default() DBAPI method
* Fix instance boot when Ceph is used for ephemeral storage
* Add NetworkRequest object and associated list
* Remove use of str on exceptions
* Fix the current state name as 'shutting-down'
* Explicitly handle exception ConsoleTypeUnavailable for v2 consoles
* Convert v3 server diagnostics plugin to v2.1
* Porting v3 evacuate testcases to v2
* libvirt: Uses correct imagebackend for configdrive
* Add v2.1 API router and endpoint
* Change v3 keypairs API to v2.1
* Backport V3 hypervisor plugin unit tests to V2
* Remove duplicated negative factors in keypair test
* filter: add per-aggregate filter to configure max_instances_per_host
* Updated from global requirements
* Mask passwords in exceptions and error messages
* Make strutils.mask_password more secure
* A minor change to a comments
* Check vlan parameter is valid
* filter: add per-aggregate filter to configure disk_allocation_ratio
* Deprecate cinder_* configuration settings
* Allow attaching external networks based on configurable policy
* Fix CellStateManagerFile init to failure
* Change v3 extended_status to v2.1
* Use default quota values in test_quotas
* libvirt: add validation of migration hostname
* Add a Set and SetOfIntegers object fields
* Add numa_topology column to the compute_node table
* Preserve exception text during schedule retries
* Change v3 admin-password to v2.1
* Make Object FieldType from_primitive pass objects
* Change V3 access_ips extension into v2.1
* Update RESP message when failed to create flavor
* Cleanup of V2 console output tests and add missing tests
* Convert multinic v3 plugin to v2.1
* Change 'changes_since'/'changes-since' into v2.1 style for servers
* Backport v3 multinic tests to v2
* Change ViewBuilder into v2.1 for servers
* Change v3 agents API to v2.1
* Change v3 attach_interface to v2.1
* Backport V3 flavor extraspecs API unit tests to V2
* Return BadRequest instead of UnprocessableEntity for volumes API
* Convert create_backup v3 plugin to v2.1 API
* Update instance state after compute service died for rebuilded instance
* Make floatingip-ip-delete atomic with neutron
* Add v3 versions plugin unit test to v2
* Remove duplicated code in test_versions
* Change v3 hosts to v2.1
* Change v3 extended_server_attibutes to v2.1
* Make test_killed_worker_recover faster
* Change v3 flavor_rxtx to v2.1
* fix typo in docstring
* libvirt: driver used memory tests cleanup
* Avoid refreshing PCI devices on instance.save()
* Updated from global requirements
* Change v3 flavors to v2.1
* neutronv2: treat instance as object in deallocate_for_instance
* Fix class name for ServerGroupAffinityFilter
* Adds Hyper-V Compute Driver soft reboot implementation
* Add QuotaError handling to servers rebuild API
* Allow to create a flavor without specifying id
* XenAPI: Remove interrupted snapshots
* Fix typo in comment
* Fix V2 unit tests to test hypervisor API as admin
* Create compute api var at __init__
* libvirt: support live migrations of instances with config drives
* Change v3 os-user-data extension to v2.1
* Remove duplicated code in test_user_data
* Convert v3 server SchedulerHints plugin to v2.1
* Convert deferred_delete v3 plugin to v2.1 API
* Backport some v3 scheduler hints API UT to v2 API
* Change error status code for out of quota to be 403 instead of 413
* Correct seconds of a day from 84400 to 86400
* VMware: add adapter type constants
* Fix comment typo
* scheduler sends select_destinations notifications
* Fix for volume detach error when use NFS as the cinder backend
* objects: Add base test for obj_make_compatible()
* objects: Fix InstanceGroup.obj_make_compatible()
* Restore backward compat for int/float in extra_specs
* Convert v3 config drive plugin to v2.1
* Fix sample files miss for os-aggregates
* Backport v3 config_drive API unittest to v2 API
* Backport some v3 availability zones API UT to v2 API
* Handle non-ascii characters in spawn exception msg
* Log warning message if volume quota is exceeded
* Remove _instance_update usage in _build_instance
* Treat instance like an object in _build_instance
* Remove _instance_update usage in _default_block_device_names
* Add missing flags to fakelibvirt for migration
* Adds tests for Hyper-V Volume utils
* Fix ability to generate object hashes in test_objects.py
* Fix expected error details from jsonschema
* Extend the docstring for obj_make_compatible() with examples
* HyperV Driver - Fix to implement hypervisor-uptime
* Port os-server-groups extension to work in v2.1/v3 framework
* Fix the exception for a nonexistent flavor
* Add api extension for new network fields
* Use real exceptions for network create and destroy
* Support reserving ips at network create time
* Adds get_instance_disk_info to compute drivers
* Use rfc3986 library to validate URL paths and URIs
* Send create.end notification even if instance is deleted
* Allow three periodic tasks to hit slave
* Fixes Hyper-V unit test path separator issue
* Share common test settings in test_flavor_manage
* Shelve should give guests a chance to shutdown
* Rescue should give guests a chance to shutdown
* Resize should give guests a chance to shutdown
* Power off commands should give guests a chance to shutdown
* objects: Make use of utils.convert_version_to_tuple()
* tests: fix test_compute to have predictable service list
* libvirt: make sysinfo serial number configurable
* Fixes Hyper-V resize down exception
* Make usage_from_instances consider current usage
* VMware: ensure test case for init_host in driver
* Add some v2 agents API tests
* Libvirt: Do not raise ENOENT exception
* Add missing create() method on SecurityGroupRule object
* Add test for get_instance_disk_info to test_virt_drivers
* Move fake_quotas and fake_get_quotas into a class
* Objectify association in neutronapi
* Objectify last uses of direct db access in network/floating_ips
* Update migration defaults
* libvirt: reduce indentation in is_vif_model_valid_for_virt
* Fixes Hyper-V boot from volume root device issue
* Fixes Hyper-V vm state issue
* Imported Translations from Transifex
* Share unittest between v2 and v2.1 for hide_server_addresses extension
* Check compulsory flavor create parameters exist
* Treat instance like an object in _default_block_device_names
* Change 'image_ref'/'flavor_ref' into v2 style for servers
* Change 'admin_password' into v2 style for servers extension
* Image caching tests: use list comprehension
* Move _is_mapping to more central location
* Stop augmenting oslo-incubators default log levels
* Track object version relationships
* Remove final use of glance_stubs
* Removes GlanceClient stubs
* Pull transfer module unit tests from glance tests
* VMware: remove specific VC support from class VMwareVolumeOps
* VMware: remove Host class
* Image cache tests: ensure that assertEquals has expected param first
* VMware: spawn refactor _configure_config_drive
* VMware: refactor spawn() code to build a new VM
* VMware: Fix type of VM's config.hardware.device in fake
* VMware: Create fake VM with given datastore
* VMware: Remove references to ebs_root from spawn()
* VMware: Create VMwareImage object for image metadata
* Image caching: update image caching to use objects
* Report all objects with hash mismatches in a single go
* Include child_versions in object hashes
* Direct-load Instance.fault when lazy-loading
* VMware: Remove unused variable in test_configdrive
* Raise HTTPNotFound error from V2 cert show API
* Add dict and json methods to VirtNUMATopology classes
* virt: helper for processing NUMA topology configuration
* Raise Not Implemented error from V2 diagnostics API
* Make NovaObjectSerializer work with dicts
* Updated from global requirements
* neutronv2: treat instance like object in allocate_for_instance
* nova-network: treat instance like object in allocate_for_instance
* Treat instance like object in _validate_instance_group_policy
* Treat instance like an object in _prebuild_instance
* Treat instance like an object in _start_building
* Add graphviz to list of distro packages to install
* Fixes Hyper-V agent force_hyperv_utils_v1 flag issue
* ec2: Use S3ImageMapping object
* ec2: Add S3ImageMapping object
* Remove unused db api methods
* Get EC2 snapshot mappings with nova object
* Use EC2SnapshotMapping for creating mappings
* Add EC2SnapshotMapping object
* Fix NotImplementedError in floating-ip-list
* filter: add per-aggregate filter to configure max_io_ops_per_host
* Hacking: a new hacking check was added that used an existing number
* Fix hacking check for jsonutils
* VMware: revert deletion of cleanup_host
* Use flavor in confirm-resize to drop claim
* Add new db api get functions for ec2_snapshot
* Partial oslo-incubator sync -- log.py
* Add unit tests for libvirt domain creation
* Fix Trusted Filter to work with Mt. Wilson `vtime`
* Fix 202 responses to contain valid content
* Fix EC2 instance type for a volume backed instance
* libvirt: add serial ports config
* Split EC2 ID validator to validator per resource type
* libvirt: do not fail instance destroy, if mount_device is missing
* libvirt: persist lxc attached volumes across reboots and power down
* Resize block device after swap to larger volume
* Make API name validation failure deterministic
* VMware: spawn refactor add VirtualMachineConfigInfo
* VMware: fix crash when VC driver boots
* libvirt: Remove unecessary suffix defaulting
* Drop instance_group_metadata from the database
* Neutron v2 API: fix get_floating_ip_pools
* libvirt: Allow specification of default machine type
* Fix rebuild with cells
* Added hacking check for jsonutils
* Consistently use jsonutils instead of specific implementation
* Convert network/api.py uses of vif database functions to objects
* Convert last use of direct database instance fetching from network api
* libvirt: skip disk resize when resize_instance is False
* libvirt: fix _disk_resize to make sure converted image will be restored
* Backport some v3 certificate API unittest to v2 API
* Backport some v3 aggregate API unittest to v2 API
* Imported Translations from Transifex
* More informative nova-scheduler log after NoValidHost is caught
* Remove metadata/metadetails from instance/server groups
* Prepend /dev/ to root_device_name in get_next_device_name
* Lock attach_volume
* Convert network/api.py to use FloatingIP object
* Correct some IPAddress DB interaction in objects
* docs - Set pbr 'warnerrors' option for doc build
* docs - Fix errors,warnings from document generation
* Provide a quick way to run flake8
* Add support for select_destinations in Scheduler client
* Create a Scheduler client library
* VMware: handle case when VM snapshot delete fails
* Use common get_instance function in v2 attach_interface
* Add some v2 flavor_manage API tests
* Backport v3 api unittest into v2 api for attach_interface extension
* Fix the error status code of duplicated agents
* Handle ExternalNetworkAttachForbidden exception
* Allow empty volumes to be created
* docs - Fix errors,warnings from document generation
* docs - Fix exception in docs generation
* docs - Fix docstring issues in virt tree
* VMware: test_driver_api: Use local variables in closures
* VMware: Remove ds_util.build_datastore_path()
* Use v1 as default for cinder_catalog_info
* Fix live-migration failure in FC multipath case
* Optimize instance_floating_address_get_all
* Enhance PCI whitelist
* Add a missing instance=instance in compute/mgr
* Correct returned HTTP status code (Use 403 instead of 413)
* Fix wrong command for _rescan_multipath
* add log exception hints in some modules
* Fix extension parameters in test_multiple_create
* Standardize logging for v3 api extensions
* Standardize logging for v2 api extensions
* Add ListOfDictOfNullableString field type
* Enable terminate for EC2 InstanceInitiatedShutdownBehavior
* Remove duplicate test of passing glance params
* Convert glance unit tests to not use stubs
* Add decorator expected_errors for ips v3 extension
* Return 404 instead of 501 for unsupported actions
* Return 404 when floating IP pool not found
* Makes versions API output deterministic
* Work on document structure and doc building
* Catch NeutronClientException when showing a network
* Add API schema for v2.1/v3 security_groups extension
* Add API schema for v2.1/v3 config_drive extension
* Remove pre-icehouse rpc client API compat
* makes sure correct PCI device allocation
* Adds tests for Hyper-V VM Utils
* Make nova-api use quotas object for reservations
* VMware: implement get_host_ip_addr
* Boot an instance with multiple vnics on same network
* Optimize db.floating_ip_deallocate
* Fixes wrong usage of mock.assert_not_called()
* Code change for nova support cinder client v2
* libvirt: saving the lxc rootfs device in instance metadata
* Add method for deallocating networks on reschedule
* DB: use assertIsNotNone for unit test
* Add expire reservations in backport position
* Make network/api.py use Network object for associations
* Migrate test_glance from mox to mock
* Add instanceset info to StartInstance response
* Adds verbosity to child cell update log messages
* Removes unnecessary instructions in test_hypervapi
* Diagnostics: add validation for types
* Add missed discoverable policy rules for flavor-manage v3
* Rename rbd.py to rbd_utils.py in libvirt driver directory
* libvirt: make guestfs methods always return list of tuples
* Revert "Deallocate the network if rescheduling for
* libvirt: volume snapshot delete for network-attached disks
* libvirt: parse disk backing chains from domain XML
* Handle MacAddressInUseClient exception from Neutron when creating port
* Updated from global requirements
* Remove instance_info_cache_delete() from conductor
* Make spawn_n() stub properly ignore errors in the child thread work
* Update devref out-of-tree policy grammar error
* Compute: add log exception hints
* Handle NetworkAmbiguous error when booting a new instance with v3 api
* Handle FloatingIpPoolNotFound exception in floating ip creation
* Add policy on how patches and reviews go hand in hand
* Add hacking check for explicit import of _()
* VMware: Do not read opaque type for DVS network
* VMware: add in DVS VXLAN support
* Network: add in a new network type - DVS
* Network: interface attach and detach raised confusing exception
* Deprecate metadata_neutron_* configuration settings
* Log cleanups for nova.network.neutron.api
* Remove ESXDriver from Juno
* Only get image location attributes if including locations
* Use JSON instead of json in the parameter descriptions
* Add a retry_on_deadlock to reservations_expire
* docs - Fix doc build errors with SQLAlchemy 0.9
* docs - Fix indentation for RPC API's
* docs - Prevent eventlet exception during docs generation
* docs - Add an index for the command line utilities
* docs - fix missing references
* Change LOG.warn to LOG.debug in _shutdown_instance
* EC2: fixed AttributeError when metadata is not found
* Import Ironic scheduler filters and host manager
* EndpointNotFound deleting volume backend instance
* Fix nova boot failure using admin role for another tenant
* docs - Fix docstring issues
* Update scheduler after instance delete
* Remove duplicate index from block_device_mapping table
* Fix ownership checking in get_networks_by_uuid
* Raises NotImplementedError for LVM migration
* Convert network/api.py fixedip calls to use FixedIP object
* Convert network/api.py get calls to use Network object
* Add extensible resources to resource tracker (2)
* Make DriverBlockDevice save() context arg optional
* Improved error logging in nova-network for allocate_fixed_ip()
* Issue multiple SQL statements in separate engine.execute() calls
* Move check_image_exists out of try in _inject_data
* Fix fake_update in test_update_missing_server
* Add unit tests to cells conductor link
* Revert "libvirt: add version cap tied to gate CI testing"
* Use Ceph cluster stats to report disk info on RBD
* Add trace logging to allocate_fixed_ip
* Update devref setup docs for latest libvirt on ubuntu
* libvirt re-define guest with wrong XML document
* Improve logging when python-guestfs/libguestfs isn't working
* Update dev env docs on libvirt-dev(el) requirement
* Parse unicode cpu_info as json before using it
* Fix Resource tracker should report virt driver stats
* Fix _parse_datetime in simple tenant usage extension
* Add API schema for v2.1/v3 cells API
* Fix attaching config drive issue on Hyper-V when migrate instances
* Allow to unshelve instance booted from volume
* libvirt: add support for guest NUMA topology in XML config
* libvirt: remove pointless LibvirtBaseVIFDriver class
* libvirt: remove 'vif_driver' config parameter
* libvirt: remove use of CONF.libvirt.virt_type in vif.py
* Handle NotImplementedError in server_diagnostics v3 api
* Remove useless check in _add_retry_host
* Initialize Ironic virt driver directory
* Live migration is broken for NFS shared storage
* Fix ImportError during docs generation
* Updated from global requirements
* Extend API schema for "create a server" extensions
* Enable cloning for rbd-backed ephemeral disks
* Add include_locations kwarg to nova.image.API.get()
* Add index for reservations on (deleted, expire)
* VMWare Driver - Ignore datastore in maintenance mode
* Remove outdated docstring for nova.network.manager
* libvirt: remove 3 unused vif.py methods
* Turn on pbr's autodoc feature
* Remove api reference section in devref
* Deduplicate module listings in devref
* VMware: Resize operation fails to change disk size
* Use library instead of CLI to cleanup RBD volumes
* Move libvirt RBD utilities to a new file
* Properly handle snatting for external gateways
* Only use dhcp if enable_dhcp is set on the network
* Allow dhcp_server to be set from new field
* Set python hash seed to 0 in tox.ini
* Make devref point to official devstack vagrant repo
* Stop depending on sitepackages libvirt-python
* libvirt: driver tests use non-mocked BDMs
* Fix doc build errors in models.py
* Make several ec2 API tests inherit from NoDBTestCase
* Stub out rpc notifications in ec2 cloud unit tests
* Add standard constants for CPU architectures
* virt: switch order of args to assertEqual in guestfs test
* virt: move disk tests into a sub-directory
* virt: force TCG with libguestfs unless KVM is enabled in libvirt
* Do not pass instances without host to compute API
* Pass errors from detach methods back to api proc
* libvirt: add tests for _live_snapshot and _swap_volume methods
* libvirt: fill in metadata when launching instances
* Increase min required libvirt to 0.9.11
* Rollback quota when confirm resize concurrently completed
* API: Enable support for tenant option in nova absolute-limits
* libvirt: removing lxc specific disk mapping
* Method to filter non-root block device mappings
* VMware: remove local variable
* Use hypervisor hostname for compute trust level
* Remove unused cell_scheduler_method
* Fix the i18n for some warnings in compute utils
* Fix FloatingIP.save() passing FixedIP object to sqlalchemy
* Scheduler: throw exception if no configured affinity filter
* xenapi: Attach original local disks during rescue
* libvirt: remove VIF driver classes deprecated in Icehouse
* Move logs of restore state to inner logic
* Clean nova.compute.resource_tracker:_update_usage_from_instances
* Fix and Gate on E265
* Log translation hint for nova.api
* Fix duplicated images in test_block_device_mapping
* Add Hyper-V driver in the "compute_driver" option description
* reduce network down time during live-migration
* Augment oslo's default log levels with nova specific ones
* Make the coding style consistent with other Controller in plugins/v3
* Fix extra metadata didn't assign into snapshot image
* Add i18n log markers in disk api
* VMware: improve log message for attachment of CDROM
* Raise NotImplemented default-security-group-rule api with neutron
* vmwareapi: remove some unused fake vim methods
* Correct image_metadata API use of nova.image.glance
* Revert "Add extensible resources to resource tracker"
* Update database columns nullable to match model
* Updated from global requirements
* Make quotas APIv3 extension use Quotas object for create/update
* Make quotas APIv2 extension use Quotas object for create/update
* Add quota limit create/update methods to Quotas object

2014.2.b2
---------

* libvirt: VM diagnostics (v3 API only)
* Add ibmveth model as a supported network driver for KVM
* libvirt: add support for memory tuning in config
* libvirt: add support for memory backing parameters
* libvirt: add support for per-vCPU pinning in guest XML
* libvirt: add parsing of NUMA topology in capabilities XML
* handle AutoDiskConfigDisabledByImage at API layer
* Rollback quota in os_tenant_network
* Raise specific error of network IP allocation
* Convert to importutils
* Catch CannotResizeDisk exception when resize to zero disk
* VMware: do not cache image when root_gb is 0
* Turn periodic tasks off in all unit tests
* Rename virtutils to the more common libvirt_utils
* Check for resize path on libvirt instance delete
* Return status for compute node
* servers list API support specify multi-status
* Deprecate scheduler prep_resize
* Updated from global requirements
* Fix nova cells exiting on db failure at launch
* Remove unneeded calls in test_shelve to start instances
* Correct InvalidAggregateAction reason for Xen
* Handle a flavor create failed better
* Add valid method check for quota resources
* VMware: power_off_instance support
* Add debug log for availability zone filter
* Fix typo
* Fix last of direct use of object modules
* Check instance state before attach/detach interface
* Fix error status code for cloudpipe_update
* Fix unit tests related to cloudpipe_update
* Add API schema for v2.1/v3 reset_server_state API
* Adjust audit logs to avoid negative mem/cpu info
* Re-add H803 to flake8 ignore list
* Fix nova/pci direct use of object modules
* Gate on F402/pep8
* Inject expected results for IBM Power when testing bus devices
* Add extensible resources to resource tracker
* libvirt: define XML schema for recording nova instance metadata
* Sync loopingcall from oslo
* Add APIv2 support to make host optional on evacuate
* Add differencing vhdx resize support in Hyper-V Driver
* Imported Translations from Transifex
* Add context as param to cleanup function
* Downgrade the warn log in network to debug
* Correct use of nova.image.glance in compute API
* Keep Migration status in automatic confirm-resize
* Removes useless stub of glanceclient create
* Remove rescue/unrescue NotImplementedError handle
* Add missing foreign key on pci_devices.compute_node_id
* Revert "Add missing image to instance booted from volume"
* Add debug log for pci passthrough filter
* Cleanup and gate on hacking E711 and E712 rule
* Keep resizing&resized instances when compute init
* Commit quota when deallocate floating ip
* Remove unnecessary error log in cell API
* Remove stubs in favor of mock in test_policy
* Remove translation for debug message
* Fix error status code for agents
* Remove warn log for over quota
* Use oslo.i18n
* Cleanup: remove unused argument
* Implement methods to modify volume metadata
* Minor tweaks to hypervisor_version to int
* update ignore list for pep8
* Add decorator expected_errors for v3 attach_interfaces
* Add instance to debug log at compute api
* Don't truncate osapi_glance_link or osapi_compute_link prefixes
* Add decorator expected_errors to V3 servers core
* Correctly reject request to add lists of hosts to an aggregate
* Do not process events for instances without host
* Fix Cells ImagePropertiesFilter can raise exceptions
* libvirt: remove flawed get_num_instances method impl
* libvirt: remove unused list_instance_ids method
* libvirt: speed up _get_disk_over_committed_size_total method
* Partial oslo-incubator sync
* VMware: Remove unnecessary deepcopy()s in test_configdrive
* VMware: Convert vmops to use instance as an object
* VMware: Trivial indentation cleanups in vmops
* VMware: use datastore classes in file_move/delete/exists, mkdir
* VMware: use datastore classes get_allowed_datastores/_sub_folder
* VMware: DatastorePath join() and __eq__()
* VMware: consolidate datastore code
* VMware: Consolidate fake_session in test_(vm|ds)_util
* Make BDM dict __init__ behave more like a dict
* VMware: support the hotplug of a neutron port
* Deallocate the network if rescheduling for Ironic
* Make sure that metadata handler uses constant_time_compare()
* Enable live migration unit test use instance object
* move the cloudpipe_update API v2 extension to use objects
* Avoid possible timing attack in metadata api
* Move injected_network_template config to where it's used
* Don't remove delete_on_terminate volumes on a reschedule
* Defer raising an exception when deleting volumes
* Xen: Cleanup orphan volume connections on boot failure
* Adds more policy control to cells ext
* shelve doesn't work on nova-cells environment
* libvirt: add migrateToURI2 method to fakelibvirt
* libvirt: fix recent test changes to work on libvirt < 0.9.13
* Update requirements to include decorator>=3.4.0
* Cleanup and gate on hacking E713 rule
* libvirt: add version cap tied to gate CI testing
* Small grammar fix in libvirt/driver.py. fix all occurrences
* Correct exception for flavor extra spec create/update
* Fixes Hyper-V SCSI slot selection
* xenapi: Use netuils.get_injected_network_template
* libvirt: Support IPv6 with LXC
* Improve shared storage checks for live migration
* XenAPI: VM diagnostics for v3 API
* Move retry of prep_resize to conductor instead of scheduler
* Retry db.api.instance_destroy on deadlock
* Translations: add LC to all LOG.critical messages
* Remove redundant code in Libvirt driver
* Virt: fix typo (flavour should be flavor)
* Fix and gate on H305 and H307
* Remove unused instance variables from HostState
* Send compute.instance.create.end after launched_at is set
* VMware: validate the network_info is defined
* Security groups: add missing translation
* Standardization of nova.image.API.download
* Catch InvalidAggregateAction when deleting an aggregate
* Restore ability to delete aggregate metadata
* Nova-api service throws error when SIGHUP is sent
* Remove cell api overrides for lock and unlock
* Don't mask out HostState details in WeighedHost
* vmware: VM diagnostics (v3 API only)
* Use pool/volume_name notation when deleting RBD volumes
* Add instanceset info to StopInstance response
* Change compute updates from periodic to on demand
* Store volume backed snapshot in current tenant
* libvirt+lxc: Unmount guest FS from host on error
* libvirt: speed up get_memory_mb_used method
* libvirt: speed up get_vcpus method
* libvirt: speed up get_all_block_devices method
* libvirt: speed up list_instances method
* libvirt: speed up list_instance_uuids method
* Updated from global requirements
* Fix interfaces template for two interfaces and IPv6
* Fix error status code for multinic
* libvirt: fix typo in fakelibvirt listAllDomains()
* Refactors VIF configuration logic
* Add missing test coverage for MultiplePortsNotApplicable compute/api
* Make the block device mapping retries configurable
* Catch image and flavor exceptions in _build_and_run_instance
* Restore instance flavor info when driver finish_migration fails
* synchronize 'stop' and power state periodic task
* Fix more re-definitions and enable F811/F813 in gate
* Prepend '/dev/' to supplied dev names in the API
* Handle over quota exception from Neutron
* Remove pause/unpause NotImplementedError API layer
* Add test cases for 2 block_device functions
* Make compute api use util.check_string_length
* add comment about why snapshot/backup have no lock check
* VM diagnostics (v3 API only)
* VM diagnostics: add serializer to Diagnostics object
* VM diagnostics: add methods to class to update diagnotics
* object-ify API v2 availability_zone extension
* object-ify availability_zones
* add get_by_metadata_key to AggregateList object
* xenapi: make boot from volume use volumeops
* libvirt: Avoid Glance.show on hard_reboot
* Add host_ip to compute node object
* VMware: move fake.py to the test directory
* libvirt: convert cpuset XML handling to use set instead of string
* virt: add method for formatting CPU sets to strings
* Fixes rbd backend image size
* Prevent max_count > 1 and specified ip address as input
* Add aggregates.rst to devref index
* VMware: virt unrescue method now supports objects
* VMware: virt rescue method now supports objects
* Remove duplicate python-pip from Fedora devref setup doc
* Do not fail cell's instance deletion, if it's missing info_cache
* libvirt: more efficient method to list domains on host
* vmwareapi: make method signatures match parent class
* Remove duplicate keys from dictionaries
* virt: split CPU spec parsing code out into helper method
* virt: move get_cpuset_ids into nova.virt.hardware
* Fix duplicate definitions of variables/methods
* change the firewall debugging for clarity
* VMware: consolidate common constants into one file
* Require posix_ipc for lockutils
* hyperv: make method signatures match parent class
* Format eph disk with specified format in libvirt
* Resolve import dependency in consoleauth service
* Add 'anon' kwarg to FakeDbBlockDeviceDict class
* Make cells rpc bdm_update_or_create_at_top use BDM objects
* Improve BlockDeviceMapping object cells awareness
* Add support for user_id based authentication with Neutron
* VMware: add in test utility to get correct VM backing
* Change instance disappeared during destroy from Error to Warning
* VMware: Fix race in spawn() when resizing cached image
* VMware: add support for driver method instance_exists
* Object-ify APIv3 agents extension
* Object-ify APIv2 agents extension
* Avoid re-adding iptables rules for instances that have disappeared
* libvirt: Save device_path in connection_info when booting from volume
* sync periodic_task fix from incubator
* Fix virt BDM __setattr__ and __getattr__
* Handle InstanceUserDataTooLarge at api layer
* Updated from global requirements
* Mask node.session.auth.password in volume.py _run_iscsiadm debug logs
* Nova api service doesn't handle SIGHUP properly
* check ephemeral disk format at libvirt before use
* Avoid referencing stale instance/network_info dicts in firewall
* Use mtu setting from table instead of flag
* Add debug log for core_filter
* VMware: optimize VM spawn by caching the vm_ref after creating VM
* libvirt: Add configuration of guest VCPU topology
* virt: add helper module for determining VCPU topology
* Change the comments of SOFT_DELETED race condition
* Fix bad log message with glance client timeout
* Move the instance_type_id judgment to the except-block
* Update port binding when unshelve instance
* Libvirt: Added suffix to configdrive_path required for rescue
* sync policy logging fix from incubator
* Sync process utils from olso
* Remove instance_uuids argument to _schedule
* Add __repr__ handler for NovaObjects
* Pass instance to _reschedule rather than instance_uuid
* Pass instance to _set_instance_error_state
* Pass instance to _error_out_instance_on_exception
* Add APIv3 support to make host optional on evacuate
* Move rebuild to conductor and add find host logic
* VMware: validate that VM exists on backend prior to deletion
* VMware: remove duplicate key from test_instance dict
* ConfigDriveBuilder refactor for tempdir cleanliness
* VMware: cleanup the constructors of the compute drivers
* Fix wrong lock name for operating instance external events
* VMware: remove unused parameter 'network_info'
* VM diagnostics: introduce Diagnostics model object
* Fixes internal server error for add/remove tenant flavor access request
* add repr for event objects
* Sync oslo lockutils to nova
* Neutronv2 api does not support neutron without port quota
* Be explicit about objects in _shutdown_instance()
* Pass instance object into _shutdown_instance()
* Skip none value attributes for ec2 image bdm output
* Fixed wrong assertion in test_vmops.py
* Remove a not used function _get_ip_by_id
* make lifecycle event logs more clear
* xenapi: make method signatures match parent class
* libvirt: make method signatures match parent class
* virt: add test helper for checking public driver API method names
* virt: fix signature of set_admin_password method
* virt: use context & instance as param names in migrate APIs
* virt: add get_instance_disk_info to virt driver API
* vmwareapi: remove unused update_host_status method
* libvirt: remove hack from ensure_filtering_rules_for_instance
* libvirt: remove volume_driver_method API
* libvirt: add '_' prefix to remaining internal methods
* Imported Translations from Transifex
* Fake driver: remove unused method get_disk_available_least
* Baremetal driver: remove unused states
* Fix nova/network direct use of object modules
* Fix rest of API objects usage
* Fix rest of compute objects usage
* Clean conntrack records when removing floating ip
* Updated from global requirements
* Enforce task_state is None in ec2 create_image stop instance wait loop
* Update compute rpcapi tests to use instance object instead of dict
* Fix run_instance() rpc method to pass instance object
* Fix error in rescue rpcapi that prevents sending objects
* add checksums to udp independent of /dev/vhost-net
* Use dot notation to access instance object fields in ec2 create_image
* vmwareapi: remove unused fake vim logout method
* vmware: remove unused delete_disk fake vim method
* Revert "Sync revert and finish resize on instance.uuid"
* Add test cases for block_device
* Add assert_called check for "brclt addif" test
* Log when nova-conductor connection established
* Xen: Remove extraneous logging of type information
* Fix agent_id with string type in API samples files for os-agents v2
* Fix update agent return agent_id with string for os-agents v3
* VMware: Fix fake raising the wrong exception in _remove_file
* VMware: refactor get_datastore_ref_and_name
* libvirt: introduce separate class for cpu tune XML config
* libvirt: test setting of CPU tuning data
* Make Evacuate API use Instance objects
* VMware: create utility function for reconfiguring a VM
* effectively disable libvirt live snapshotting
* Fix exception raised when a requested console type is disabled
* Add missing image to instance booted from volume
* Use default rpc_response_timeout in unit tests
* vmware: Use exc_info when logging exceptions
* vmware: Reuse existing StorageError class
* vmware: Refactor: fold volume_util.py into volumeops.py
* Use ebtables to isolate dhcp traffic
* Replace nova.utils.cpu_count() with processutils.get_worker_count()
* Sync log and processutils from oslo
* libvirt: add '_' prefix to host state information methods
* libvirt: add '_' prefix to some get_host_* methods
* Deprecate and remove agent_build_get_by_triple()
* Object-ify xenapi driver's use of agent_build_get_by_triple()
* Add Agent object
* Move the error check for "brctl addif"
* Add API schema for v2.1/v3 quota_sets API
* Add API schema for v2.1/v3 flavors_extraspecs API
* Add API schema for v2.1/v3 attach_interfaces API
* Add API schema for v2.1/v3 remote_consoles API
* Use auth_token from keystonemiddleware
* Use _set_instance_obj_error_state in compute manager set_admin_password
* api: remove unused function
* api: remove useless get_actions() in consoles
* Do not allow resize to zero disk flavor
* api: remove dead code in WSGI XML serializer
* Updated from global requirements
* Standardize logging for nova.virt.libvirt
* Fix log debug statement in compute manager
* Add API schema for v2.1/v3 aggregates API
* Fix object code direct use of other object modules
* Fix the rest of direct uses of instance module objects
* Imported Translations from Transifex
* Add API schema for v2.1/v3 flavor_manage API
* Forcibly set libvirt uri in baremetal virtual power driver
* Synced jsonutils and its dependencies
* Sync revert and finish resize on instance.uuid
* Object-ify APIv3 availability_zone extension
* Fix bug in TestObjectVersions
* libvirt: add '_' prefix to all get_guest_*_config methods
* libvirt: remove unused 'get_disks' method
* Downgrade some exception LOG messages in the ec2 API
* Conductor: remove irrelevant comment
* Added statement for ... else
* Avoid traceback logs from simple tenant usage extension
* Fix detaching pci device failed
* Adds instance lock check for live migrate
* Don't follow HTTP_PROXY when talking to localhost test server
* Correct the variable name in trusted filter
* Target host in evacuate can't be the original one
* Add API schema for v2.1/v3 hosts API
* Object-ify APIv3 flavor_extraspecs extension
* Object-ify APIv2 flavorextraspecs extension
* Catch permission denied exception when update host
* Fix resource cleanup in NetworkManager.allocate_fixed_ip
* libvirt: Support snapshot creation via libgfapi
* Allow evacuate from vm_state=Error
* xenapi: reorder volume_utils
* Replace assertTrue/False with assertEqual/NotEqual
* Replace assert* with more suitable asserts in tests
* Replace assertTrue/False with assertIn/NotIn
* VMware: remove unused code in vm_util.py
* Not count disabled compute node for statistics
* Instance and volume cleanup when a build fails
* wrap_instance_event() shouldn't swallow return codes
* Don't replace instance object with dict in _allocate_network()
* Determine shared ip from table instead of flag
* Set reasonable defaults for new network values
* Adds network fields to object
* Add new fields to the networks table
* Log exception if max scheduling attempts exceeded
* Make remove_volume_connection() use objects
* Create lvm.py module containing helper API for LVM
* Reduce unit test times for glance
* Should not delete active snapshot when instance is terminated
* Add supported file system type check at virt layer
* Don't store duplicate policies for server_group
* Make exception handling in get_image_metadata more specific
* live migrate conductor tasks to use nova.image.API
* Fix Flavor object extra_specs and projects handling
* Drop support for scheduler 2.x rpc interface
* Drop support for conductor 1.x rpc interface
* Deprecate glance_* configuration settings
* Update websocketproxy to work with websockify 0.6
* XenAPI: disable/enable host will be failed when using XenServer
* Remove traces of now unused host capabilities from scheduler
* Fix BaremetalHostManager node detection logic
* Add missing stats info to BaremetalNodeState
* Replace assertTrue(not *) with assertFalse(*)
* Clean nova.compute.api.API:_check_num_instances_quota
* Fix the duplicated image params in a test
* Imported Translations from Transifex
* Fix "fixed_ip" parameters in unit tests
* Removes the use of mutables as default args
* Add API schema for v2.1/v3 create_backup API
* Catch ProcessExecutionError in revoke_cert
* Updated from global requirements
* Sync oslo lockutils to nova
* devref policy: code is canonical source of truth for API
* Log cleanups for nova.virt.libvirt.volume
* Log cleanups for nova.virt.libvirt.imagecache
* Rename VolumeMapping to EC2VolumeMapping
* ec2: Convert to use EC2InstanceMapping object
* Add EC2InstanceMapping object for use in EC2
* Add hook for network info update
* Enhance and test exception safety in hooks
* Object-ify server_password APIv3 extension
* Object-ify server_password APIv2 extension
* Move the fixed_ips APIv2 extension to use objects
* Completely object-ify the floating_ips_bulk V2 extension
* Add bulk create/destroy functionality to FloatingIP
* Cleanup and gate on pep8 rules that are stricter in hacking 0.9
* VMware: update file permissions and mode
* Downgrade log level when create network failed
* Updated from global requirements
* libvirt: Use VIR_DOMAIN_AFFECT_LIVE for paused instances
* Initialize objects field in ObjectsListBase class
* Remove bdms from run_instance RPC conductor call
* Sync "Prevent races in opportunistic db test cases"
* Imported Translations from Transifex
* Check the network_info obj type before invoke wait function
* Migrate nvp-qos to generic name qos-queue
* Add test for HypervisorUnavailable on conductor
* Test force_config_drive as a boolean as last resort
* Add helper functions for getting local disk
* Add more logging to nova-network
* Make resize raise exception when no valid host found
* Fix doc for service list
* Handle service creation race by service workers
* Add configurable HTTP timeout to cinder API calls
* Prevent clean-up of migrating instances on compute init
* Deprecate neutron_* configuration settings
* Skip migrations test_walk_versions instead of pass
* Remove duplicate code in Objects create() function
* Fix object change detection
* Fix object leak in nova.tests.objects.test_fields.TestObject
* Failure during termination should always leave state as error()
* Make check_instance_shared_storage() use objects
* Save connection info in libvirt after volume connect
* Remove unused code from test_compute_cells
* libvirt: Don't pass None for image_meta parameter in tests
* Revert "Allow admin user to get all tenant's floating IPs"
* libvirt: Remove use of db for flavor extra specs in tests
* libvirt: Close opened file explicitly
* Network: ensure that ports are 'unset' when instance is deleted
* Don't translate debug level logs in nova
* maint: Fixes wrong docstring of method get_memory_mb_used
* Ensure changes to api.QUOTA_SYNC_FUNCTIONS are restored
* Fix the wrong dest of 'vlan' option and add new 'vlan_start' option
* Add deprecation warning to nova baremetal virt driver
* Fixes typo error in Nova
* Attach/detach interface to paused instance with affect live flag
* Block device API missing translations for exceptions
* Enabled swap disk to be resized when resizing instance
* libvirt: return the correct instance path while cleanup_resize
* Remove the device handling from pci device object
* Use new pci device handling code in pci_manager
* Separate the PCI device object handling code
* xenapi: move find_vbd_by_number into volume utils
* Virt: remove unnecesary return code
* Fixes hyper-v volume attach when host is AD member
* Remove variability from object change detection unit test
* Remove XML namespace from some v3 extensions

2014.2.b1
---------

* xenapi: Do not retry snapshot upload on 500
* Fix H401,H402 violations and re-enable gating
* Bump hacking to 0.9.x series
* Change listen address on libvirt live-migration
* Make get_console_output() use objects
* Add testing for hooks
* Handle string types for InstanceActionEvent exc_tb serialization
* Revert "Remove broken quota-classes API"
* Revert "Remove quota-class logic from context and make unit tests pass"
* Fix cold-migrate missing retry info after scheduling
* Disable rescheduling instance when no retry info
* Fix infinitely reschedule instance due to miss retry info
* Use VIF details dictionary to get physical_network
* Fix live_migration method's docstring
* Add subnet routes to network_info when Neutron is used
* fix nova test_enforce_http_true unit test
* novncproxy: Setup log when start nova-novncproxy
* Make sure domain exists before referencing it
* Network: add instance to the debug statement
* V3 Pause: treat case when driver does not implement the operation
* Don't translate debug level logs in nova.virt
* Remove duplicate method
* websocketproxy: remove leftover debug output
* Remove unnecessary else block in compute manager set_admin_password
* Treat instance objects like objects in set_admin_password flow
* Move set_admin_password tests from test_compute.py to api/mgr modules
* Fix a wrong comment in the code
* maint: correct docstring parameter description
* libvirt: Remove dated docstring
* Add unit tests for ipv4/ipv6 format validation
* Cleanup allocating networks when InstanceNotFound is raised
* Add test to verify ironic api contracts
* VMware: spawn refactor - phase 1 - test for spawn
* Revert "Fix migration and instance resize update order"
* Simplify filter_scheduler.populate_retry()
* libvirt: Use os_command_line when kernel_id is set
* libvirt: Make nwfilter driver use right filterref
* libvirt: convert cpu features attribute from list to a set
* Don't log TRACE info in notify_about_instance_usage
* xenapi: add tests for find_bad_volumes
* Revert "Remove traces of now unused host capabilities from scheduler"
* Check the length of aggregate metadata
* Add out of tree support dev policy
* Deprecate instance_get_by_uuid() from conductor
* Make metadata password routines use Instance object
* Make SecurityGroupAPI use Object instead of instance_get_by_uuid()
* Add development policies section to devref
* Add read_only field attribute
* Fix api direct use of instance module objects
* Fix direct use of block_device module objects
* Fix InstanceActionEvent traceback parameter not serializable
* Fix state mutation in cells image filter
* libvirt: split and test finish_migration disk resize
* Use no_timer_check with soft-qemu
* Add missing translation support
* Update HACKING.rst to include N320
* Add tests to avoid inconsistent extension names
* VMware: spawn refactor - Datastore class
* VMware: remove dsutil.split_datastore_path
* VMware: spawn refactor - DatastorePath class
* Updated from global requirements
* VMware: Fix memory leaks caused by caches
* Allow user to specify image to use during rescue - V3 API changes
* VMware: create utility functions
* Check if volume is bootable when creating an instance
* VMware: remove unused parameters in imagecache
* xenapi: virt unrescue method now supports objects
* libvirt: virt unrescue method now supports objects
* libvirt: virt rescue method now supports objects
* xenapi: virt rescue method now supports objects
* Remove useless codes for server_group
* Catch InstanceInfoCacheNotFound during build_instances
* Do not replace the aggregate metadata when updating az
* Move oslotest to test only requirements
* libvirt: merge two utils tests files
* libvirt: remove redundant 'libvirt_' prefix in test case names
* xenapi: refactor detach volume
* Add API schema for v2.1/v3 migrate_server API
* Adds IVS unit tests for new VIF firewall logic
* Don't set CONF options directly in unit tests
* Fix docstring typo in need_legacy_block_device_info
* Revert "Partially remove quota-class logic from nova.quotas"
* Revert "Remove quota_class params from rest of nova.quota"
* Revert "Remove quota_class db API calls"
* Revert "Convert address to str in fixed_ip_obj.associate"
* String-convert IPAddr objects for FixedIP.attach()
* Updated from global requirements
* Run instance root device determination fix
* xenapi: tidy up volumeops tests
* Don't return from a finally block
* Support detection of fixed ip already in use
* Rewrite nova policy to use the new changes of common policy
* Treat instance objects as objects in unrescue API flow
* Treat instance objects as objects in rescue API flow
* Refactor test_rescue_unrescue into compute api/manager unit tests
* Sync oslo network utils
* Fix EC2 not found errors for volumes and snapshots
* xenapi: refactor volumeops attach
* xenapi: remove calls to call_xenapi in volumeops
* xenapi: move StorageError into global exception.py
* Virt: ensure that instance_exists uses objects
* Use objects through the run_instance() path
* Deprecate run_instance and remove unnecessary code
* Change conductor to cast to build_and_run_instance
* Fix migration and instance resize update order
* remove cpu feature duplications in libvirt
* Add unit test trap for object change detection
* Sync periodic_task from oslo-incubator
* VCDriver - Ignore host in Maintenance mode in stats update
* Enable flake8 F841 checking
* Imported Translations from Transifex
* Reverse order of cinder.detach() and bdm.delete()
* Correct exception info format of v3 flavor manage
* Imported Translations from Transifex
* Handle NetworkInUse exception in api layer
* Correct exception handling when create aggregate
* Properly skip coreutils readlink tests
* Record right action name while migrate
* Imported Translations from Transifex
* Fix for multiple misspelled words
* Refactor test to ensure file is closed
* VM in rescue state must have a restricted set of actions
* versions API: ignore request with a body
* xenapi: fix live-migrate with volume attached
* Add helper methods to convert disk
* XenAPI: Tolerate multiple coalesces
* Add helpers to create per-aggregate filters
* Ensure live-migrate reverts if server not running
* Raise HTTPInternalServerError when boot_from_volume with cinder down
* Imported Translations from Transifex
* [EC2]Correct the return status of attaching volume
* Fix security group race condition while creating rule
* VMware: spawn refactor - phase 1 - copy_virtual_disk
* Catch InstanceNotFound exception if migration fails
* Inject expected results for IBM Power when testing bus
* Fix InstanceActionTestCase on PostgreSQL/MySQL
* Fix ReservationTestCase on PostgreSQL
* VMware: deprecate ESX driver from virt configuration
* Add new ec2 instance db API calls
* Remove two unused db.api methods
* Fix direct use of aggregate module objects
* Fix tests/compute direct use of instance module objects
* share neutron admin auth tokens
* Fix nova image-show with queued image
* Catch missing Glance image attrs with None
* Align internal image API with volume and network
* Do not wait for neutron event if not powering on libvirt domain
* Mask block_device_info auth_password in virt driver debug logs
* Remove all mostly untranslated PO files
* Payload meta_data is empty when remove metadata
* Handle situation when key not memcached
* Fix nova/compute direct use of instance module objects
* Address issues with objects of same name
* Register objects in more services
* Imported Translations from Transifex
* Default dhcp lease time of 120s is too short
* Add VIF mac address to fixed_ips in notifications
* Call _validate_instance_group_policy in _build_and_run_instance
* Add refresh=True to get_available_nodes call in build_and_run_instance
* Add better coverage support under tox
* remove unneeded call to network_api on detach_interface
* Cells: Pass instance objects to build_instances
* XenAPI: Add logging information for cache/download duration
* Remove spaces from SSH public key comment
* Make hacking test more accurate
* Fix security group race condition while listing and deleting rules
* On rebuild check for null image_ref
* Add a reference to the nova developer documentation
* VMware: use default values in get_info() when properties are missing
* VMware: uncaught exception during snapshot deletion
* Enforce query order for getting VIFs by instance
* Fix typo in comment
* Allow admin user to get all tenant's floating IPs
* Defer applying iptable changes when nova-network start
* Remove traces of now unused host capabilities from scheduler
* Add log translation hints
* Imported Translations from Transifex
* Fix CIDR values denoting hosts in PostgreSQL
* Sync common db and db/sqlalchemy
* Remove quota_class db API calls
* Remove quota_class params from rest of nova.quota
* Fix wrong quota calculation when deleting a resizing instance
* Ignore etc/nova/nova.conf.sample
* Fix wrong method name assert_called_once
* Correct pci resources log
* Downgrade log when attach interface can't find resources
* Fixes Hyper-V iSCSI target login method
* VMware: spawn refactor - phase 1 - fetch_image
* vmware:Don't shadow builtin function type
* Partially remove quota-class logic from nova.quotas and test_quotas
* Convert address to str in fixed_ip_obj.associate
* Accurate exception info in api layer for aggregate
* minor corrections to devref rpc page
* libvirt: Handle unsupported host capabilities
* Fix the duplicated extension summaries
* Imported Translations from Transifex
* Raise more information on V2 API volumes when resource not found
* Remove comments since it's pointless
* Downgrade and fix log message for floating ip already disassociated
* Fix wrong method name for test_hacking
* Imported Translations from Transifex
* Add specific regexp for timestamps in v2 xml
* VMWare: spawn refactor - phase 1 - create_virtual_disk
* VMware: spawn refactor - phase 1 - power_on_vm
* Move tests into test_volume_utils
* Tidy up xenapi/volume_utils.py
* Updated from global requirements
* VMware: Fix usage of an alternate ESX/vCenter port
* VMware: Add check for datacenter with no datastore
* Remove unused instance_update() method from virtapi
* Make baremetal driver use Instance object for updates
* Rename quota_injected_file_path_bytes
* Imported Translations from Transifex
* Fixes arguments parsing when executing command
* Remove explicit dependency on amqplib
* Deprecate action_event_*() from conductor
* Remove conductor usage from compute.utils.EventReporter
* Unit test case for more than 1 ephemeral disks in BDM
* Network: replace neutron check with decorator
* Update links in README
* Add mailmap entry
* XenAPI: Remove unneeded instance argument from image downloading
* XenAPI: adjust bittorrent settings
* Fix a minor comments error
* Code Improvement
* Fix the explanation of HTTPNotFound for cell showing v2 API
* Add Nova API Sample file & test for get keypair
* Add a docstring to hacking unit tests
* Make libvirt driver use instance object for updates
* Make vmwareapi/vmops use Instance object for updates
* Convert xenapi/vmops uses of instance_update to objects
* Make xenapi agent code use Instance object for updates
* Check object's field
* Use Field in fixed_ip
* Remove logging in libvirt _connect_auth_cb to avoid eventlet locking
* Fix v3 API extension names for camelcase
* VMware: prevent image snapshot if no root disk defined
* Remove unnecessary cleanup in test
* Raise HTTPForbidden from os-floating-ips API rather than 404
* Improve hacking rule to avoid author markers
* Remove and block DB access in dhcpbridge
* Improve conductor error cases when unshelving
* Dedup devref on unit tests
* Shrink devref.unit_tests, since info is in wiki
* Fix calls to mock.assert_not_called()
* VMware: reduce unit test times
* Fix wrong used ProcessExecutionError exception
* Clean up openstack-common.conf
* Revert "Address the comments of the merged image handler patch"
* Remove duplicated import in unit test
* Fix security group list when not defined for an instance
* Include pending task in log message on skip sync_power_state
* Make cells use Fault obj for create
* libvirt: Handle `listDevices` unsupported exception
* libvirt: Stub O_DIRECT in test if not supported
* Deprecate instance_fault_create() from conductor
* Remove conductor usage from add_instance_fault_from_exc()
* Add create() method to InstanceFault object
* Remove use of service_* conductor calls from xenapi host.py
* Updated from global requirements
* Optimize validate_networks to query neutron only when needed
* Remove quota-class logic from context and make unit tests pass
* VMware: spawn refactor - phase 1 - execute_create_vm
* xenapi: fixup agent tests
* Don't translate debug level logs in nova.spice, storage, tests and vnc
* libvirt: Refresh volume connection_info after volume snapshot
* Fix instance cross AZ check when attaching volumes
* Raise descriptive error for over volume quota
* Fix broken version responses
* Don't translate debug level logs in objectstore, pci, rdp, servicegroup
* Don't translate debug level logs in cloudpipe, hacking, ipv6, keymgr
* Don't translate debug level logs in nova.cert, console and consoleauth
* Don't translate debug level logs in nova.cmd and nova.db
* Don't translate debug level logs in nova.objects
* Don't translate debug level logs in nova.compute
* Fix bad Mock calls to assert_called_once()
* VCDriver - No longer returns uptime due to multiple hosts
* Make live_migration use instance objects
* wrap_check_security_groups_policy is already defined
* Updated from global requirements
* Don't translate debug level logs in nova.conductor
* Don't translate debug level logs in nova.cells
* Use strtime() specific timestamp regexp
* Use datetime object for fake network timestamps
* Use datetime object for stub created_at timestamp
* Verify created_at cloudpipe timestamp is isotime
* Verify next-available limit timestamps are isotime
* Verify created/updated timestamps are isotime
* Use timeutils.isotime() in images view builder
* Use actual fake timestamp in API templates
* Normalize API extension updated timestamp format
* Regenerate API samples for GET /extensions
* objects: remove unused utils module
* objects: restore some datetime field comments
* Add fault wrapper for rescue function
* Add x-openstack-request-id to nova v3 responses
* Remove unnecessary wrapper for 5 compute APIs
* Update block_device_info to contain swap and ephemeral disks
* Hacking: add rule number to HACKING.rst
* Create the image mappings BDMs earlier in the boot
* Delete in-process snapshot when deleting instance
* Imported Translations from Transifex
* Fixed many typos
* VMware: remove unneeded code
* Rename NotAuthorized exception to Forbidden
* Add warning to periodic_task with interval 0
* Fix typo in unit tests
* Remove a bogus and unnecessary docstring
* Don't translate debug level logs in nova.api
* Don't translate debug level logs in nova.volume
* VMware: remove duplicate _fake_create_session code
* libvirt: Make `fakelibvirt.libvirtError` match
* ec2utils: Use VolumeMapping object
* ec2: create volume mapping using nova object
* Add VolumeMapping object for use in EC2
* Add new ec2 volume db API calls
* Remove legacy block device usage in ec2 API
* Deprecate instance_get_active_by_window_joined() from conductor
* Deprecate instance_get_all_by_filters() from conductor
* Don't translate debug level logs in nova.network
* Fix bad param name in method docstring
* Nova should pass device_id='' instead of None to neutron.update_port()
* Set default auth_strategy to keystone
* Support multi-version pydevd
* replace NovaException with VirtualInterfaceCreate when neutron fails
* Spice proxy config setting to be read from the spice group in nova.conf
* xenapi: make auto_config_disk persist boot flag
* Deprecate compute_unrescue() from conductor
* Deprecate instance_destroy() from conductor
* libvirt: fix comment for get_num_instances
* Fix exception message being changed by nested exception
* DescribeInstances in ec2 shows wrong image-message
* Imported Translations from Transifex
* Remove unused nova.crypto.compute_md5()
* VMware: spawn refactor - phase 1 - get_vif_info
* Remove comments and to-do for quota inconsistency
* Set the volume access mode during volume attach
* Fix a typo in compute/manager::remove_volume_connection()
* XenAPI: Use local rsync rather than remote if possible
* Delete image when backup operation failed on snapshot step
* Fix migrate_instance_*() using DB for floating addresses
* Ignore errors when deleting non-existing vifs
* Use eventlet.tpool.Proxy for DB API calls
* Improve performance for checking hosts AZs
* Correct the log in conductor unshelve_instance
* Imported Translations from Transifex
* Make instance_exists() take an instance, not instance_name
* Xen: Retry plugin call after connection reset
* Remove metadata's network-api dependence on the database
* Add helper method to determine disk size from instance properties
* Deprecate nova-manage flavor subcommand
* Updated from global requirements
* Imported Translations from Transifex
* VMware: remove unused variable
* Scheduler: enable scheduler hint to pass the group name
* Loosen import_exceptions to cover all of gettextutils
* Don't translate debug level scheduler logs
* VMWare - Check for compute node before triggering destroy
* Update version aliases for rpc version control
* make ec2 errors not useless
* VMware: ensure rescue instance is deleted when instance is deleted
* Ensure info cache updates don't overwhelm cells
* Remove utils.reset_is_neutron() to avoid races
* Remove unnecessary call to fetch info_cache
* Remove deprecated config option names: Juno Edition
* Don't overwrite instance object with dict in _init_instance()
* Add specific doc build option to tox
* Fix up import of conductor
* Use one query instead of two for quota_usages
* VMware: Log additional details of suds faults
* Disable nova-manage network commands with Neutron V2
* Fix the explanations of HTTPNotFound for keypair's API
* remove unneeded call to network_api on rebuild_instance
* Deprecate network_migrate_instance_* from conductor
* Deprecate aggregate_host_* operations in conductor
* Convert instance_usage_audit() periodic task to objects
* Return to using network_api directly for migrations
* Make _is_multi_host() use objects
* Remove unneeded call to fetch network info on shutdown
* Instance groups: add method get_by_hint
* Imported Translations from Transifex
* GET details REST API next link missing 'details'
* Don't explode if we fail to unplug VIFs after a failed boot
* nit: correct docstring for FilterScheduler.schedule_run_instance
* Revert "Fix network-api direct database hits in metadata server"
* ec2: use BlockDeviceMappingList object
* ec2: use SecurityGroup object
* ec2: get services using ServiceList object
* ec2: remove db.instance_system_metadata usage
* Remove nova-clear-rabbit-queues
* Allow -1 as the length of "get console output" API
* Fix AvailabilityZone check for hosts in multiple aggregates
* Move _get_locations to module level plus tests
* Define constants for the VIF model types
* Imported Translations from Transifex
* Make aggregate host operations use Aggregate object
* Convert poll_rescued_instances() periodic task to objects
* Make update_available_resource() use objects
* Add get_by_service() method to ComputeNodeList object
* Add with_compute_node to service_get()
* Make _get_compute_info() use objects
* Pass configured auth strategy to neutronclient
* Imported Translations from Transifex
* Make quota rollback checks more robust in conductor tests
* Updated from global requirements
* Remove duplicate code from nova.db.sqlalchemy.utils
* Downgrade the log level when automatic confirm_resize fails
* Refactor unit tests for image service CRUD
* Finish _delete_instance() object conversion
* Make detach_volume() use objects
* Add lock on API layer delete floating IP
* ec2: Convert instance_get_by_uuid calls to objects
* Fix network-api direct database hits in metadata server
* Scheduler: remove test scheduling methods that are not used
* Add info_cache as expected attribute when evacuate instance
* Make compute manager use network api method return values
* Allow user to specify image to use during rescue - V2 API changes
* Allow user to specify image to use during rescue
* Use debug level logging in unit tests, but don't save them
* Update user_id length to match Keystone schema in volume_usage_cache
* Avoid the possibility of truncating disk info file
* Read deleted instances during lifecycle events
* Add RBAC policy for ec2 API security groups calls
* compute: using format_message() to convert exception to string
* support local debug logging
* Fix bug detach volume fails with "KeyError" in EC2
* Fix straggling uses of direct-to-database queries in nova-network
* Xen: Do not resize root volumes
* Remove mention of nova-manage.conf from nova-manage.rst
* XenAPI: Add host information to glance download logs
* Check image exists before calling inject_data
* xenapi: Cleanup tar process on glance error
* Missing catch InstanceNotFound in v3 API
* Recover from POWERING-* state on compute manager start-up
* Remove the unused _validate_device_name()
* Adds missing expected_errors for V3 API multinic extension
* Correct test boundary for libvirt_driver.get_info
* Updated from global requirements
* Update docs to reflect new default filters
* Enable ServerGroup scheduler filters by default
* Revert "Use debug level logging during unit tests"
* Remove redundant tests from Qcow2TestCase
* libvirt: remove_logical_volumes should remove each separately
* VMware: Fixes the instance resize problem
* Fix anti-affinity server-group boot failure
* Nova utils: add in missing translation
* Add exception handling in "nova diagnostics"
* mark vif_driver as deprecated and log warning
* Revert object-assuming changes to _post_live_migration()
* Revert object-assuming changes to _post_live_migration()
* libvirt: optimize pause mode support
* Check for None or timestamp in availability zone api sample
* Refactor Network API
* Require admin context for interfaces on ext network
* remove redundant copy of test_cache_base_dir_exists
* Make sure leases are maintained until release
* Add tests for remaining expected conductor exceptions
* Fix Jenkins translation jobs
* libvirt: pause mode is not supported by all drivers
* Reduce config access in scheduler
* VMWare: add power off vm before detach disk during unrescue
* Reduce logging in scheduler
* xenapi: add a test for _get_partitions
* Refactor network_utils to new call_xenapi pattern
* Sync request_id middleware bug fix from oslo
* Make example 'entry_points' parameter a dictionary
* Localized error exception message on delete host aggregate
* Note that XML support *may* be removed
* Change errors_out_migration decorator to work with RPC
* low hanging fruit oslo-incubator sync
* Fix description of ServerGroupAffinityFilter
* Added test cases in ConfKeyManagerTestCase to verify fixed_key
* Moved the registration of lifecycle event handler in init_host()
* Change NotFound to InstanceNotFound in server_diagnostics.py
* Remove unnecessary passing of task_state to check_instance_state
* Rename instance_actions v3 to server_actions
* Drop nova-rpc-zmq-receiver man-page
* Correct the keypairs-get-resp.json API sample file
* Make hypervisor_version an int in fakeVirt driver
* Ensure network interfaces are in requested order
* Reserve 10 migrations for backports
* XenAPI: Calculate disk_available_least
* Open Juno development

2014.1.rc1
----------

* Fix getting instance events on subsequent attempts
* Improved logs for add/remove security group rules
* VMware: remove double import
* VMware: clean up VNC console handling
* Make conductor expect ActionEventNotFound for action methods
* Remove zmq-receiver from setup.cfg
* Add a note about deprecated group filters
* Fix the section name in CONTRIBUTING.rst
* Fix display of server group members
* Add new style instance group scheduler filters
* Automatically create groups that do not exist
* Add InstanceGroup.get_by_name()
* Remove unnecessary check for CONF.notify_on_state_change
* Add nova.conf.sample to gitignore
* Use binding:vif_details to control firewall
* Disable volume attach/detach for suspended instances
* Updated from global requirements
* Persist image format to a file, to prevent attacks based on changing it
* Add test cases for validate_extra_spec_keys
* Catch InstanceInLocked exception for rescue and instance metadata APIs
* Imported Translations from Transifex
* Make 'VDI too big' more verbose
* Use osapi_glance_link_prefix for image location header
* postgres incompatibility in InstanceGroup.get_hosts()
* Add missing test for None in sqlalchemy query filter
* Use instance data instead of flavor in simple_tenant_usage extension
* Sync oslo imageutils, strutils to Nova
* Use correct project/user id in conductor.manager
* fix the extension of README in etc/nova
* Tell pip to install packages it sees globally
* Change exception type from HTTPBadRequest to HTTPForbidden
* Don't attempt to fill faults for instance_list if FlavorNotFound
* Bypass the database if limit=0 for server-list requests
* Fix availability-zone option miss when creates an instance
* No longer any need to pass admin context to aggregate DB API methods
* Updated Setting up Developer Environment for Ubuntu
* Change libvirt close callback to use green thread
* Re-work how debugger CLI opts are registered
* Imported Translations from Transifex
* _translate_from_glance() can cause an unnecessary HTTP request
* Add UNSHELVING and RESCUING into IoOPSFilter consideration state
* VMware: fix booting from volume
* Do not add current tenant to private flavor access
* Disable oslo.messaging debug logs
* Update vm_mode when rebuilding instance with new image
* VMware: fix list_instances for multi-node driver
* VMware: Add utility method to retrieve remote objects
* Use project/user from instance for quotas
* Refactors unit tests of image service detail()
* Refactors nova.image.glance unit tests for show()
* Revert deprecation warning on Neutron auth
* V2 API: remove unused imports
* Change HTTPUnprocessableEntity to HTTPBadRequest
* Rename _post_live_migration instance_ref arg
* Add a decorator decorator that checks func args
* Updated from global requirements
* Instance groups: cleanup
* Use the list when get information from libvirt
* Remove unused quota_* calls from conductor
* Use correct project/user for quotas
* Include proper Content-Type in the HTTP Headers
* Fix inconsistent quota usage for security group
* Handling unlimited values when updating quota
* Fix service API and cells
* Remove unnecessary stubbing in test_services
* InvalidCPUInfo exception added to except block
* VMware: fix exception when no objects are returned
* Don't allow empty or 0 volume size for images
* Wait till message handling is done on service stop
* Remove PciDeviceList usage in pci manager
* Fix the rpc module import in the service module
* Revert "VMware Driver update correct disk usage stat"
* Catch HostBinaryNotFound exception in V2 API
* Ignore InstanceNotFound while getting console output
* Raise error on nova-api if missing subnets/fixed_ips on networks/port
* Fix the explanations of HTTPNotFound for new APIs
* Remove the nova.config.sample file
* Refuse to block migrate instances with config drive
* Include next link when default limit is reached
* Catch NotImplementedError on Network Associate
* VMware: add a file to help config the firewall for vnc
* Change initial delay for servicegroup api reporting
* Fix KeyError if neutron security group is not TCP/UDP/ICMP and no ports
* Prevent rescheduling on block device failure
* Check if nfs/glusterfs export is already mounted
* Make compute API resize methods use Quotas objects
* Remove commented out code in test_cinder_cloud
* Update quantum to neutron in comment
* Add deleted_at attribute in glance stub on delete()
* Add API sample files of "unshelve a server" API
* Remove unused method from fake_network.py
* Don't refresh network cache for instances building or deleting
* GlanceImageService static methods to module scope
* Remove XenAPI driver deprecation warning log message
* VMware: bug fix for host operations when using VMwareVCDriver
* xenapi: boot from volume without image_ref
* Use HTTPRequestV3 instead of HTTPRequest in v3 API tests
* Cells: Send instance object for instance_delete_everywhere
* Fix "computeFault" when v3 API "GET /versions/:(id)" is called
* VMware: ensure that the task completed for resize operation
* Change parameters of add_timestamp in ComputeDriverCPUMonitor class
* Cells API calls return 501 when cells disabled
* Add version 2.0 of conductor rpc interface
* Added missing raise statement when checking the config driver format
* Make NovaObject report changed-ness of its children
* Increase volume creation max waiting time
* Remove action-args from nova-manage help
* VMware: fix rescue disk location when image is not linked clone
* Fix comment for block_migration in nova/virt/libvirt/driver.py
* Don't import library guestfs directly
* Correct inheritance of nova.volume.cinder.API
* VMware: enable booting an ISO with root disk size 0
* Remove bad log message in get_remote_image_service
* Raise NotImplementedError in NeutronV2 API
* Remove block_device_mapping_destroy() from conductor API
* Make sure instance saves network_info when we go ACTIVE
* Fix sqlalchemy utils test cases for SA 0.9.x
* Fix equal_any() DB API helper
* Remove migration_update() from conductor API
* Remove instance_get() from conductor API
* Remove aggregate_get_by_host() from conductor API
* add support for host driver cleanup during shutdown
* Add security_group_rule to objects registry
* Remove aggregate_get() from conductor API
* Delete meaningless lines in test_server_metadata.py
* Imported Translations from Transifex
* Move log statement to expose actually info_cache value
* Fix input validation for V2 API server group API extension
* Adds test for rebuild in compute api
* Specify spacing on periodic_tasks in manager.py
* network_info cache should be cleared before being rescheduled
* Don't sync [system_]metadata down to cells on instance.save()
* Fixes the Hyper-V agent individual disk metrics
* VMware: remove unused code (_delete method in vmops.py)
* Fix docstring for shelve_offload_instance in compute manager
* Block database access in nova-network binary
* Make nova-network use conductor for security groups refresh
* Make nova-network use quotas object
* Reverts change to default state_path
* Fix raise_http_conflict_for_instance_invalid_state docstring
* Cells: Pass instance objects to update/delete_instance_metadata
* Don't detach root device volume
* Revert "Adding image multiple location support"
* Revert "Move libvirt RBD utilities to a new file"
* Revert "enable cloning for rbd-backed ephemeral disks"
* Add helper method for injecting data in an image
* Add helper method for checking if VM is booting from a volume
* Libvirt: Repair metadata injection into guests
* Make linux_net use objects for last fixed ip query
* Add get_by_network() to FixedIPList
* Update aggregate should not allow duplicated names
* Recover from REBOOT-* state on compute manager start-up
* VMware: raise an exception for unsupported disk formats
* VMware: ensure that deprecation does not appear for VC driver
* rename ExtensionsResource to ExtensionsController
* Ensure is_image_available handles V2 Glance API
* libvirt: fix blockinfo get_device_name helper
* Log Content-Type/Accept API request info
* Remove the docker driver
* xenapi: Speed up tests by not waiting on conductor
* Updated from global requirements
* xenapi: Fix test_rescue test to ensure assertions are valid
* VMware: image cache aging
* Add py27local tox target
* Fix broken API os-migrations
* Catch FloatingIpNotFoundForHost exception
* Fix get_download_hander() typo
* Handle IpAddressGenerationClient neutron
* Delete ERROR+DELETING VMs during compute startup
* VMware: delete vm snapshot after nova snapshot
* Fix difference between mysql & psql of flavor-show
* Add version 3.0 of scheduler rpc interface
* Make libvirt wait for neutron to confirm plugging before boot
* Task cleanup_running_deleted_instances can now use slave
* Do not add HPET timer config to non x86 targets
* Make test computations explicit
* Instance groups: only display valid instances for policy members
* Don't allow reboot when instance in rebooting_hard
* VMware: add missing translations
* Fix typo and add test for refresh_instance_security_rules
* Add declaration of 'refresh_instance_security_rules' to virt driver
* Remove mention of removed dhcp_options_enabled
* Fix compute_node stats
* Fix: Unshelving an instance uses original image
* Noted that tox is the preferred unit tester
* Updated development.environment.rst
* Use instance object instead of _instance_update()
* Remove compute virtapi BDM methods
* enable cloning for rbd-backed ephemeral disks
* Move libvirt RBD utilities to a new file
* Fixup debug log statements in the nova compute manager
* Use debug level logging during unit tests
* Fix debug message formatting in server_external_events
* VMware: VimException __str__ attempts to concatenate string to list
* Mark ESX driver as deprecated
* Volume operations should be blocked for non-null task state
* xenapi: fix spawn servers with ephemeral disks
* Fixes NoneType vcpu list returned by Libvirt driver
* Add conversion type to LOG.exception's string
* Remove compute API get_instance_bdms method
* Move run_instance compute to BDM objects
* Move live migration callbacks to BDM objects
* Instance groups: validate policy configuration
* Add REST API for instance group api extension
* VMware: boot from iso support
* Store neutron port status in VIF model
* Correct network_model tests and __eq__ operator
* Make network_cache more robust with neutron
* Error out failed migrations
* Fix BDM legacy usage with objects
* Fix anti-affinity race condition on boot
* Initial scheduler support for instance_groups
* Add get_hosts to InstanceGroup object
* Add instance to instance group in compute.api
* Add add_members to InstanceGroup object
* Remove run-time dependency on fixtures module by the nova baremetal
* Make compute manager prune instance events on delete and migrate
* Make compute manager's virtapi support waiting for events
* Add os-server-external-events V3 API
* Add os-server-external-events API
* Add external_instance_event() method to compute manager
* Fix invalid vim call in vim_util.get_dynamic_properties()
* Rescue API handle NotImplementedError
* VMware: Add a test helper to mock the suds client
* VMware: Ensure test VM is running in rescue tests
* Move _poll_volume_usage periodic task to BDM objects
* Move instance_resize code paths to BDM objects
* Make swap_volume code path use BDM objects
* Fix log messages typos in rebuild_instance function
* Move detach_volume and remove_vol_connection to BDM objects
* Move instance delete to new-world BDM objects
* VMware ESX: Boot from volume must not relocate vol
* Fix development environment docs for redhat-based systems
* neutron_metadata_proxy_shared_secret should not be written to log file
* VMware: create datastore utility functions
* Address the comments of the merged image handler patch
* Ignore the image name when booting from volume

2014.1.b3
---------

* Fix typo in devref
* VMware: refactor _get_volume_uuid
* Add return value to some network API methods
* Fixing host_ip configuration help message
* No longer call check_uptodate.sh in pep8
* notifier middleware broken by oslo.messaging
* regenerate the config file to support 1.3.0a9
* Add doc update for 4 filters which is missing in filter_scheduler.rst
* Remove 3 unnecessary variables in scheduler
* Adding image multiple location support
* Move all shelve code paths to BDM objects
* Move rebuild to BDM objects
* sync sslutils to not conflict with oslo.messaging
* Accurate comment in compute layer
* Refactor xenapi/host.py to new call_xenapi pattern
* Add a missing space in a log message
* VMware: iscsi target discovery fails while attaching volumes
* Remove warn log in quota function on API layer
* Sync the latest DB code from oslo-incubator
* Prevent thrashing when deploying many bm instances
* Support configuring libvirt watchdog from flavors
* Add watchdog device support to libvirt driver
* Remove extra space at the end of help string
* Port libvirt copy_image tests to mock
* Updated from global requirements
* Sync latest Guru Meditation Reports from Oslo
* Skip sqlite-specific tests if sqlite is not configured
* VMware: add in debug information for network selection
* vmwareapi:Fix nova compute service down issue when injecting pure IPv6
* Make compute use quota object existing function
* Fixes api samples for V2 os-assisted-volume-snapshots
* Raise exception if volume snapshot id not found instead of return
* Added os-security-groups prefix
* VMware Driver update correct disk usage stat
* attach/detach interface should raise exception when instance is locked
* Restore get_available_resource method in docker driver
* Make compute manager use InstanceInfoCache object for deletes
* Deprecate conductor instance_type_get() and remove from VirtAPI
* Make restore_instance pass the Instance object to compute manager
* Use uuid instead of name for lvm backend
* Adds get_console_connect_info API
* Remove log_handler module from oslo-incubator sync
* Remove deleted module flakes from openstack-common.conf
* When a claim is rejected, explain why
* Move xenapi/agent.py to new call_xenapi style
* xenapi plugins: Make sure subprocesses finish executing
* Update Oslo wiki link in README
* Refactor pool.py to remove calls to call_xenapi
* Move vbd plug/unplug into session object
* xenapi: make session calls more discoverable
* Make error notifications more consistent
* Adds unit test for etc/nova/policy.json data
* Support IPv6 when booting instances
* xenapi: changes the debug log formatting
* libvirt: raises exception when attempt to resize disk down
* xenapi: stop destroy_vdi errors masking real error
* Make resource_tracker use Flavor object
* Make compute manager use Flavor object
* Make baremetal driver use Flavor object instead of VirtAPI
* Sync latest config file generator from oslo-incubator
* Fixes evacuate doesn't honor enable password conf for v3
* Removed copyright from empty files
* Fix the explanations of HTTPNotFound response
* VMware: support instance objects
* Add support for tenant_id based authentication with Neutron
* Remove and recreate interface if already exists
* Prevent caller from specifying id during Aggregate.create()
* Enable flake8 H404 checking
* Imported Translations from Transifex
* Fix logic for aggregate_metadata_get_by_host_with_key test case
* Use oslo-common's logging fixture
* Re-Sync oslo-incubator fixtures
* Updated from global requirements
* Update pre_live_migration to take instance object
* Remove unused method inject_file()
* Remove db query from deallocate_fixed_ip
* update deallocate_for_instance to take instance obj
* Update server_diagnostics to use instance object
* Move the metrics update to get_metrics
* Unmount the NFS and GlusterFS shares on detach
* Add a caching scheduler driver
* libvirt: image property variable already defined
* Replaces exception re-raising in Hyper-V
* Remove blank space after print
* VMware: add instance detail to detach log message
* libvirt: Enable custom video RAM setting
* Remove trailing comma from sample JSON
* Add pack_action_start/finish helper to InstanceAction object
* Rewrite InstanceActionEvent object testcase using mock
* Clean up _make_*_list in object models to use base.obj_make_list
* libvirt: remove explicit /dev/random rng default
* Document virt driver methods that take Instance objects
* Make interface attach and detach use objects
* Pass instance object to soft_delete() and get_info()
* libvirt: setting a correct driver name for iscsi volumes
* libvirt: host specific virtio-rng backend
* Fix HTTP methods for test_attach_interfaces
* Fix the calls of webob exception classes
* VMware: remove unused parameter from _wait_for_task
* Downgrade the log level for floating IP associate
* Removing redundant validation for rebuild request
* VMware: add a test for driver capabilities
* Catch HostBinaryNotFound exception when updating a service
* VMware: ensure that datastore name exists prior to deleting disk
* Move compute's _get_instance_volume_block_device_info to BDM objects
* Use disk_bus and device_type in attaching volumes
* Add device bus and type to virt attach_volume call
* Make volume attach use objects
* compute: invalid gettext message format
* VMware: fix the VNC port allocation
* VMware: fix datastore selection when token is returned
* Hyper-V log cleanups
* vmware: driver races to create instance images
* Introduce Guru Meditation Reports into Nova
* Updated from global requirements
* Revert "VMware: fix race for datastore directory existence"
* Use instance object for delete
* Update ubuntu dev env instructions
* VMware: fix race for datastore directory existence
* libvirt: adding a random number generator device to instances
* Add 'use_slave' to instance_get_all_by_filter in conductor
* Fix the validation of flavor_extraspecs v2 API
* Make webob.exc.HTTPForbidden return correct message
* Use image from the api in run_instance, if present
* Remove unused variables in the xenapi.vmops module
* Describe addresses in ec2 api broken with neutron
* Cleanup v3 test_versions
* Fix import order in log_handler
* Emit message which merged user-supplied argument in log_handler
* Adds service request parameter filter for V3 API os-hosts request
* Fix comment typo in nova/compute/api.py
* stop throwing deprecation warnings on init
* Remove broken quota-classes API
* VMware: fix instance lookup against vSphere
* Add a new compute API method for deleting retired services
* Fix instance_get_all_by_host to actually use slave
* Periodic task poll_bandwidth_usage can use slave
* Partially revert "XenAPI: Monitor the GC when coalescing"
* Mark XML as deprecated in the v2 API
* adjust version definition for v3 to be only json
* Fix option indenting in compute manager
* Adds create backup server extension for the V3 API
* Catch InstanceNotFound exceptions for V2 API instance_actions
* Sync log.py from oslo
* Make floating_ips module use FloatingIP for associations
* Remove __del__ usage in vmwareapi driver
* Fixed spelling errors in nova
* LibVirt: Disable hairpin when using Neutron
* VMware: optimize instance reference access
* Serialize the notification payload in json
* Add resource tracking to unshelve_instance()
* Typo in the name 'libvirt_snapshot_compression'
* Refactor driver BDM attach() to cover all uses
* Fix assertEqual parameter order post V3 API admin-actions-split
* Fix copyright messages after admin actions split for V3 API
* Catch InstanceNotFound exceptions for V2 API virtual interfaces
* Correct the assert() order in test_libvirt_blockinfo
* Use disk_bus when guessing the device name for vol
* libvirt: add virtio-scsi disk interface support
* libvirt: configuration element for virtual controller
* VMware: factor out management of controller keys and unit numbers
* Remove unused notifier and rpc modules from oslo sync
* Imported Translations from Transifex
* Remove XML support from schemas v3
* Treat port attachment failures correctly
* Add experimental warning for Cells
* Add boolean convertor to "create multiple servers" API
* VMware: prevent race for vmdk deletion
* VMware: raise more specific exceptions
* Disable IGMP snooping on hybrid Linux bridge
* libvirt: remove retval from libvirt _set_host_enabled()
* VMware: remove unused class
* compute: format_message is a method not an attribute
* MetricsWeigher: Added support of unavailable metrics
* Fix incorrect kwargs 'reason' for HTTPBadRequest
* Fix the indents of v3 API sample docs
* Refactor get_iscsi_initiator to a common location
* Fix compute_node_update() compatibility with older clients
* XenAPI: Add the mechanism to attach a pci device to a VM
* Remove underscore for the STATE_MAP variable
* XenAPI: Add the support for updating the status of the host
* libvirt: support configurable wipe methods for LVM backed instances
* Fix InstanceNotFound error in _delete_instance_files
* Ensure parent dir exists while injecting files
* Convert post_live_migration_at_destination to objects
* Convert remove_fixed_ip_to_instance to objects
* Convert add_fixed_ip_to_instance to objects
* Fix invalid facilities documented in rootwrap.conf
* VMware: improve unit test time
* Replace assertEqual(None, *) with assertIsNone in tests
* Add comment/doc about utils.mkfs in rootwrap
* Add mkfs to the baremetal-deploy-helper rootwrap
* libvirt-volume: improve unit test time
* Move consoleauth_manager option into nova.service and fix imports
* libvirt: improve unit test time
* Imported Translations from Transifex
* Make is_neutron() thread-safe
* Update the mailmap
* Rewrite InstanceAction object test cases using mock
* Make floating_ips module use FloatingIP for updates
* Make floating_ips module use FloatingIP for (de-)allocations
* Make floating_ips module use FloatingIP for all get queries
* Make floating_ips module use Service object
* Make floating_ips module use Instance object
* Make floating_ips module use Network object
* Make floating_ips module use FixedIP object
* Fix break in vm_vdi_cleaner after oslo changes
* Fixes the Hyper-V VolumeOpsTestCase base class
* libvirt: Uses available method get_host_state
* Add V3 api for pci support
* Update docstring for baremetal opportunistic tests
* Fix upper bound checking for flavor create parameters
* Fixed check in image cache unit test
* Count memory and disk slots once in cells state manager
* changed quantum to neutron in vif-openstack
* Convert unrescue_instance to objects
* Don't allow compute_node free_disk_gb to be None
* compute: removes unnecessary condition
* Rename Openstack to OpenStack
* Support setting a machine type to enable ARMv7/AArch64 guests to boot
* Catch InstanceNotFound exceptions for V2 API floating_ips
* Explicity teardown on error in libguestfs setup()
* Catch InstanceNotFound exceptions for V2 API deferred delete
* Replace oslo.sphinx with oslosphinx
* Change assertTrue(isinstance()) by optimal assert
* Make nova_ipam_lib use Network, FixedIP, and FloatingIP objects
* Make nova-network use FixedIP for timeouts
* Make nova-network use FixedIP object for updates
* Make nova-network use FixedIP object for disassociations
* Use six.moves.urllib.parse instead of urlparse
* Add "body=" argument to v3 API unit tests
* Remove unused methods
* Adds migrate server extension for V3 API
* Move policy check of start/stop to api layer
* Refactor stats to avoid bad join
* Remove @author from copyright statements
* Remove character filtering from V3 API console_output
* DB: logging exceptions should use save_and_reraise
* Fix incorrect check in aggregate/az test
* xenapi: set viridian=false for linux servers
* Delete baremetal image files after deployment
* Make sure "volumeId" in req body on volume actions
* Removes console output plugin from the core list
* Using six.add_metaclass
* Fix bad log formatting
* Remove quota classes extension from the V3 API
* Group kvm image_meta tests for get_disk_bus
* Prefix private methods with _ in docker driver
* Fix the sample and unittest params of v3 scheduler-hints
* Add a instance lookup helper to v3 plugins
* Use raw string notation for regexes in hacking checks
* Improve detection of imports in hacking check
* Renumber some nova hacking checks
* Docker cannot start a new instance because of an internal error
* libvirt: configuration element for a random number generator device
* VMware: fix instance rescue bug
* Fix run_tests.sh lockutils when run with -d
* Adds tests to sqlachemy.api._retry_on_deadlock
* Replace detail for explanation msgs on webob exceptions
* Allow operators to customize max header size
* Prevent caller from specifying id during Migration.create()
* Prevent caller from specifying id during KeyPair.create()
* Prevent caller from specifying id during Service.create()
* Prevent caller from specifying id during ComputeNode.create()
* Clean IMAGE_SNAPSHOT_PENDING state on compute manager start up
* Fix trivial typo in libvirt test comment
* Refactoring metadata/base
* Removes XML namespace from V3 API test_servers
* correct the bugs reference url in man documents
* Objectify instance_action for cell scheduler
* Remove tox locale overrides
* libvirt: use to_xml() in post_live_migration_at_destination
* Removes os-instance-usage-audit-log from the V3 API
* VMware: update test name
* VMware: improve unit test performance
* Fix english grammar in the quota error messages
* Removes os-simple-tenant-usage from the V3 API
* Fix a couple of unit test typos
* Add HEAD api response for test s3 server BucketHandler
* Removes XML support from security_groups v3 API
* Hyper-V driver RDP console access support
* Make consoleauth token verification pass an Instance object
* Adds RDP console support
* Fix migrations changing the type of deleted column
* Add hpet option for time drifting
* Typo in backwards compat names for notification drivers
* Support building wheels (PEP-427)
* Fix misspellings in nova
* Disable file injection in baremetal by default
* Drop unused dump_ SQL tables
* Convert rescue_instance to objects
* Convert set_admin_password to objects
* The object_compat decorator should come first
* Default video type to 'vga' for PowerKVM
* Sync latest db.sqlalchemy from oslo-incubator
* Guard against oversize flavor rxtx_factor float
* Make libvirt use Flavor object instead of using VirtAPI
* Fix instance metadata tracking during resets
* Make delete_instance_metadata() use objects
* Break out the meat of the object hydration process
* V2 Pause: treat case when driver does not implement the operation
* VMware: fix bug for exceptions thrown in _wait_for_task
* Nova Docker: Metadata service doesn't work
* nova: use RequestContextSerializer for notifications
* Fix auto instance unrescue after poll period
* Fix typos in hacking check warning numbers
* Fix exception handling miss in remote_consoles
* Don't try to restore VM's in state ERROR
* Make it possible to disable polling for bandwidth usage
* XenAPI: Monitor the GC when coalescing
* Revert "Allow deleting instances while uuid lock is held"
* report port number for address already in use errors
* Update my mailmap
* libvirt: Adds missing tests to copy_image
* Sync latest gettextutils from oslo-incubator
* Make change_instance_metadata() use objects
* Add XenAPI driver deprecation warning log message
* Adds host_ip to hypervisor show API
* VMware: update the default 'task_poll_interval' time
* Fixes Hyper-V VHDX snapshot bigger than instance
* Define common "name" parameter for Nova v3 API
* Stacktrace on error from libvirt during unfilter
* Disable libvirt driver file injection by default
* Add super call to db Base class
* Fix baremetal stats type
* Fix bittorrent URL configuration option
* Fix VirtualInterfaceMacAddressException message
* Add serializer capability to fake_notifier
* Avoid deadlock when stringifying NetworkInfo model
* Add hacking test to block cross-virt driver code usage
* Hyper-V: Change variable in debug log message
* Rename API schema modules with removing "_schema"
* Fixed naming issue of variable in a debug statement formatting
* Use new images when spawning BM instances
* Remove get_instance_type and get_active_by_window from nova compute API
* Make the simple_tenant_usage API use objects
* Add instance_get_active_by_window_joined to InstanceList
* Update nova.conf.sample for python-keystoneclient 0.5.0
* Add ESX quality warning
* Set SCSI as the default cdrom bus for PowerKVM
* Enforce FlavorExtraSpecs Key format
* Fix scheduler_hints parameter of v3 API
* Remove vi modelines
* VMware: Remove some unused variables
* Fix a bug in v3 API doc
* Move logging out of BDM attach method
* Add missing translation support
* libvirt: making set_host_enabled to be a private methods
* Remove unused variable
* Call get_pgsql_connection_info from _test_postgresql_opportunistically
* Port to oslo.messaging
* Sync latest config file generator from oslo-incubator
* Test guestfs without support for close_on_exit
* Make nova-network use FixedIP object for vif queries and bulk create
* Make nova-network use FixedIP for host and instance queries
* Make nova-network use FixedIP object for associations
* Make nova-network use FixedIP for get_by_address() queries
* Add FixedIP.floating_ips dynamic property
* Add FloatingIP object implementation
* Add FixedIP Object implementation
* Deal with old versions of libguestfs
* Destroy docker container if spawn fails to set up network
* Adds suspend server extension for V3 API
* Adds pause server extension for V3 API
* Removes XML namespace definitions from V3 API plugins
* Remove XML support from migrations pci multiple_create v3 API plugins
* Remove extra space in log message
* Allow deleting instances while uuid lock is held
* Add 'icehouse-compat' to [upgrade_levels] compute=
* Make os-service API return correct error messages
* Make fixed_ip_get_by_address() take columns_to_join
* Refactor return value of fixed_ip_associate calls
* Make nova-network use Network object for deleting networks
* Make nova-network use Network for associations
* Make nova-network use Network object for set_host() operation
* Make nova-network use Network object for updates
* Make nova-network use Network object for remaining "get" queries
* Make nova-network use NetworkList for remaining "all" queries
* Make nova-network use Network object for get-all-by-host query
* Make nova-network a "conductor-using service"
* Ignore 'dynamic' addr flag on bridge configuration
* Remove XML support from some v3 API plugins
* xenapi: clean up step decorator fake steps
* Use objects internally in DriverBlockDevice class
* Make snapshot_volume_backed use new-world objects
* Make volume_snapshot_{create,delete} use objects
* Move compute API is_volume_backed to BDM objects
* Add block device mapping objects implementation
* XenAPI: Wait for VDI on introduce
* Shelve: The snapshot should be removed when delete instance
* Revert "Allow deleting instances while uuid lock is held"
* Retry reservation commit and rollback on deadlock
* Adds lock server extension for V3 API
* Remove duplicated method in mock_key_mgr
* Add quality warning for non-standard libvirt configurations
* Add docker driver removal warning
* Remove V3 API XML entry points
* Remove XML support from admin_password V3 API plugin
* Remove XML support from certificates v3 API
* Remove XML support from some v3 API plugins(e.g. services)
* Remove XML support from some extension v3 API plugins
* Remove XML support from some server v3 API plugins
* Remove XML support from quota and scheduler_hints v3 API plugins
* Remove XML support from flavor v3 API plugins
* Revert "Fix race conditions between imagebackend and imagecache"
* Remove XML support from v3 API plugins
* Remove unused methods
* Remove trace XML from unittests
* removing xml from servers.py
* Remove xml unit tests for v3 api plugins
* Remove v3 xml API sample tests
* Adds dmcrypt utility module
* Adds ephemeral_key_uuid field to instance
* Error message is malformed when removing a sec group from an instance
* Do not set root device for libvirt+Xen
* Docker Set Container name to Instance ID
* Fix init of pci_stats in resource tracker
* Catch NotImplementedError in get_spice_console in v2/v3 API
* Minor changes to make certificates test cases use HTTPRequestV3
* VMware: Only include connected hosts in cluster stats
* disk/api.py: refactors extends and adds missing tests
* Make nova-network use Network to create networks
* Make obj_to_primitive() handle netaddr types
* Add Network object
* Make service workers gracefully handle service creation race
* support stevedore >= 0.14
* Increase the default retry for iscsi connects
* Finish compacting pre-Icehouse database migrations
* Compact pre-Icehouse database migrations <= 210
* Compact pre-Icehouse database migrations <= 200
* Compact pre-Icehouse database migrations <= 190
* Fix cache lock for image not consistent
* VMware: fix image snapshot with attached volume
* Use block_device_info at post_live_migration_at_destination
* Update policy check on each action for certificates
* Use (# of CPUs) workers by default
* Remove policy check in db layer for aggregates
* Remove unused configurations
* VMware: fix exception when using multiple compute nodes
* Remove copyright from empty files in nova
* disk/api.py: resize2fs fails silently + adds tests
* remove 2 unused function in test_volumes.py
* Update log message to support translations
* PCI address should be uniform
* Remove flavor-disabled related policy rules for v3 api
* Remove get_all_networks from nova.network.rpcapi
* Remove get_network from nova.network.rpcapi
* Update nova.network to use DNSDomain object
* Remove some dead dnsdomain code
* Add DNSDomain object
* Add db.dnsdomain_get_all() method
* Update linux_net to use VirtualInterface
* Update nova_ipam_lib to use VirtualInterface
* libvirt: Review of the code to use module units
* Update network.manager to use VirtualInterface
* Imported Translations from Transifex
* Updated from global requirements
* Define "supported_instances" for fake compute
* Remove get_vif_by_mac_address from network rpcapi
* Remove unused method from network rpcapi
* Allow delete when InstanceInfoCache entry is missing
* libvirt: Fix root disk leak in live mig
* Additional check for qemu-nbd hang
* Correct host managers free disk calculation
* Correct the state for PAUSED instances on reboot
* XenAPI: Use get_VALUE in preference to get_record()['VALUE']
* XenAPI: Speedup get_vhd_parent_uuid
* XenAPI: Report the CPU details correctly
* XenAPI: Tidy calls to get_all_ref_and_rec
* XenAPI: get_info was very expensive
* Fix bug with not implemented virConnect.registerCloseCallback
* Make test_poll_volume_usage_with_data more reliable
* Re-write sqlite BigInteger mapping test
* Small edits on help strings
* Make floating_ip_bulk_destroy deallocate quota if not auto_assigned
* Sync processutils from oslo-incubator
* Create common method for MTU treatment
* Move fake_network config option to linux_net
* libvirt: move unnecesary comment
* Sync log.py from oslo-incubator
* hyperv: Retry after WMI query fails to find dev
* vmwareapi:remove unused variables in volumeops
* Fix docstring in libvirt.driver.LibvirtDriver.get_instance_disk_info()
* Hide VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES where needed
* Make test_different_fname_concurrency less racy
* VMware: improve exception logging in driver.py

2014.1.b2
---------

* Add instance faults during live_migrate errors
* VMware: use .get() to access 'summary.accessible'
* Nova Docker driver must remove network namespace
* Added a new scheduler filter for metrics
* Sync module units from oslo
* Join pci_devices for servers API
* VMware: fix missing datastore regex with ESX driver
* Fix the flavor_ref type of unit tests
* Sync unhandled exception logging change from Oslo
* Fix race conditions between imagebackend and imagecache
* Add explicit discussion of dependencies to README.rst
* Add host and details column to instance_actions_events table
* Join pci_devices when getting all servers in API
* Add sort() method to ObjectListBase
* Add VirtualInterface object
* VMware: Fix incorrect comment indentation
* vmwareapi: simple refactor of config drive tests
* Fix multi availability zone issue part 2
* Make exception message more friendly
* disable debug in eventlet.wsgi server
* Alphabetize core list for V3 API plugins
* Ensure MTU is set when the OVS vif driver is used
* remove redundant __init__() overwriting when getting ExtensionResources
* Fix bug for neutron network-name
* Fix rbd backend not working for none admin ceph user
* Set objects indirection API in network service
* Use oslo.rootwrap library instead of local copy
* Remove admin auth when getting the list of Neutron API extensions
* Fix the test parameter order for v3 evacuate test
* Add API schema for v3 evacuate API
* Remove unused code
* Take a vm out of SNAPSHOTTING after Glance error
* Corrected typo in metrics
* libvirt: handle exception while get vcpu info
* Fixed incorrect test case of test_server_metadata.py
* Add API schema for v3 rescue API
* Support preserve_ephemeral in baremetal
* Show bm deploy how to preserve ephemeral content
* Add preserve_ephemeral option to rebuild
* Fix string formatting of exception.NoUniqueMatch message
* docstring fix
* xenapi: stop server destroy on live_migrate errors
* Ensure that exception raised in neutron are handled correctly
* Fix updating device names when defaulting
* libvirt: Fix confusing use of mox.StubOutWithMock
* Sync request_id middleware for nova
* Calculate default security group into quota usage
* Allow run_image_cache_manager_pass to hit db slave
* Consolidate the blockdev related filters
* VMware: upload images to temporary directory
* Refactor CIDR field to use netaddr.IPNetwork
* Make nova-network use Instance objects
* Make nova-network use Service object
* Allow _check_instance_build_time to hit db slave
* Set objects indirection API in metadata service
* libvirt: Configuration element for sVirt support
* VMware: unnecessary session reconnection
* Add API schema for v3 multinic API
* API schema for v3 console_output API
* Workers verification for WSGI service
* Remove unused dict BYTE_MULTIPLIERS
* Optimize libvirt live migration workflow at source
* libvirt, fix test tpool_execute_calls_libvirt
* Using staticmethod to mock LibvirtDriver._supports_direct_io
* Use the mangle checksum fill rule regardless to the multi_host
* Enabled Libvirt driver to read 'os_command_line' from image properties
* Update nova.conf.sample
* Capture exception for JSON load in virt.storage_users
* Ensure that headers are utf8, not unicode
* Attribute snapshot not defined in libvirt/config.py
* ec2 api should check 'max_count'&'min_count' para
* nova docker driver cannot find cgroup in /proc/mounts on RHEL
* VMware: fix rescue with disks are not hot-addable
* VMware: bug fix for VM rescue when config drive is configured
* Define common API parameter types
* Fixed a problem in iSCSI multipath
* Fix unhandled InvalidServerState exceptions in server start/stop
* Cells rebuild regression fix
* Fix potential fd leak
* Rename instance_type to flavor in libvirt virt driver tests
* Rename instance_type to flavor in vmware virt driver tests
* Improve error message in services API
* Make image props filter handle old vm_modes
* XenAPI: Use direct IO for writing config drive
* Avoid unnecessary use of rootwrap for some network commands
* Remove unused copyright from nova.api.__init__
* replace type() to isinstance() in nova
* Make availability_zone optional in create for aggregates
* libvirt: Fix infinite loop waiting for block job
* baremetal: stop deployment if block devices are not available
* Cleanup 'deleting' instances on restart
* Ignore duplicate delete requests
* Let drivers override default rebuild() behaviour
* Enable compute_node_update to tolerate deadlocks
* xenapi: resize up ephemeral disks
* xenapi: refactor generate_ephemeral
* xenapi: refactor resize_up_root_vdi
* Abstract add_timestamp out of ComputeDriverCPUMonitor class
* Revert "Whitelist external netaddr requirement"
* The private method _text_node should be used as function
* Add finer granularity to host aggregate APIs
* Remove unused import
* Adds new method nova.utils.get_hash_str
* Make nova/quota use keypair objects
* VMware: update test file names
* Ensure instance action event list in order
* Docker Driver doesn't respect CPU limit
* libvirt: stop overwriting LibvirtConfigCPU in get_host_capabilities
* Cleanup the flake8 section of tox.ini
* Use the full string for localisation
* Don't deallocate/reallocate networks on reschedules
* Cleanup object usage in the rebuild path
* Fix test case with wrong parameter in test_quota_classes
* Remove unused variables in imagebackend.py
* Remove unused code in test_attach_interfaces.py
* Whitelist external netaddr requirement
* Better exception handling for deletes during build
* Translate the snapshot_pending state for old instances
* Prevent Instance.refresh() from returning a new info cache
* Extends V3 os-hypervisor api for pci support
* Sync config generator from oslo-incubator
* Imported Translations from Transifex
* Remove uneeded dhcp_opts initialization
* Update class/function name for test_extended_availability_zone.py
* Allow deleting instances while uuid lock is held
* xenapi: add support for vcpu_pin_set
* xenapi: more info when assert_can_migrate fails
* fix ips to 'ips' in APIRouter
* Hyper-V:Preserve config drive image after the instance is resized
* fix log message in APIRouter
* VMware: use session.call_method to invoke api's
* Rename instance_type to flavor in hyper-v virt driver
* Rename instance_type to flavor in xenapi virt driver
* Compact pre-Icehouse database migrations <= 180
* Change when exists notification is sent for rescue
* Revert change of default FS from ext3 to etx4
* Convert nova.compute.manager's _spawn to objects
* Add alias as prefix for flavor_rxtx v3
* Remove unused code in nova/api/ec2/__init__.py
* Remove unused import
* VMware: improve connection issue diagnostic
* Fixes messages logged on Glance plugin retries
* Aggregate: Hosts isolation based on image properties
* Fix for qemu-nbd hang
* Return policy error, not generic error
* Fix lxc rootfs attached two devices in some action
* Removes disk-config extension from v3 api
* Fix typo'ed deprecated flag names in libvirt.imagebackend
* Disable libguestfs' default atexit handlers
* Add API schema for v3 extended_volumes API
* Catch InstanceIsLocked exception on server actions
* Fix inconsistent "image" value on _get_image()
* Add API schema for v3 keypairs API
* Add API schema for v3 flavor_access API
* Add API schema for v3 agents API
* Add API schema for v3 admin_password API
* Adds a PREPARED state after baremetal node power on
* Make scheduler rpcapi use object serializer
* Update log message when remove pci device
* Add unit test for ListOfStrings field in object models
* Sync oslo db.sqlalchemy.utils to nova
* Remove duplicated test
* Fixing availability-zone not take effect error
* Fix image cache periodic task concurrent access bug
* Fix interprocess locks for run_tests.sh
* lxc: Fix a bug of baselineCPU parse failure
* platform independence for test_virt unit tests
* Imagecache: fix docstring
* libvirt: Set "Disabled Reason" to None when enable nova compute
* Change log from ERROR to WARNING when instance absent
* VMware: clean up unnecessary help message of options
* Don't use deprecated module commands
* Add apache2 license header to appropriate files for enabling H102
* XenAPI: Allow use of clone_vdi on all SR types
* Remove unused variables in test_conductor.py
* Do not use contextlib.nested if only mock one function
* Remove update_service_capabilities from nova
* Adds user_data extension to nova.api.v3.extensions
* Add wsgiref to requirements.txt
* pass the empty body into the controller
* Imported Translations from Transifex
* Revert recent change to ComputeNode
* sync oslo service to fix SIGHUP handling
* Fix parameter checking about quota update api
* Spelling fix resouce=>resource
* Change default ephemeral FS to ext4
* When inject admin password, no need to generate temp file
* Make _change_index_columns use existing utility methods
* Fix interprocess locks when running unit-tests
* Cleanup object usage in the delete path
* Change RPC post_live_migration_at_destination from call to cast
* Pass rbd_user id and conf path as part of RBD URI for qemu-img
* Allow some instance polling periodic tasks to hit db slave
* Sync timeutils from oslo-incubator
* Catch NotImplementedError for vnc in the api
* List NotImplementedError as a client exception for vnc
* remove vmwareapi.vmops.get_console_output()
* Object-ify build_and_run_instance
* Retry on deadlock in instance_metadata_update
* use 'os_type' in ephemeral filename only if mkfs defined
* ValueError should use '%' instead of ','
* Setting the xen vm device id on vm record
* Rename instance_type to flavor in nova.utils and nova.compute.utils
* Rename instance_type to flavor in nova.cloudpipe
* Serialize instance object while building request_spec
* Make rebuild use Instance objects
* Remove deprecated config aliases
* Changed error message to match usage
* Add configurable 120s timeout ovs-vsctl calls
* Clarify rebuild_instance's recreate parameter
* Clean swap_volume rollback, on libvirt exception
* Image cache: move all of the variables to a common place
* baremetal: set capabilites explicitly
* Remove docker's unsupported capabilities
* Set a sane default for state_path
* Fix incorrect exception on os-migrateLive
* barematal: Cleanup the calls to assertEqual
* Refactor time conversion helper function for objects in db api
* Fixes ConfigDrive bug on Windows
* Remove smoketests
* Revert graceful shutdown patch
* Handle InstanceUserDataMalformed in create server v2 api
* Enable remote debugging for nova
* Fix race in unit tests, which can cause gate job to fail
* Add boolean convertor to cells sync_instances API
* Initialize iptables rules on initialization of MetadataManager
* vmwareapi: raise on get_console_output
* hyperv: remove get_console_output method
* List NotImplementedError as client exception
* api: handle NotImplementedError for console output
* Make Serializer/Conductor able to backlevel objects
* Make ec2 use Flavor object
* Move restore and rebuild operations to Flavor objects
* Add flavor access methods to Instance object
* Rename instance_type to flavor in nova.network tree
* Stop, Rescue, and Delete should give guest a chance to shutdown
* Remove middleware ratelimits from v3 api
* Remove unused variables in neutron api interface and neutron tests
* Remove unneeded call to conductor in network interface
* Return client tokens in EC2 DescribeInstances
* Require List objects to be able to backlevel their contents
* Make Instance object compatible with older compute nodes
* Deprecate/remove scheduler select_hosts()
* Pass Instance object to console output virt driver api
* Send Instance object to validate_console_port
* Pass Instance object to compute vnc rpc api
* Update vnc virt driver api to take Instance object
* Add error as not-in-progress migration status
* Don't replace instance.info_cache on each save
* Add boolean convertors for migrate_live API
* VMWare: bug fix for Vim exception handling
* XenAPI: Synchronize on all VBD plug/unplug per VM
* Add IPAddress field type in object models
* Fixes errors on start/stop unittest
* Use a dictionary to eliminate the inner loop in _choose_host_filters()
* Correct uses of :params in docstrings
* Delete iSCSI devices after volume detached
* Prevent spoofing instance_id from neutron to nova
* Replaces call to lvs with blockdev
* Refactor PXE DHCP Option support
* Normalize the weights instead of using raw values
* Compact pre-Icehouse database migrations <= 170
* XenAPI: Speedup host_ref cannot change - get it once
* Updated from global requirements
* Rename instance_type to flavor in test_utils and nova.tests.utils
* Rename instance_type to flavor in baremetal virt driver
* VMware: fix bug when more than one datacenter exists
* Sync oslo lockutils for "fix lockutils.lock() to make it thread-safe"
* Move calls to os.path.exists() in libvirt imagebackend
* Ensure api_paste_conf is an absolute path
* Log exception in _heal_instance_info_cache
* Raise better exception if duplicate security groups
* Remove the largely obsolete basepath helper
* libvirt: Custom disk_bus setting is being lost on hard_reboot
* Libvirt: Making the video driver element configurable
* Give migrations tests more time to run
* Remove the api_thread_pool option from libvirt driver
* baremetal: volume driver refactoring and tests
* Sync middleware audit, base, and notifier from oslo
* Get test_openAuth_can_refuse_None_uri to cleanup after itself
* Hide injected_file related quotas for V3 API
* Make obj_from_primitive() preserve version information
* Cells: check states on resize/rebuild updates
* Make flavor_access extension use Flavor object
* libvirt: add a test to guard against set_host_enabled raising an error
* Fix UnboundLocalError in libvirt.driver._close_callback
* Quota violations should not cause a stacktrace in the logs
* Enforce permissions in snapshots temporary dir
* Sync rpc fix from oslo-incubator
* Fix changes-since filter for list-servers API
* Make it possible to override test timeout value
* Imported Translations from Transifex
* libvirt: consider minimal I/O size when selecting cache type
* Setup destination disk from virt_disk_size
* Add Flavor object
* Add atomic flavor access creation
* Add extra_resources field to compute_nodes table
* Recommend the right call instead of datetime.now()
* libvirt: remove unused imports from fake libvirt utils
* VMware: fix disk extend bug when no space on datastore
* Fix monkey_patch docstring bug
* Change unit test for availability_zones.reset_cache
* Make compute support monitors and store metrics
* Added a new scheduler metrics weight plugin
* LXC: Image device should be reset in mount() and teardown()
* Add shutdown option to cleanup running periodic
* xenapi: Update VM memory overhead estimation
* Misc typos in nova
* Add default arguments for Connection class
* Update Instance from database after destroy
* Libvirt: Adding video device to instances
* Configuration element for describing video drivers
* Don't log stacktrace for UnexpectedTaskStateError
* Extends V3 servers api for pci support

2014.1.b1
---------

* LOG.warn() and LOG.error() should support translation
* Minor change for typo from patch 80b11279b
* network_device_mtu should be IntOpt
* Fix HTTP response code for network APIs and improve error message
* Use password masking utility provided in Oslo
* Sync log.py from Oslo-incubator
* xenapi: stop hang during glance download
* Clean up test cases for compute.manager._check_instance_build_time
* Recover from IMAGE-* state on compute manager start-up
* Document when config options were deprecated
* VMware: Fix unhandled session failure issues
* Use utils method when getting instance metadata and system metadata
* Add status mapping for shutoff instance when resize
* Fix docstring on SnapshotController
* Fix trivial typo 'descirption'
* Compact pre-Icehouse database migrations <= 160
* Compact pre-Icehouse database migrations <= 150
* Compact pre-Icehouse database migrations <= 140
* Remove redundant body validation for createBackup
* Change evacuate test hostnames to preferable ones
* Change conductor live migrate task to use select_destinations()
* Ensure proper notifications are sent when build finishes
* Periodic task _heal_instance_info_cache can now use slave db
* docker: access system_metadata as a dict
* Don't overwrite marker when checking if it exists
* There is no need to set VM status to ERROR on a failed migration
* DB migration 209: Clean up child rows as well
* Cleanup ec2/metadata/osapi address/port listen config option help
* Recover from build state on compute manager start-up
* Comply with new hacking 0.8 release
* Correct network_device_mtu help string
* Remove last of AssertEquals
* Fix Neutron Authentication for Metadata Service
* Update help for osapi_compute_listen_port
* libvirt: host update disable/enable report HTTP 400
* Catch InstanceIsLocked exception on server actions
* VMware: enable driver to work with postgres database
* Make test_evacuate from compute API DRYer
* Fix testcase config option imports
* Fix "in" comparisons with one element tuples
* Remove _security_group_chain_name from nova/virt/firewall.py
* Remove duplicate setting of os_type in libvirt config builder
* Fix logic in LibvirtConnTestCase._check_xml_and_uri
* Remove unused flag 'host_state_interval'
* Make object compat work with more positional args
* Fix LibvirtGenericVIFDriver.get_config() for quota
* Fix a tiny double quote matching in field obj model
* Move flags in libvirt's volume to the libvirt group
* Check Neutron port quota during validate_networks in API
* Failure during termination should always leave state as Error(Deleting)
* Remove duplicate FlavorNotFound exception handling in server create API
* Make check more pythonic
* Make sure report_interval is less than service_down_time
* Set is_public to False by default for volume backed snapshots
* Delete instance faults when deleting instance
* Pass Instance object to spice compute rpc api
* Pass Instance object to get_spice_console virt api
* Remove update_service_capabilities from scheduler rpc api
* Remove SchedulerDependentManager
* powervm: remove powervm virt driver from nova
* libvirt: Provide a port field for GlusterFS network disks
* Add API input validation framework
* Remove duplicate BuildAbortException block
* Remove compute 2.x rpc api
* Add v3 of compute rpc API
* Fix incorrect argument position in DbQuotaDriver
* Change ConductorManager to self.db when record cold_migrate event
* instance state will be stuck in unshelving when unshelve fails
* Fix some i18n issue in nova/compute/manager.py
* Don't gate on E125
* Supplement 'os-migrateLive' in actions list
* Corrected typo in host_manager
* Fix a lazy-load exception in security_group_update()
* fakevirt: return hypervisor_version as an int instead of a string
* Bump to sqlalchemy-migrate 0.8.2
* ComputeFilter shouldn't generate a warning for disabled hosts
* Remove cert 1.X rpc api
* Add V2 rpc api for cert
* Remove console 1.X rpc api
* Do not hide exception in update_instance_cache_with_nw_info
* Wrong handling of Instance expected_task_state
* XenAPI: Fix caching of images
* Extend LibvirtConfigGuest to parse guest cpu element info
* Rename instance_type parameter in migrate_disk_and_power_off to flavor
* convert min_count and max_count to type int in nova v3 api
* Add decorator expected_errors for flavors_extraspecs v3
* Remove nullable=True in models.py which is set by default
* baremetal: Make api validate mac address
* Use 204 instead of 202 for delete of keypairs v3
* Fix log message format issue for api
* Remove "set()" from CoreAPIMissing exception
* Move flag in libvirt's vif to the libvirt group
* Move flag in libvirt's utils to the libvirt group
* Move flags in libvirt's imagebackend to the libvirt group
* Extend the scheduler HostState for metrics from compute_node
* docker: return hypervisor_version as an int rather than a string
* Sync Log Levels from OSLO
* Removes check CONF.dhcp_options_enabled from nova
* Improved debug ability for log message of cold migration
* Adjust the order of notification for shelve instance
* Add FloatField for objects
* XenAPI: Fix config section usage
* Fix performance of Server List with Neutron for Admins
* Add context as parameter for two libvirt APIs
* Add context as parameter for resume
* xenapi: move session into new client module
* xenapi: stop key_init timeout failing set password
* xenapi: workaround vbd.plug race
* Address infinite loop in nova compute when getting network info
* Use of logging in native thread causes deadlock connecting to libvirtd
* Add v3 api samples for shelve
* Imported Translations from Transifex
* libvirt: Fix log message when disable/enable a host
* Fix missing format specifier in ImagePropertiesFilter log message
* Sync the DB2 communication error code change from olso
* baremetal: refactor out powervm dependency
* handle migration errors
* Make compute manager _init_instance use native objects
* Fix for reading the xenapi_device_id from image metadata
* Check if reboot request type is None
* Use model_query() instead of session.query in db.instance_destroy
* Fix up spelling mistake
* Periodic task _poll_unconfirmed_resizes can now use slave db
* Include image block device maps in info
* Sync local from oslo
* objects: declare some methods as static
* Handle UnicodeEncodeError in validate_integer
* Remove traces of V3 personality extension from api samples
* Removes os-personalities extension from the V3 API
* VMware: add support for VM diagnostics
* Remove useless api sample template files for flavor-rxtx v3
* Fix libvirt evacuate instance on shared storage fails
* Fixes get_vm_storage_paths issue for Hyper-V V2 API
* Clean up how test env variables are parsed
* Add missing argument max_size in libvirt driver
* VMware: Always upload a snapshot as a preallocated disk
* Fix empty selector XML bug
* Libvirt:Instance resize confirm issue against NFS
* Add V2 rpc api for console
* Fix sample parameter of agent API
* VMware: fix snapshot failure when host in maintenance mode
* Clean up unused variables
* Add a driver method to toggle instance booting
* Fix cells instance_create extra kwarg
* handle empty network info in instance cache
* Remove deprecated instance_type alias from nova-manage
* xenapi: kernel and ramdisk missing after live-migrate
* Remove V2 API version of coverage extensions
* Remove V3 API version of coverage extension
* Update openstack/common/periodic_task
* Use 201 instead of 200 for action create of flavor-manage v3
* Enforce metadata string type on key/value pairs
* Fixes RequestContext initialization failure
* Move flags in libvirt's imagecache to the libvirt group
* Move base_dir_name option to somewhere more central
* Move some libvirt specific flags into a group
* Removed unused instance object helper function
* Update openstack/common/lockutils
* Rename InstanceType exceptions to Flavor
* Added monitor (e.g. CPU) to monitor and collect data
* Conditionalise automatic enabling of disabled host
* Users with admin role in Nova should not re-auth with Neutron
* Use 400 instead of 422 for invalid input in v3 servers core
* Fix limits v3 follow API v3 rules
* Remove used_limits extension from the V3 API
* Remove reduntant call to update_instance_info_cache
* Add flavor-extra-specs to core for V3 API
* Add flavor-access to core for V3 API
* Remove unused libvirt_ovs_bridge flag
* Fix AttributeError(s) from get_v4/6_ips_by_interface
* Raising exception for invalid floating_ip's ID
* libvirt: Allow delete to complete when a volume disconnect fails
* replace assertNotEquals with assertNotEqual
* Add V3 api samples for access_ips
* Add v3 api samples for scheduler-hints
* Add v3 api samples for availability_zone
* Add V3 API sample for server's actions
* Cache Neutron Client for Admin Scenarios
* More instance_type -> flavor renames in db.api
* Cache compute node info in Hypervisor api
* Reverse the quota reservation in revert_resize
* Rename virtapi.instance_type_get to flavor_get
* Xenapi: Allow windows builds with xentools 6.1 and 6.2
* Make baremetal support metadata for ephemeral block-device-mapping
* Make baremetal_deploy_helper understand ephemeral disks
* Removed unused methods from db.api
* Fix type mismatch errors in NetworkTestCase
* VMware: Detach volume should not delete vmdk
* xenapi: Fix agent update message format
* xenapi: Fix regression issue in agent update
* Shrink the exception handling range
* Moved quota headroom calculations into quota_reserve
* Remove dup of LibvirtISCSIVolumeDriver in LibvirtISERVolumeDriver
* Replace assertEquals with assertEqual - tests/etc
* libvirt: pass instance to a log() call in the standard way
* xenapi: Move settings to their own config section
* domainEventRegisterAny called too often
* Allow configuring the wsgi pool size
* driver tests (loose ends): replace assertEquals with assertEqual
* baremetal: replace assertEquals with assertEqual
* image tests: replace assertEquals with assertEqual
* virt root tests: replace assertEquals with assertEqual
* Remove unnecessary steps for cold snapshots
* baremetal: Make volume driver use a correct source device
* Update quota-class-set/quota-set throw 500 error
* Add log_handler to implement the publish_errors config option
* Imported Translations from Transifex
* Enable non-ascii characters in flavor names
* Move docker specific options into a group
* Check return code of command instead of checking stderr
* Added tests for get_disk_bus_for_disk_dev function
* Checking existence of index before dropping
* add hints to api_samples documentation
* xenapi: check for IP address in live migration pre check
* Remove live_snapshot plumbing
* Remove unused local variable in test_compute
* Make v3 admin_password parameters consistent
* Flavor name should not contain only white spaces
* fix a typo error in test_libvirt_vif.py
* Remove unused local variables in test case
* Rename _get_vm_state to _get_vm_status
* Ensure deleted instances' status is always DELETED
* Let resource_tracker report right migration status
* Imported Translations from Transifex
* nit: fix indentation
* Always pass context to compute driver destroy()
* Imported Translations from Transifex
* db tests: replace assertEquals with assertEqual
* compute tests: replace assertEquals with assertEqual
* Catch exception while building due to instance being deleted
* Refactor UnexpectedTaskStateError for handling of deleting instances
* Parted 'invalid option' in XenAPI driver
* Specify DB URL on command-line for schema_diff.py
* Fix `NoopQuotaDriver.get_(project|user)_quotas` format
* Send delete.end with latest instance state
* Add missing fields in DriverBlockDevice
* Fix the boto version comparison
* Add test for class InsertFromSelect
* Process image BDM earlier to avoid duplicates
* Clean BDM when snapshoting volume-backed instances
* Remove superflous 'instances' joinedload
* Fix OLE error for HyperV
* Make the vmware pause/unpause unit tests actually test something
* Fixes the destroy() method for the Docker virt driver
* xenapi: converting XenAPIVolumeTestCase to NoDB
* Move `diff_dict` to compute API
* Add compatibility for InstanceMetadata and primitives
* Issue brctl/delif only if the bridge exists
* ensure we don't boot oversized images
* Add V3 API samples for config-drive
* Remove duplicated test
* Add notification for host operation
* Sync log from oslo
* Replace assertEquals with assertEqual - tests/scheduler
* Make non-admin users can unshelve a server
* Fix interface-attach removes existing interfaces from db
* Correct exception handling
* Utilizes assertIsNone and assertIsNotNone - tests/etc
* Use elevated context in resource_tracker.instance_claim
* Add updates and notifications to build_and_run_instance
* Add network handling to build_and_run_instance
* Make unshelve use new style BDM
* Make _get_instance_nw_info() use Instance object
* Convert evacuation code to use objects
* Deprecate two security_group-related methods from conductor
* Make metadata server use objects for Instance and Security Groups
* Replace assertEquals with assertEqual - tests/api
* Remove security_group-related methods from VirtAPI
* Make virt/firewall use objects for Security Groups and Rules
* Drop auth_token configs for api-paste.ini
* Add auth_token settings to nova.conf.sample
* Use _get_server_admin_password()
* Pass volume_api to get_encryption_metadata
* Comments for db.api.compute_node_*() methods
* Fix migration 185 to work with old fkey names
* Adds V3 API samples for user-data
* Enforce compute:update policy in V3 API
* tenant_id implies all_tenants for servers list in V3 API
* Move get_all_tenants policy enforcement to API
* all_tenants=0 should not return instances from all tenants
* Utilizes assertIsNone and assertIsNotNone - tests/virt
* xenapi: workaround for failing vbd detach
* xenapi: strip base_mirror after live-migrate
* xenapi: refactor get_all_vdis_in_sr
* Remove unused expected_sub_attrs
* Remove useless variable from libvirt/driver.py
* Add a metadata type validation when creating vm
* Update schema_diff.py to use 'postgresql' URLs
* Disable nova-compute on libvirt connectivity exceptions
* Make InstanceInfoCache load base attributes
* Add SecurityGroupRule object
* Add ephemeral_mb record to bm_nodes
* Stylistic improvement of models.ComputeNodeStat
* clean up numeric expressions in tests
* replaced e.message with unicode(e)
* Add DeleteFromSelect to avoid database's limit
* Imported Translations from Transifex
* Utilizes assertIsNone and assertIsNotNone - tests/api
* Include name/level in unit test log messages
* Remove instance_type* proxy methods from nova.db.api
* Add InstanceList.get_by_security_group()
* Make security_group_rule_get_by_security_group() honor columns
* Claim IPv6 is unsupported if no interface with IPv6 configured
* Pass thru credentials to allow re-authentication
* network tests: replace assertEquals with assertEqual
* Nova-all: Replace basestring by six for python3 compatability
* clean up numeric expressions with byte constants
* Adds upper bound checking for flavor create parameters
* Remove fake_vm_ref from test_vmwareapi.py
* xen tests: replace assertEquals with assertEqual
* Fix tests to work with mysql+postgres concurrently
* Enable extension access_ips for v3 API
* Correct update extension point's check_func for v3 server's controller
* Updates the documentation for nova unit tests
* Remove consoleauth 1.X rpc api
* consoleauth: retain havana rpc client compat
* Pull system_metadata for notifications on instance.save()
* Allow _sync_power_states periodic task to hit slave DB
* Fix power manager hangs while executing ipmitool
* Update my mailmap
* Stored metrics into compute_nodes as a json dictionary
* Bad except clauses order causes wrong text in http response
* Add nova.db.migration.db_initial_version()
* Fix consoleauth check_token for rpcapi v2
* Nova db/api.py docstring cleanups..
* Adds XML namespace example for disk config extension
* Remove multipath mapping device descriptor
* VMware: fix VM resize bug
* VMware: fix bug for reporting instance UUID's
* Remove extra space in tox.ini
* Fix migrate w/ cells
* Add tests for compute (child) cell
* Call baselineCPU for full feature list
* Change testing of same flavor resize
* Fix bad typo in cloudpipe.py
* Fix compute_api tests for migrate
* Replace basestring by six for python3 compatability
* Add flavor-manage to core for V3 API
* Refactor unit tests code for python3 compatability
* make libvirt driver get_connection thread-safe
* Remove duplicates from exceptions list
* Apply six for metaclass
* Add byte unit constants
* Add block device handling to build_and_run_instance
* Reply with a meaningful exception, when libvirt connection is broken
* Fix getting nwinfo for Instance obj
* Make cells info_cache updates more tolerant
* Raise an error if module import fails
* Drop RPC securemessage.py and crypto module
* Remove deprecated libvirt VIF driver code
* nova.exception does not have a ProcessExecutionError
* Fix setting backdoor port in service start
* Sync lockutils from oslo
* Fix wrong description when updating quotas
* Expose additional status in baremetal API extension
* migrate server doesn't raise correct exception
* Make security_group_get() more flexible about joins
* Make Object FieldType take an object name instead of a class
* Hyper-v: Change the hyper-v error log for debug when resize failed
* Adds V3 API samples for the disk-config extension
* Utilizes assertIn - tests/etc
* Fix all scripts to honor the enabled_ssl_apis flag
* Updated from global requirements
* Fix i18n issue for nova/compute/manager.py
* Change tab to blank space in hypervisors-detail-resp
* Fixing ephemeral disk creation
* Merging two mkfs commands
* xenapi: ephemeral disk partition should fill disk
* Fix the ConsolesController class doc string
* xenapi: Speeding up the easy cases of test_xenapi
* xenapi: Speeding up more tests by switching to NoDB
* Remove .pyc files before generating sample conf
* xenapi: migrate multiple ephemeral disks
* Fail quickly if file injection for boot volume
* Add obj_make_compatible()
* Updated from global requirements
* Make cells 'flavorid' for resizes
* Fixes unicode issue in the Hyper-V driver
* Add missing ' to extra_specs debug message
* VMware: Fix ValueError unsupported format character in log message
* graceful-shutdown: add graceful shutdown into compute
* remove unused network module from certificates api extension
* Sync fixture module from oslo
* Fixes Invalid tag name error when using k:v tagname
* Fix tests for migration 227 to check sqlite
* Adds V3 API samples for console output
* Add V2 rpc api for consoleauth
* Update version aliases for rpc version control
* Improve object instantiation syntax in some tests
* A nicer calling convention for object instantiation
* Updates OpenStack Style Commandments link
* Updated from global requirements
* Adding support for multiple hypervisor versions
* Manage None value for the 'os_type' property
* Add CIDR field type
* Validate parameters of agent API
* Adding Read-Only volume attaching support to Nova
* Update timeutils.py from oslo
* Fix docstring related to create_backup API
* powervm tests: replace assertEquals with assertEqual
* Add V3 API sample for admin-password
* Remove duplicated test cases
* Add extension access_ips for v3 API
* Ensure migration 209 works with NULL fkey values
* Cells: Fix instance deletes
* Uses oslo.imageutils
* Add testr concurrency option for run_tests.sh
* Fix the image name of a shelved server
* xenapi: test_driver should use NoDBTestCase
* xenapi: Speedup vm_util and vmops tests
* xenapi: speedup test_wait_for_instance_to_start
* Remove xenapi rpm building code
* Fixes datastore selection bug
* Fixes Hyper-V snapshot spawning issue
* Make SecurityGroup receive context
* Fix DB API mismatch with sqlalchemy API
* Remove aggregate metadata methods from conductor and virtapi
* Make XenAPI use Aggregate object
* libvirt: add missing i18n support
* Adds V3 API samples for attach-interfaces
* Make aggregate methods use new-world objects
* Add missing key attribute to AggregateList.get_by_host()
* Fix i18n issue for nova/virt/baremetal/virtual_power_driver.py
* Fix scheduler rpcapi deprecated method comment
* Send notifications on keypair create/delete
* Use `versionutils.is_compatible` for Dom0 plugin
* Use `versionutils.is_compatible` for Nova Objects
* Improve logging messages in libvirt driver
* xenapi: stop agent errors stopping build
* Fix NovaObject versioning attribute usage
* xenapi: removes sleep after final upload retry
* xenapi: stop using get_all_vdis_in_sr in spawn
* populate local-ipv4 address in config drive
* Harden version checking for boto
* Handle MarkerNotFound better in Flavor API
* Sanitize passwords when logging payload in wsgi
* Remove unnecessary "LOG.error()" statement
* xenapi: simplify _migrate_disk_resizing_up
* xenapi: revert on _migrate_disk_resizing_up error
* xenapi: make _migrate_disk_resizing_up use @step
* libvirt tests: replace assertEquals with assertEqual
* Use the oslo fixture module
* Port server actions unittests to V3 API Part 2
* Remove unused method _get_res_pool_ref from VMware
* Imported Translations from Transifex
* Check for None when cleaning PCI dev usage
* Fix vmwareapi driver get_diagnostics calls
* Remove instance_info_cache_update() from conductor
* compute api should throw exception if soft reboot invalid state VM
* Make a note about Object deepcopy helper
* Avoid caching quota.QUOTAS in Quotas object
* Remove transitional callable field interface
* Make the base object infrastructure use Fields
* Migrate some tests that were using callable fields
* Migrate NovaPersistentObject and ObjectListBase to Fields
* Migrate Instance object to Fields
* Utilizes assertIn - tests/api/etc
* Utilizes assertIn - tests/virt
* Utilizes assertIn - tests/api/contrib
* Utilizes assertIn - tests/api/v3
* Make scheduler disk_filter take swap into account
* Add variable to expand for format string
* Make quota sets update type handling a bit safer
* Add test_instance_get_active_by_window_joined
* Fixes error on live-migration of volume-backed vm
* Migrate PciDevice object to Fields
* Migrate InstanceInfoCache object to Fields
* Migrate InstanceFault object to Fields
* Migrate Service object to Fields
* Migrate ComputeNode object to Fields
* Migrate Quotas object to Fields
* Migrate InstanceGroup object to Fields
* Migrate InstanceAction and InstanceActionEvent objects to Fields
* Move exception definitions out of db api
* Remove unused scheduler rpcapi from compute api
* Libvirt: disallow live-mig for volume-backed with local disk
* xeanpi: pass network_info to generate_configdrive
* Replace incorrect Null checking to return correctly
* Fix nova DB 215 migration script logic error
* Xenapi: set hostname when performing a network reset
* Fix "resource" length in project_user_quotas table
* Migrate SecurityGroup object to Fields
* Migrate Migration object to Fields
* VMware: fix regression attaching iscsi cinder volumes
* Remove whitespace from cfg options
* cleanup after boto 2.14 fix
* Add boto special casing for param changes in 2.14
* xenapi: simplify PV vs HVM selection logic
* fix missing host when unshelving
* Fix a typo of tabstop
* Fix error message of os-cells sync_instances api
* Log which filter failed when on log level INFO
* Migrate KeyPair object to Fields
* Migrate Aggregate object to Fields
* Make field object support transitional call-based interface
* Add Field model and tests
* Fix conductor's object change detection
* Remove obsolete redhat-eventlet.patch
* Move is_volume_backed_instance to new style BDM
* Add a get_root_bdm utility function
* Libvirt: allow more than one boot device
* Libvirt: make boot dev a list in GuestConfig
* Remove compute_api_class config option
* Libvirt: add boot_index to block device info dicts
* Fixes Hyper-V issue with VHD file format
* Update log message for add_host_to_aggregate
* Correct use of ConfigFilesNotFoundError
* hyperv tests: replace assertEquals with assertEqual
* Utilizes assertNotIn
* VMware tests: replace assertEquals with assertEqual
* Fix incorrect root partition size and compatible volume name
* Imported Translations from Transifex
* Utilize assertIsInstance
* Fix typos in nova/api code
* Make `update_test` compatible with nose
* Add a custom iboot power driver for nova bm
* Fix FK violation errors in InstanceActionTestCase
* Fix test_shadow_tables() on PostgreSQL/MySQL
* Fix PCI devices DB API tests
* Fix DB API tests depending on the order of rows
* Use print function rather than print statement
* Update default for running_deleted_instance_action
* Drop unused BM start_console/stop_console methods
* VMware: Network fallback in case specified one not found
* baremetal: Add missing method to volume driver
* baremetal: Use network API to get fixed IPs
* Replace decprecated method aliases in tests
* catch exception in start and stop server api
* Ensure that the netaddr import is in the 3rd party section
* Fix status code of server's action confirm_resize for v3
* Remove duplicated method in test_compute_api.py
* Create flavor-access for the tenant when creating a private flavor
* Fix root disk not be detached after deleting lxc container
* fallocate image only when user has write access
* Fixes typo in ListTargets CLI in hyperv driver
* Fixes typos in nova/db code
* Fixes typos in the files in the nova folder
* Avoid clobbering {system_,}metadata dicts passed to instance update
* Baremetal: Be more patient with IPMI and BMC
* VMware: fix bug with booting from volumes
* Fixes typos in nova/compute files
* Fixes typos in virt files
* Fix docstring for disk_cachemodes
* Plug Vif into Midonet using Neutron port binding
* VMware: remove deprecated configuration variable
* Fix races in v3 cells extension tests
* Add V3 API samples for consoles
* Update allowvssprovider in xenstore_data
* Fix races in cells extension tests
* Move `utils.hash_file` -> `imagecache._hash_file`
* Remove `utils.timefunc` function
* Remove `utils.total_seconds`
* Remove `utils.get_from_path`
* Fix divergence in attach_interfaces extensions
* Replace assert_ with assertTrue
* Fixes several misc typos in scheduler code
* Fix libvirt test on systems with real iSCSI devices
* Reserve 10 migrations for backports
* Sync three-part RPC versions support from Oslo
* Remove unused dict functions from utils
* Avoid mutable default args in _test_populate_filter_props
* XenAPI: Add versioning for plugins
* Add Docstring to some scheduler/driver.py methods
* Libvirt: default device bus for floppy block devs
* Fix filter_properties of unshelve API
* hyperv: Initialize target_iqn in attach_volume
* Log if a quota_usages sync updates usage information

2013.2.rc1
----------

* Open Icehouse development
* baremetal: Fix misuse of "instance" parameter of attach/detach_volume
* Fix the wrong params of attach/detach interface for compute driver
* Imported Translations from Transifex
* Adds missing entry in setup.cfg for V3 API shelve plugin
* Avoid spamming conductor logs with object exceptions
* Prefix `utils.get_root_helper` with underscore
* Remove `utils.debug`
* Remove `utils.last_octet`
* Remove `utils.parse_mailmap`
* Updated from global requirements
* Remove unecessary `get_boolean` function
* Make Exception.format_message aware of Messages
* Disable lazy gettext
* VMware: Check for the propSet attribute's existence before using
* VMware: fix bug for invalid data access
* Make rbd.libvirt_info parent class compatible
* Host aggregate configuration throws exception
* VMware: Handle cases when there are no hosts in cluster
* VMWare: Disabling linked clone doesn't cache images
* Fixes inconsistency in flavors list with marker
* Fix indentation in virt.libvirt.blockinfo module
* Update jsonutils.py from oslo
* Fix loading instance fault in servers view
* Refactor test cases related to instance object
* Use system locale for default request language
* Update attach interface api to use new network model
* Adds V3 API specific urlmap tests
* Catch volume errors during local delete
* Fix processutils.execute errors on windows
* Fixes rescue doesn't honor enable password conf for v3
* VMware: Fix bug for root disk size
* Fix incorrect exception raised during evacuate
* Full sync of quota_usages
* Fix log format error in lazy-load message
* xenapi: reduce impact of errors during SR.scan
* Forced scheduling should be logged as Audit not Debug
* xenapi: Resize operations could be faster
* Resource limits check sometimes enforced for forced scheduling
* Skip test if sqlite3 not installed
* Add notification for pause/unpause instance
* Make LiveMigrateTask use build_request_spec()
* Ensure image property not set to None in build_request_spec()
* Make sure periodic task sync_power_states continues on error
* get_all_flavors uses id as key to be unique
* fix the an Unexpected API Error issue in flavor API
* Adds V3 API samples for srvcs, tenant usage, server_diagnostics
* VMware: Fix SwitchNotFound error when network exists
* Fix unicode string values missing in previous patch
* Fix stopping instance in sync_power_states
* Remove deprecated task states
* plug_vif raise NotImplementedError instead of pass
* Check instance exists or not when evacuate
* xenapi: ignore 500 errors from agent resetnetwork
* Add flavor name validation when create flavor
* xenapi: enforce filters after live-migration
* xenapi: set vcpu cap to ensure weight is applied
* Get image metadata in to_xml for generating xml
* Add notification on deleting instance without host
* Fix V3 API flavor returning empty string for attributes
* Fix v3 server rebuild deserializer checking with wrong access_ip key
* Windows instances require the timezone to be "localtime"
* Don't wrap Glance exceptions in NovaExceptions
* Update rootwrap with code from oslo
* fix typo & grammer in comment 363-364
* Make Instance.refresh() extra careful about recursive loads
* Log object lazy-loads
* Ensure we don't end up with invalid exceptions again
* Fix console db can't load attribute pool
* Fix HTTP response for PortNotFound during boot (v3 API)
* Fixes assertion bug in test_cells_weights.py
* Remove _get_compute_info from filter_scheduler.py
* VMware: fix bug for incorrect cluster access
* Add V3 API samples for security-groups
* Correct lock path for storage-registry-lock
* Moved registration of lifcycle events handler in init_host()
* Rebuilding stopped instance should not set terminated_at
* Require oslo.config 1.2.0 final
* Removes pre_live_migration need for Fixed IPs
* Move call to _default_block_device_names() inside try block
* Fix several flake8 issues in the plugins/xenserver code
* Fix type is overwritten when UPDATE cell without type specified
* Adds v3 API samples for hide server addresses and keypairs
* Always filter out multicast from reflection
* VMware: fix bug with booting from volume
* VMware: enable VNC access without user having to enter password
* Remove exceptions.Duplicate
* Add v3 API samples for rescue
* Added 'page_size' param to image list
* Fix SecurityGroupsOutputTest v3 security group tests
* Fixes file mode bits of compute/manager.py
* Adds v3 API samples for hosts extension
* Only update PCI stats if they are reported from the host
* xenapi: Cleanup pluginlib_nova
* Fix Instance object assumptions about joins
* Bring up interface when enslaving to a bridge
* v3 API samples for servers
* xenapi: refactor: move UpdateGlanceImage to common
* Imported Translations from Transifex
* Fixes modules with wrong file mode bits in virt package
* Adds v3 API samples for ips and server_metadata extensions
* Fix V3 API server metadata XML serialization
* libvirt: add test case for _hard_reboot
* Add tests for pre_live_migration
* Adds V3 API samples for evacuate,ext-az,ext-serv-attrs
* Add V3 API samples for ext-status,hypervisor,admin-actions
* Code change for regex filter matching
* Convert TestCases to NoDBTestCase
* VMware: ensure that resource exists prior to accessing
* Fixes modules with wrong file mode bits
* Fixes test scripts with wrong bitmode
* Update sample config generator script
* Instance object incorrectly handles None info_cache
* Don't allow pci_devices/security_groups to be None
* Allow for nested object fields that cannot be None
* Object cleanups
* Convert TestCases to NoDBTestCase
* Convert TestCases to NoDBTestCase
* Actually fix info_cache healing lazy load
* Fixes host stats for VMWareVCDriver
* libvirt: ignore false exception due to slow NFS on resize-revert
* Syncs install_venv_common.py from oslo-incubator
* Correct deleted_at value in notification messages
* VMwareVCDriver Fix sparse disk copy error on spawn
* Remove unused _instance_update() method in compute api
* Change service id to compute for compute/api.py
* XenAPI raise InstanceNotFound in _get_vm_opaque_ref
* Replace OpenStack LLC with OpenStack Foundation
* Send notification for any updates to instance objects
* Add flag to make baremetal.pxe file injection optional
* Force textmode consoles on baremetal
* Typo: certicates=>certificates in nova.conf
* Remove print statement from test_quotas that fails H233 check
* Fix for os-availability-zone/detail returning 500
* Convert TestCases to NoDBTestCase
* Fixes the usage of PowerVMFileTransferFailed class
* MultiprocessWSGITest wait for workers to die bug
* Prune node stats at compute node delete time
* VMware: datastore regex not honoured
* VMware: handle exceptions from RetrievePropertiesEx correctly
* VMware: Fix volume detach failure
* Remove two unused config options in baremetal
* Adds API samples and unitests for os-server-usage V3 extension
* xenapi: Make rescue safer
* Add V3 API samples for quota-sets/class-sets,inst-usage-audit-log
* Fix problem with starting Windows 7 instances using VMware Driver
* VMware: bug fix for instance deletion with attached volume
* Fix migration 201 tests to actually test changes
* Don't change the default attach-method
* Fix snapshot failure with VMwareVCDriver
* Fix quota direct DB access in compute
* Add new-world Quota object
* Fix use of bare list/dict types in instance_group object
* Fix non-unicode string values on objects
* Add missing get_available_nodes() refresh arg
* Make Instance.Name() not lazy-load things
* Add debugging to ComputeCapabilitiesFilter
* xenapi: fix pep8 violations in nova plugins
* Retry on deadlock in instance_metadata_delete
* Make virt drivers use a consistent hostname
* [VMware] Fix problem transferring files with ipv6 host
* VMware: Fix ensure_vlan_bridge to work properly with existing DVS
* Fix network info injection in pure IPv6 environment
* delete a non existent flavor extra spec returns 204
* Don't use ModelBase.save() inside of transaction
* send the good binding to neutron after live-migration
* Add linked clone related unit tests for VMware Hyper
* Ensure anti affinity scheduling works
* pci passthrough bug fix:hasattr dones not work for dict
* Fix rename q_exc to n_exc (from quantum to neutron)
* Improve "keypair data is invalid" error message
* Enable fake driver can live migration
* Don't use sudo to discover ipv4 address
* xenapi: Fix rescue
* Fix create's response is different with requested for sec-grps V3
* Fix logging of failed baremetal commands
* Add v3 API samples for os-extended-volumes
* Better help for generate config
* Fix hyper-v vhd real size bigger than flavor issue
* Remove unused and duplicate code
* Policy check for forced_host should be before the instance is created
* Remove cached console auth token after migration
* Don't generate notifications when reaping running_deleted instances
* Add instance_flavor_id to the notification message
* Edits for nova.conf.sample
* xenapi: fix where root_gb=0 causes problems
* Wire in ConfKeyManager._generate_hex_key!
* Drop unused logger from keymgr/__init__.py
* Move required keymgr classes out of nova/tests
* Translate more REST API error messages
* pci passthrough fails while trying to decode extra_info
* Update requirements not to boto 2.13.0
* Port server actions unittests to V3 API Part 1
* Remove unused method in scheduler driver
* Ignore H803 from Hacking
* Fixes misuse of assertTrue in virt test scripts
* Add missing notifications for rescue/unrescue
* Libvirt: volume driver set correct device type
* Make v3 API versions extensions core
* Make Instance.save() log missing save handlers
* Don't fail if volume has no image metadata
* Get image properties instead of the whole image
* Remove extra 'console' key for index in extensions consoles v3
* Fix V3 API server extension point exception propagation
* VMware: nova-compute crashes if VC not available
* Update mailmap for jhesketh
* Code change for nova support glance ipv6 address
* disassociate_address response should match ec2
* Adds V3 API samples for remote consoles, deferred delete
* Fix asymmetric view of object fields
* Use test.TestingException where possible
* Add encryption support for volumes to libvirt
* VMware: fix driver support for hypervisor uptime
* Wrong arguments when calling safe_utils.getcallargs()
* Add key manager implementation with static key
* Remove duplication in disk checks
* Change the duplicate class name TestDictMatches in test_matches.py
* Add alias as prefix to request params for config_drive v3
* xenapi: Add per-instance memory overhead values
* Fixes misuse of assertTrue in test scripts
* Remove unused and wrong code in test_compute.py
* Remove cases of 'except Exception' in tests.image
* Remove _assert_compute_node_has_enough_memory from filter_scheduler.py
* Fix regression issues with cells target filter
* Remove out of date list of jenkins jobs
* Don't lose exception info
* Add filter for soft-deleted instances to periodic cleanup task
* Don't return query from db API
* Update fedora dev env instructions
* Only return requested network ID's
* Ensure get_all_flavors returns deleted items
* Fix the order of query output for postgres
* Fix migration 211 to downgrade with MySQL
* Removed duplicated class in exception.py
* Fix console api pass tuple as topic to console rpc api
* Enable test_create_multiple_servers test for V3 API
* VMware image clone strategy settings and overrides
* Reduce DB load caused by heal instance info cache
* Clean up object comparison routines in tests
* Clean up duplicated change-building code in objects
* disable direct mounting of qcow2 images by default
* xenapi: ensure finish_migration cleans on errors
* xenapi: regroup spawn steps for better progress
* xenapi: stop injecting the hostname during resize
* xenapi: add tests for finish_migration and spawn
* xenapi: tidy ups to some spawn related methods
* xenapi: move kernel/ramdisk methods to vm_utils
* xenapi: ensure pool based migrate is live
* Fix live-migrate when source image deleted
* Adds v3 API samples for limits and simple tenant usage
* Return a NetworkInfo object instead of a list
* Fix compute_node_get_all() for Nova Baremetal
* Add Neutron port check for the creation of multiple instances
* Remove unused exceptions
* Add V3 API samples for flavor-manage,flavor-extra-specs
* Add V3 API samples for flavors,flavor-rxtx,flavor-access
* Catch more accuracy exception for _lookup_by_name
* Fixes race cond between delete and confirm resize
* Fixes unexpected exception message in ProjectUserQuotaNotFound
* Fixes unexpected exception message in PciConfigInvalidWhitelist
* Add missing indexes back in from 152
* Fix the bootfile_name method call in baremetal
* update .mailmap
* Don't stacktrace on ImageNotFound in image_snapshot
* Fix PCIDevice ignoring missing DB attributes
* Revert "Call safe_encode() instead of str()"
* Avoid errors on some actions when image not usable
* Add methods to get image metadata from instance
* Fix inconsistent usages for network resources
* Revert baremetal v3 API extension
* Fixes misuse of assertTrue in compute test scripts
* add conf for number of conductor workers
* xenapi: Add efficient impl of instance_exists()

2013.2.b3
---------

* Updated from global requirements
* Fix failure to emit notification on Instance.save()
* MultiprocessWSGITest wait for workers to die bug
* Synchronize the key manager interface with Cinder
* Remove indirect dependency from requirements.txt
* Clean up check for migration 213
* Add V3 API samples for instance-actions,extenions
* fix conversion type missing
* Enable libvirt driver to use the new BDM format
* Allow block devices without device_name
* Port to oslo.messaging.Notifier API
* Add expected_errors for extension aggregates v3
* Refresh network info cache for secgroups
* Port "Make flavors is_public option .." to v3 tree
* Add missing Aggregate object tests
* Generalize the _make_list() function for objects
* PCI passthrough Libvirt vm config
* Add columns_to_join to instance_update_and_get_original
* XenAPI: Allow 10GB overhead on VHD file check size
* Adds ephemeral storage support for Hyper-V
* Adds Hyper-V VHDX support
* Create mixin class for common DB fields
* Deprecate conductor migration_get()
* Change finish_revert_resize paths to use objects
* Change finish_resize paths to use objects
* Change resize_instance paths to use objects
* VMware: Nova boot from cinder volume
* VMware: Multiple cluster support using single compute service
* Nova support for vmware cinder driver
* Adds Hyper-V dynamic memory support
* xenapi: Fix download_handler fallback
* Ensure old style images can be resized
* Add nova.utils.get_root_helper()
* Inherit base image properties on instance creation
* Use utils.execute instead of subprocess
* Fixes misuse of assertTrue in Cells test scripts
* Remove versioning from IOVisor APIs PATH
* Revert "Importing correlation_id middleware from oslo-incubator"
* update neutronclient to 2.3.0 minimum
* Adds metrics collection support in Hyper-V
* Port all rpcapi modules to oslo.messaging interface
* Fix a gross duplication of context code in objects tests
* Make compute_api use Aggregate objects
* Add Aggregate object model
* Add dict and list utility functions for object typing
* VMware: remove conditional suds validation
* Limit instance fault messages to 255 characters
* Add os-assisted-volume-snapshots extension
* Scheduler rpcapi 2.9 is not backwards compatible
* Adds support for Hyper-V WMI V2 namespace
* Port flavormanage extension to v3 API Part 2
* Add os-block-device-mapping to v3 API
* Improves Hyper-V vmutils module for subclassing
* xenapi: add support for auto_disk_config=disabled
* Check ephemeral and swap size in the API
* Adds V3 API samples for cells and multinic
* Increase volume created checking retries to 60
* Fix changes_since for V3 API
* Make v3 API console-output extension core
* Makes v3 API keypairs extension core
* Add support for API message localization
* Fix typo and indent error in isolated_hosts_filter.py
* Adds 'instance_type' param to build_request_spec
* Guest-assisted-snaps libvirt implementation
* Improve EC2 API error responses
* Remove EC2 postfix from InvalidInstanceIDMalformedEC2
* Introduce InternalError EC2 error code
* Introduce UnsupportedOperation EC2 error code
* Introduce SecurityGroupLimitExceeded EC2 error code
* Introduce IncorrectState EC2 error code
* Introduce AuthFailure EC2 error code
* Fix ArchiveTestCase on PostgreSQL
* Fix AggregateDBApiTestCase on PostreSQL and MySQL
* Port Cheetah templates to Jinja2
* Libvirt: call capabilites before getVersion()
* Remove _report_driver_status from compute/manager.py
* Interpret BDM None size field as 0 on compute side
* Add test cases for resume_state_on_host_boot
* Add scheduler support for PCI passthrough
* Fix v3 swap volume with wrong signature
* vm_state and task_state not updated during instance delete
* VMware: use VM uuid for volume attach and detach
* xenapi: support raw tgz image download
* xenapi: refactor - extract image_utils
* Add block_device_mapping_get_all_by_instance to virtapi
* Sync rpc from oslo-incubator
* Fix the multi-instance quota message
* Fix virtual power driver fails silently
* VMware: Config Drive Support
* xenapi: skip metadata updates when VM not found
* Make resource_tracker record host_ip
* Disable compute fanout to scheduler
* Make image_props_filter use information from DB not RPC
* Make compute_capabilities_filter use information from DB not RPC
* XenAPI: More operations with LVM-based SRs
* XenAPI: make_partition fixes for Dom0
* Fix wrong method call in baremetal
* powervm: make start_lpar timeout
* Disable retry filter with force_hosts or force_nodes
* Call safe_encode() instead of str()
* Fix usage of classmethod in various places
* Fix V3 API quota_set tests using V3 url and request
* Handle port over-quota when allocating network for instance
* Fix warning log message typo in resource_tracker.instance_claim
* Sync filetuils from oslo-incubator
* Fix VMware fakes
* DRY up use of @wrap_exception() decorator
* Remove unused fake run_instance() method
* Use ExceptionHelper to bypass @client_exceptions
* Added new hypervisor to support Docker containers
* Introduce InvalidPermission.Duplicate EC2 error code
* Fix and gate on H302 (import only modules)
* On snapshot errors delete the image
* Remove dis/associate actions from security_groups v3
* Add volume snapshot delete API test case
* Assisted snapshots compute API plumbing
* Adds V3 API samples for agents, aggregates and certificates
* Adds support for security_groups for V3 API server create
* powervm: Use FixedIntervalLoopingCall for polling LPAR status
* xenapi: agent not inject ssh-key if cloud-init
* Tenant id filter test is not correct
* Add PCI device tracker to compute resource tracker
* PCI devices resource tracker
* PCI device auto discover
* Add PCI device filters support
* Avoid swallowing exceptions in network manager
* Make compute_api use Service and ComputeNode objects
* Adding VIF Driver to support Mellanox Plugin
* Change prep_resize paths to use objects
* Make backup and snapshot use objects
* Deprecate conductor migration_create()
* Make inject_network_info use objects
* Convert reset_network to use instance object
* Make compute_api use objects for lock/unlock
* Add REUSE_EXT in _swap_volume call to blockRebase
* Remove unused _decompress_image_file from powervm operator class
* powervm: actually remove files after migration
* Fix to disallow server name with all blank spaces (v3 API)
* Add mock to test-requirements
* xenapi: Improve test_xenapi unit testing performance
* Sets policy settings so V3 API extensions are discoverable
* Pass objects for revert and confirm resizes
* Convert _poll_unconfirmed_resizes to use Migration object
* Make compute_api confirm/revert resize use objects
* Make compute_api migrate/resize paths use instance objects
* Fix race when running initialize_gateway_device()
* fix bad usage of exc_info=True
* Use implicit nullable=True in sqlalchemy model
* Introduce Invalid* EC2 error codes
* Improve parameter related EC2 error codes
* Disconnect from iSCSI volume sessions after live migration
* Correct default ratelimits for v3
* Improve db_sqlalchemy_api test coverage
* Safe db.api.compute_node_get_all() performance improvement
* Remove a couple of unused stubs
* Fix Instance object issues
* Adds API version discovery support for V3
* Port multiple_create extension to V3 API
* Add context information to download plugins
* Adds V3 API samples for migrations
* Filter network by project id
* Added qemu guest agent support for qemu/kvm
* PCI alias support
* Add PCI stats
* Raise timeout in fake RPC if no consumers found
* Stub out instance_update() in build instance tests
* Mock out action event calls in build instance test
* powervm: revert driver to pass for plug_vifs
* Remove capabilities.enabled from test_host_filters
* xenapi: through-dev raw-tgz image upload to glance
* Add PCI device object support
* Store CONF.baremetal.instance_type_extra_specs in DB
* Pci Device DB support
* VMware: remove redundant default=None for config options
* Move live-migration control flow from scheduler to conductor
* Fix v3 extensions inherit from wrong controller
* Fix network creation in Vlan mode
* compute rpcapi 2.29 is not backwards compatible
* Fix the message of coverage directory error
* Fix error messages in v3 aggregate API
* compute rpcapi 2.37 is not backwards compatible
* use 'exc_info=True' instead of import traceback
* Add env to make_subprocess
* Remove unused nova.common module
* Adds Flavor ID validations
* Imported Translations from Transifex
* Add DocStrings for function allocate_for_instance
* Removes V3 API images and image_metadata extensions
* Powervm driver now logs ssh stderr to warning
* Update availability_zone on time if it was changed
* Add db.block_device_mapping_get_by_id
* Add volume snapshot APIs to driver interface
* Pass the destination file name to download modules
* Fix typo in baremetal docs
* VMware: clean up get_network_with_the_name
* Stylistic improvement of compute.api.API.update()
* Removes fixed ips extension from V3 API
* Libvirt: fix KeyError in set_vif_bandwidth_config
* Add expected_errors for migrations v3
* Add alias as prefix to request params for user_data v3
* Fix migrations index
* Should finish allocating network before VM reaches ACTIVE
* Fixes missing host in Hyper-V get_volume_connector
* Fix various cells issues due to object changes
* Document CONF.default_flavor is for EC2 only
* Revert task state when terminate_instance fails
* Revert "Make compute_capabilities_filter use ..."
* Add resource tracking to build_and_run_instance
* Link Service.compute_node with ComputeNode object
* Add ComputeNode object implementation
* Add Service object implementation
* Make compute_api use KeyPair objects
* Add KeyPair object
* Fix spice/vnc console api samples tests
* Fix network manager tests to use correct network host
* Stub out get_console_topic() in test_create_console
* Stub out instance_fault_create() in compute tests
* Fix confirm_resize() mock in compute tests
* Fix rpc calls on pre/post live migration tests
* Stub out setup_networks_on_host() in compute tests
* maint: remove redundant disk_cachemode validation entry
* Fix unicode key of azcache can't be stored to memcache
* XenAPI: SR location should default to location stored in PBD
* XenAPI: Generic Fake.get_all_records_where implementation
* XenAPI: Return platform_version if no product_version
* XenAPI: Support local connections
* Delete expired instance console auth tokens
* Fix aggregate creation/update with null or too long name
* Fix live migration test for no scheduler running
* Fix get_diagnostics() test for no compute consumer
* Stubout reserve_block_device_name() in test
* Stubout deallocate_for_instance() in compute tests
* Stub out net API sooner in servers API test
* PCI utils
* Object support for instance groups
* Add RBD supporting to libvirt for creating local volume
* Add alias as prefix to request params for availability_zone v3
* Remove deprecated legacy network info model in Hypervisor drivers
* Correct the authorizer for extended-volumes v3
* emit warning while running flake8 without virtual env
* Adds Instance UUID to rsync debug logging
* Fixes sync issue for user level resources
* Fix Fibre Channel attach for single WWN
* nova.conf configurable gzip compression level
* Stub out more net API methods floating IP DNS test
* Enable CastAsCall for test_api_samples
* Stub out attach_volume() in test_api_samples
* Fix remove_fixed_ip test with CastAsCall
* Add add_aggregate_to_host() to FakeDriver
* Fix api samples image service stub
* Add CastAsCall fixture
* Enable consoleauth service during ec2 tests
* Disable periodic tasks during integration tests
* Use ExceptionHelper to bypass @client_exceptions
* Clean up some unused wrap_exception() stuff
* Add new compute method for building an instance
* VMware: provide a coherent message to user when viewing console log
* Use new BDM syntax when determining boot metadata
* Allow more than one ephemeral device in the DB
* Port flavormanage extension to v3 API part 1
* Correct the status code to 201 for create v3
* Pop extra keys from context in from_dict()
* Don't initialize neutronv2 state at module import
* Remove instance exists check from rebuild_instance
* Remove unused variables in test_compute_cells
* Fix fake image_service import in v3 test_disk_config
* Updates tools/config/README
* xenapi: Added iPXE ISO boot support
* Log exception details setting vm_state to error
* Fix instance metadata access in xenapi
* Fix prep_resize() stale system_metadata issue
* Implement hard reboot for powervm driver
* Use the common function is_neutron in servers.py
* Make xenapi capabilities['enabled'] use service enabled
* Remove duplicate test from V3 version of test_hosts
* Remove unused nova.tests.image.fake code
* Remove unused fake run_instance() method
* Remove use of fake_rabbit in Nova
* libvirt: fix {attach,detach}_interface()
* Added test case in test_migrations for migration 208
* Add flag to make IsolatedHostsFilter less restrictive
* Add unique constraint to AggregateMetadata
* Fix a typo in test_migrations for migration 209
* Remove duplicate variable _host_state
* enhance description of share_dhcp_address option
* Adds missing V3 API scheduler hints testcase
* [v3] Show detail of an quota in API os-quota-sets
* Remove legacy network model in tests and compute manager
* Remove redundant _create_instance method from test_compute
* Add jsonschema to Nova requirements.txt
* Remove docstrings in tests
* Fix scheduler prep_resize deprecated comments
* Search filters for get_all_system_metadata should use lists
* fix volume swap exception cases
* Set VM back to its original state if cold migration failed
* Enforce flavor access during instance boot
* Stub out entry points in LookupTorrentURLTestCase
* Port volumes swap to the new API-v3
* correct the name style issue of ExtendedServerAttributes in v3 api
* Fix IVS vif to correctly delete interfaces on unplug
* Adding support for iSER transport protocol
* libvirt: allow passing 'os_type' property to glance
* Fixes auto confirm invalid error
* Fix ratelimiting
* quantum pxeboot-port support for baremetal
* baremetal: Log IPMI power on/off timeouts
* VMware: Added check for datastore state before selection
* Boot from image destination - volume
* Virt driver flag for different BDM formats
* Refactor how BDMs are handled when booting
* Change RPC to use new BDM format for instance boot
* Make API part of instance boot use new BDM format
* Add Migration object
* Fix untranslated log messages in libvirt driver
* Fix migration 210 tests for PostgreSQL
* Handle InstanceInvalidState of soft_delete
* Don't pass RPC connection to pre_start_hook
* VMware: Ensure Neutron networking works with VMware drivers
* Unimplemented suspend/resume should not change vm state
* Fix project_user_quotas_user_id_deleted_idx index
* Allow Cinder to specify file format for NFS/GlusterFS
* Add migration with missing fkeys
* Implement front end rate-limiting for Cinder volume
* Update mailmap
* Fixup some non-unity-ness to conductor tests
* Add scheduler utils unit tests
* Convert admin_actions ext tests to unit tests
* Unit-ify the compute API resize tests
* Raises masked AssertionError in _test_network_api
* Have tox install via setup.py develop
* Set launch_index to right value
* Add passing a logging level to processutils.execute
* Clear out service disabled reason on enable for V3 API
* Fix HTTP response for PortInUse during boot (v3 API)
* Adds infra for v3 API sample creation
* Remove deprecated CONF.fixed_range
* Offer a paginated version of flavor_get_all
* Port integrated tests for V3 API
* Refactor integrated tests to support V2 and V3 API testing Part 2
* Refactor integrated tests to support V2 and V3 API testing
* Fix cells manager RPC version
* Upgrade to Hacking 0.7
* Fix logic in add_host_to_aggregate()
* Enforce compute:update policy in API
* Removed the duplicated _host_state = None in libvirt driver
* Sync gettextutils from oslo-incubator
* Fix typo in exception message
* Fix message for server name with whitespace
* Demote personalities from core of API v3 as extensions os-personality
* Port disk_config API to v3 Part 2
* remove _action_change_password the attribute in V3 server API
* Fix exception handling in V3 API coverage extension
* Remove "N309 Python 3.x incompatible construct"
* Allow swap_volume to be called by Cinder
* Remove trivial cases of unused variables
* Handle NeutronClientException in secgroup create
* Fix bad check for openstack versions (vendor_data/config drive)
* Make compute_capabilities_filter use information from DB not RPC
* Make affinity_filters use host_ip from DB not RPC
* db: Add host_ip and supported_instances to compute_nodes
* Add supported_instances to get_available_resource to all virt drivers
* libvirt: sync get_available_resources and get_host_stats
* Clean up unimplemented methods in the powervm driver
* Make InvalidInstanceIDMalformed an EC2 exception
* Fix one port can be attached to more devices
* Removed code duplication in test_get_server_*_by_id
* Add option for QEMU Gluster libgfapi support
* Moves compute.rpcapi.prep_resize call to conductor
* Fix get_available_resource docstrings
* Fix spelling in image_props_filter
* Fix FK violation in ConsoleTestCase
* Fix ReservationTestCase on PostgreSQL
* Fix instance_group_delete() DB API method
* Fix capitalization, it's OpenStack
* Add test cases to validate neutron ports
* Add expected_errors for extension quota_classes v3
* Fix leaking of image BDMs
* Moved tests for server.delete
* Fix VMwareVCDriver to support multi-datastore
* Fixes typo in __doc__ of /libvirt/blockinfo.py
* User quota update should not exceed project quota
* Port "Accept is_public=None .." to v3 tree
* Remove clear_rabbit_queues script
* Don't need to init testr in run_tests.sh
* Imported Translations from Transifex
* Deprecate conductor's compute_reboot() interface
* Deprecate conductor's compute_stop() interface
* Make compute_api use InstanceAction object
* Add basic InstanceAction object
* Add delete() operation to InstanceInfoCache
* Make compute_api use Instance.destroy()
* Add Instance.destroy()
* Make compute_api use Instance.create()
* Change swap_volume volume_api calls to use ID
* Fix H501: Do not use locals() for string formatting
* fix libguestfs mount order when inspecting
* Imported Translations from Transifex
* powervm: add test case for get_available_resource
* Fix to allow ipv6 in host_ip for ESX/vSphere driver
* Improve performance of driver's get_available_nodes
* Cleanup exception handling on evacuate
* Removed code for modular exponentiation, pow() already does this
* Remove unsafe XML parsing
* Fix typo with network manager service_name
* Remove old legacy network info model in libvirt driver
* maint: remove redundant default=None for config options
* Fix simultaneous timeout with smart iptables usage
* xenapi: send identity headers from glance plugin
* Catch ldap ImportError
* xenapi: refactor - extract get_virtual_size
* xenapi: refactor - extract get_stream_funct_for
* xenapi: test functions for _stream_disk
* Check host exists before evacuate
* Fix EC2 API Fault wrapper
* Fix deferred delete use of objects
* Remove unsafe XML parsing
* Update BareMetal driver to current nova.network.model
* Personality files can be injected during server rebuild
* Need to allow quota values to be set to zero
* Merged flavor_disabled extension into V3 core api
* Merged flavorsextraspecs extension into core API
* Code dedup in test_update_*
* Move tests test_update_* to separate class
* VMware: fix rescue/unrescue instance
* Add an exception when doesn't have permissions to operate vm on hyper-v
* Remove dead capabilities code
* Spelling correction in test_glance.py
* Enhance object inheritance
* Enable no_parent and file_only security
* Add Instance.create()
* Pull out instance object handling for use by create also
* Make fake_instance handle security groups
* Fix instance actions testing
* Sync models with migrations
* Wrong unique key name in 200 migration
* Remove unused variable
* Make NovaObject.get() avoid lazy-load when defaulting
* Fix migration downgrade 146 with mysql
* Remove the indexes on downgrade to work with MySQL
* Downgrade MySQL to the same state it used to be
* Format CIDR strings as per storage
* Fix migration downgrade 147 with mysql
* Fix typo in compute.rpcapi comments
* Imported Translations from Transifex
* Avoid extra glance v2 locations call!
* xenapi: Adding BitTorrent download handler
* xenapi: remove dup code in make_step_decorator
* Retry failed instance file deletes
* xenapi: retry when plugin killed by signal
* Do not use context in db.sqla.api private methods
* Finish DB session cleanup
* Clean up session in db.sqla.api.migration_* methods
* Clean up session in db.sqla.api.network_* and sec_groups_* methods
* Don't inject files while resizing instance
* Convert CamelCase attribute naming to camel_case for servers V3 API
* Convert camelCase attribute naming to camel_case
* Add plug-in modules for direct downloads of glance locations
* Allow user and admin lock of an instance
* Put fault message in the correct field
* Fix Instance objects with empty security groups
* db: Remove deprecated assert_unicode attribute
* VlanManager creates superfluous quota reservations
* xenapi: allow non rsa key injection
* Add expected_errors for extensions simple_tenant_usage v3
* Clean destroy for project quota
* Add expected_errors for extension Console v3
* Add expected_errors for extension baremetal v3
* Clean up session in db.sqla.api.get_ec2 methods
* Clean up db.sqla.api.instance_* methods
* remove improper usage of 'assert'
* Support networks without gateway
* Raise 404 when instance not found in admin_actions API
* Switch to Oslo-Incubator's EnvFilter rootwrap
* xenapi: Moving Glance fetch code into image/glance:download_vhd
* Performs hard reboot if libvirt soft reboot raises libvirtError
* xenapi: Rename imageupload image
* Make nbd reservation thread-safe
* Code dedup in class QuotaReserveSqlAlchemyTestCase
* Fix multi availability zone issue part 1
* Fix instance_usage_audit_log v3 follow REST principles
* Update mailmap
* Add obj_attr_is_set() method to NovaObject
* Add ObjectActionFailed exception and make Instance use it
* Fix change detection logic in conductor
* Convert pause/unpause to use objects
* Make delete/soft_delete use objects
* Refactor compute API's delete to properly do local soft_deletes
* Add identity headers while calling glanceclient
* xenapi: Reduce code duplication in vmops
* vendor-data minor format / style cleanups
* maint: remove unused exceptions
* Add support for Neutron https endpoint
* Add index to reservations.uuid column
* Refactor EC2 API error handling code
* Cleanup copy/paste in test_quota_sets
* Make EvacuateTest DRYer
* Add expected_errors for extensions quota_sets and hypervisors
* Remove generic exception catching for admin_actions API v3
* Demote admin-passwd from core of API v3 as extensions os-admin-password
* handle auto assigned flag on allocate floating ip
* Add expected_errors for extension shelve v3
* Use cached nwinfo for secgroup rules
* Sync config.generator from Oslo
* Remove * import from xenserver plugins
* EC2-API: Fix ambiguous ipAddress/dnsName issue
* xenapi: no image upload retry on certain errors
* Add error checking around host service checking
* add vendor_data to the md service and config drive
* Moves compute.rpcapi.prep_resize call to scheduler.manager
* Removed scheduler doc costs section
* Fix formatting on scheduler documentation
* Add expected_errors for extension server_diagnostics V3
* Fix extensions agent follow API v3 rules
* XenAPI: Change the default SR to be the pool default
* Fix flavor_access extension follow API V3 rules
* Add notification for live migration call
* Correct status code and response for quota_sets API v3
* Fixes for v3 API servers tests
* Remove sleep from service group db and mc tests
* [xenapi] Unshadow an important test case class
* Fix and Gate on H303 (no wildcard imports)
* Remove unreachable code
* powervm: pass on unimplemented aggregate operations
* Fix timing issue in SimpleTenantUsageSample test
* Code dedup in virt.libvirt.test_imagecache.test_verify_checksum_*
* Move tests test_verify_checksum_* to separate class
* Logging virtual size of the QCOW2
* Add expected_errors for extension certificates v3
* Support setting block size for block devices
* Set the image_meta for the instance booted from a volume
* return 429 on API rate limiting occur
* Add task_state filter for nova list
* Port server_usage API to v3 part 2
* Port server_usage API to v3 part 1
* Adds factory methods to load Hyper-V utils classes
* Fix 2 pep8 errors in tests
* Enabled hacking check for Python3 compatible print (H233)
* Fix race between aggregate list and delete
* Enforce authenticated connections to libvirt
* Enabled the hacking warning for Py3 compatible octal literals (H232)
* Remove fping plugin from V3 API
* Moves scheduler.rpcapi.prep_resize call on compute.api to conductor
* Fix some Instance object class usage errors
* xenapi: remove pv detection
* Add expected_errors for extension keypair and availablity_zone
* Add expected_errors for extension console_output v3
* Fix extension hosts follow API v3 rules
* Use project quota as default user quota
* Adds NoAuthMiddleware for V3
* xenapi: remove propagate xenapi_use_agent key
* Update references with new Mailing List location
* MinDisk size based on the flavor's Disk size
* Use RetrievePropertiesEx instead of RetrieveProperties
* Speed up test BareMetalPduTestCase.test_exec_pdutool
* Port ips-extended to API-v3 ips core API Part 2
* Disable per-user rate limiting by default
* Support EC2 API wildcards for DescribeTags filters
* Remove the monkey patching of _ into the builtins
* Sync lockutils from Oslo
* Set lock_path in tests
* Port ips-extended to API-v3 ips core API Part 1
* Fix postgresql failures related to Data type to API-v3 fixed-ip
* Bypass queries which cause a contradiction
* Add basic BDM format validation in the API layer
* Servers API for the new BDM format
* Fixes Hyper-V issues on versions prior to 2012
* Add expected_errors for extension instance_actions v3
* Fix extension server_meta follow API v3 rules
* Ensure that uuid is returned with mocked instance
* Code dedup in class InstanceTypeExtraSpecsTestCase
* Add expected_errors for extension cells V3
* Add expected_errors for extension_info V3
* Add latest oslo DB support
* Add note why E712 is ignored
* Clarify instance_type vs flavor in nova-manage
* Fix leaky network tests
* Fix HTTP response for PortNotFound during boot
* Don't pass empty image to filter on live migration
* Start using hacking 0.6
* Set VM back to its original state if cold migration failed
* xenapi: ensure vcpu_weight configured correctly
* Fix failing network manager unit tests
* Add expected_errors for extensions services and server_password v3
* Update oslo.config.generator
* Fix the is_volume_backed_instance check
* Add support for volume swap
* Fix policy failure on image_metadata calls
* Sync models for AgentBuild, Aggregates, AggregateHost tables
* Imported Translations from Transifex
* Make ServerXMLSerializationTest DRYer
* Port migrations extension to v3 API part 2
* Port migrations extension to v3 API part 1
* xenapi: Fix console rotate script
* Sync some of Instance* models with migrations
* Fix extension rescue follow API v3 rules
* Per-project-user-quotas for more granularity
* Add unique constraint to InstanceTypeExtraSpecs
* Remove instance_metadata_get_all* from db api
* Merged flavorextradata extension (ephemeral disk size) into core API
* Fixed tests for flavor swap extension after merging in core API
* Remove hostname param from XenApi after first boot
* Cell Scheduler support for hypervisor versions
* Fix flavor v3 follow API v3 rules
* Sync sample config file generator with Oslo
* Allow exceptions to propagate through stevedore map
* Create vmware section
* Sync latest rpc changes from oslo-incubator
* Check instance on dest once during block migration
* Revert "Add requests requirement capped <1.2.1."
* Unit-ify compute_api delete tests
* Convert network API to use InfoCache object
* Make InfoCache.network_info be the network model
* Make shelve pass old-world instance object to conductor
* Make admin API state resets use Instance.save()
* Deduplicate data in TestAddressesXMLSerialization
* Move _validate_int_value controller func to utils
* Correct the action name for admin_actions API v3
* Fixing dnsdomain_get call in nova.network.manager
* Raise exception if both port and fixed-ip are in requested networks
* Sync eventlet_backdoor from oslo-incubator
* Fix up trivial license mismatches
* Implements host uptime API call for cell setup
* Ensure dates are dates, not strings
* Use timeutils.utcnow() throughout the code
* Add indexes to sqlite
* Fix iptables rules when metadata_host=127.0.0.1
* Sync gettextutils from oslo
* Handle instance objects in conductor compute_stop
* Config drive attached as cdrom
* Change EC2 client tokens to use system_metadata
* Check that the configuration file sample is up to date
* Make servers::update() use Instance.save() to do the work
* Make Instance.save() handle cells DB updates
* Convert suspend/resume to use objects
* Make compute_api.reboot() use objects
* Fix HTTP response for PortInUse during boot
* Fix DB access when refreshing the network cache
* Use valid IP addresses values in tests
* Add ability to factor in per-instance overheads
* Send updated aggregate to compute on add/rm host
* Fix inconsistency between Nova-Net and Neutron
* Fix parse_transport_url when url has query string
* xenapi: no glance upload retry on 401 error
* Code dedup in test_libvirt_vif
* Raise exceptions when Spice/VNC are unavailable
* xenapi: Pass string arguments to popen
* Add rpcapi tests for shelving calls
* Create key manager interface
* Remove duplicate cells_rpcapi test
* ec2-api: Disable describing of instances using deleted tags as filter
* Disable ssl layer compression for glance requests
* Missed message -> msg_fmt conversion
* Refresh network cache when reassigning a floating IP in Neutron
* Remove unnecessary comments for instance rebuild tests
* Add missing tests for console_* methods
* Force reopening eventlet's hub after fork
* Remove project_id from alternate image link path
* Fixes wrong action comment 'lock' to 'unlock'
* Add expected_errors for extension extended_volumes v3
* port BaremetalNodes API into v3 part2
* port baremetal_nodes API into v3 part1
* Add validation of available_zone during instance create
* Move resource usage sync functions to db backend
* Remove locals() from various places
* Add expected_errors for extension evacuate v3
* Add expected_errors for extension deferred_delete v3
* Fix accessing to '/' of metadata server without any checks to work
* Fix duplicate osapi_hide_server_address_states config option
* API for shelving
* Fix shelve's use of system_metadata
* Fix Instance object handling of implied fields
* Make Instance object properly update *metadata
* Support Client Token for EC2 RunInstances
* Change get_all_instance_metadata to use _get_instances_by_filters
* Add a new GroupAffinityFilter
* Move a migration test to MigrationTestCase
* Use db.flavor_ instead of db.instance_type_
* Periodic task for offloading shelved instances
* Shelve/unshelve an instance
* Code dedup in class ImagesControllerTest
* Assert backing_file should exist before attempting to create it
* Add API-v3 merged core API into core API list
* Don't ignore 'capabilities' flavor extra_spec
* Support scoped keys in aggregate extra specs filter
* Fix blocking issue when powervm calculate checksum
* Avoid shadowing Exception 'message' attribute
* Code dedup in class TestServerActionRequestXMLDeserializer
* Fix mig 186 downgrade when using sqlalchemy >= 0.8
* Move test_stringified_ips to InstanceTestCase
* Move *_ec2_* tests in test_db_api to own test case
* Code dedup in class ImageXMLSerializationTest
* Fix malformed format string
* Fix EC2 DescribeTags filter
* Code dedup in test_libvirt_volume
* Port AttachInterfaces API to v3 Part 2
* Make ServersViewBuilderTest DRYer
* Move test_security_group_update to SecurityGroupTestCase
* Code dedup in class ServersControllerCreateTest
* Code dedup in tests for server._action_rebuild
* Moved tests for server._action_rebuild
* Move bw_usage_* tests in test_db_api to own test case
* Move dnsdomain_* tests in test_db_api to own test case
* Remove redundant if statements in cells.state
* Move special cells logic for start/stop
* Port used limits extension to v3 API Part 2
* Avoid deleting user-provided Neutron ports if VM spawn fails
* Fix nic order not correct after reboot
* Porting os-aggregates extensions to API v3 Part 2
* Porting os-aggregates extensions to API v3 Part 1
* Porting server metadata core API to API v3 Part 2
* Porting server metadata core api to API v3 Part 1
* Port limits core API to API-v3 Part 2
* xenapi: Only coalesce VHDs if needed
* Don't attach to multiple Quantum networks by default
* Load cell data from a configuration file
* Fix filtering aggregate metadata by key
* remove python-glanceclient cap
* Remove duplicated key_pair* tests from test_db_api
* Porting limits core api to API v3 Part 1
* Add missing tests for db.api.instance_* methods
* Fix IPAddress and CIDR type decorators
* Complete deletion when compute manager start-up
* Port user_data API to v3 Part 2
* Add legacy flag to get_instance_bdms
* XenAPI: Refactor Fake to create pools, SRs and VIFs automatically
* Port flavor_rxtx extension to v3 API Part 2
* Port flavor_rxtx extension to v3 API Part 1
* Fix aggregate_get_by_host host filtering
* Fix v3 hypervisor extension servers action follow REST principles
* xenapi:populating hypervisor version in host state
* Port attach and detach of volume-attachment into os-extended-volume v3
* Port deferredDelete API to v3 Part 2
* Fix status code for coverage API v3
* Port instance_actions API to v3 Part 2
* port instance_actions API into v3 part1
* Prompt error message when creating aggregate without aggregate name
* Port used limits extension to v3 API Part 1
* Makes _PATH_CELL_SEP a public global variable
* port disk_config API into v3 part1
* Imported Translations from Transifex
* Remove locals() from virt directory
* Handle ImageNotAuthorized exception
* Port AvailabilityZone API to v3 Part 2
* port AvailabilityZone API into v3 part1
* Port service API to v3 Part 2
* Imported Translations from Transifex
* Unify duplicate code for powering on an instance
* Port hide srvr addresses extension to v3 API Pt2
* Sync v2/v3 console_output API extensions
* Port extended status extension to v3 API Part 2
* Port os-console-output extension to API v3 Part 2
* Changes select_destinations to return dicts instead of objects
* Better start/stop handling for cells
* Make notifications properly string-convert instance datetimes
* Fix default argument values on get_all_by_filters()
* Make db/api strip timezones for datetimes
* Fix object_compat decorator for non-kwargs
* Imported Translations from Transifex
* Remove unused recreate-db options from run_test.sh
* update Quantum usage to Neutron
* Convert cells to use a transport URL
* Fix aggregate update
* Passing volume ID as id to InvalidBDMVolume exception
* Handle instance being deleted while in filter scheduler
* Port extended-availability-zone API into v3 part2
* Fix extensions os-remote-consoles to follow API v3 rules
* Add unique constraints to AggregateHost
* Unimplemented pause should not change vm state on PowerVM
* Port server password extension to v3 API Part 2
* xenapi: Add disk config value to xenstore
* Port hide srvr addresses extension to v3 API Pt1
* Add -U to the command line for pip
* xenapi: support ephemeral disks bigger than 2TB
* Cells: Make bandwidth_update_interval configurable
* Add _set_instance_obj_error_state() to compute manager
* Update v3 servers API with objects changes
* xenapi: enable attach volumes to non-running VM
* Change force_dhcp_release default to True
* Revert "Sync latest rpc changes from oslo-incubator"
* Sync 10 DB models and migrations
* Make compute_api.get() use objects natively
* port Host API into v3 part2
* Port admin-actions API into v3 part2
* Fix cells manager rpc api version
* Allow ::/0 for IPv6 security group rules
* Fix issue with pip installing oslo.config-1.2.0
* Sort output for unit tests in test_describe_tags before compare
* Document rate limiting is per process
* Properly pin pbr and d2to1 in setup.py
* Add support for live_snapshot in compute
* xenapi: Stub out _add_torrent_url for Vhd tests
* Add Instance.get_by_id() query method
* Fix duplicate fping_path config option
* Port images metadata functionality to v3 API Part 2
* Add unique constraint to ConsolePool
* Enable core API-v3 to be optional when unit testing
* Clarify flavorid vs instance_type_id in db
* Sync db.models.Security* and db.models.Volume*
* Sync db.models.Instance* with migrations
* Add "ExtendedVolumes" API extension
* Fix misc issues with os-multinic v3 API extension
* Port multinic extension to v3 API Part 2
* Port security groups extension to v3 API Part 2
* Port security groups extension to v3 API Part 1
* Add missing help messages for nova-manage command
* Validate volume_size in block_device_mapping
* Imported Translations from Transifex
* Fix info_cache and bw_usage update race
* xenapi: glance plugin should close connections
* Change db.api.instance_type_ to db.api.flavor_
* Replace get_instance_metadata call in api.ec2.cloud._format_instances
* Add unique constraint to AgentBuild
* Ensure flake8 tests run on all api code
* Sync notifier change from oslo-incubator
* Sync harmless changes from oslo-incubator
* Sync latest rpc changes from oslo-incubator
* Add missing matchmaker_ring
* Port extended-server-attributes API into v3 part2
* List migrations through Admin API
* Add a VIF driver for IOVisor engine
* port Service API into v3 part1
* Port admin-actions API into v3 part1
* Port fping extension to v3 API Part 2
* Disassociate fixed IPs not known to dnsmasq
* Imported Translations from Transifex
* Allow filters to only run once per request if their data is static
* Port extended-availability-zone API into v3 part1
* Update openstack.common.config
* Export just the volume metadata for the database to be populated
* port Deferred_delete API into v3 part1
* Misc fixes for v3 evacuate API extension
* Imported Translations from Transifex
* Baremetal ensures node is off before powering on
* Remove references to deprecated DnsMasqFilter
* Port user_data API to v3 Part 1
* Update instance.node on evacuate
* Fix formatting errors in documentation
* Use oslo.sphinx and remove local copy of doc theme
* Remove doc references to distribute
* Sync install_venv_common from oslo
* Make EC2 API request objects instead of converting them
* Make instance show and index use objects
* Remove conductor usage from consoleauth service
* xenapi: Stub out entry points for BitTorrent tests
* Fix debug message for GroupAntiAffinityFilter
* Add unique constraints to Service
* Add unique constraint to FixedIp
* Fixed columns list in indexes
* Add cinder cleanup to migrations
* Change unique constraint in VirtualInterface
* Changes ComputeTaskManager class to inherit base.Base
* Moves populate retry logic to the scheduler utils
* Exceptions raised by quantum validate_networks result in 500 error
* Fix and gate on E125
* Add object (de)serialization support to cells
* Add cells get_cell_type() method
* Add fill_faults() batch operation to InstanceList
* Make api_samples reboot test use a plausible scenario
* Fix compute_api object handling code in cells messaging
* Fix power_state lookup in confirm_resize
* Make flavors is_public option actually work
* Imported Translations from Transifex
* hyperv: Fix vmops.get_info raises InstanceNotFound KeyError
* Make instance_update() string-convert IP addresses
* Refactor compute_api reboot tests to be unit-y
* Refactors select_destinations to return HostState objects
* PowerVM resize and migrate test cases
* Clear out service disabled reason on enable
* Port agent API to v3 Part 2
* Fix v3 hypervisor extension search action follow REST principles
* Fix resize ordering for COW VHD
* Add inst_type parameter
* Store volume metadata as key/value pairs
* Fixes a typo on AggregateCoreFilter documentation
* xenapi: Tidy up Popen calls to avoid command injection attacks
* Remove notify_on_any_change option
* Add unique constraints to Quota
* Port images metadata functionality to v3 API Part 1
* Port scheduler hints extension to v3 API Part 2
* Adding action based authorization for keypairs
* Port multinic extension to v3 API Part 1
* Port hypervisor API into v3 part2
* port Instance_usage_audit_log API into v3 part2
* port Instance_usage_audit_log API into v3 part1
* Fix metadata for create in child cell
* update xen/vmware virt drivers not to hit db directly
* Reduce nesting in instance_usage_audit
* Port os-console-output extension to API v3 Part 1
* Fix to integer cast of length in console output extension
* Imported Translations from Transifex
* Add notifiers to both attach and detach volumes
* Make test_deferred_delete() be deterministic
* Added functionality for nova hooks pass functions
* Fix compatibility with older confirm_resize() calls
* Pass instance host-id to Quantum using port bindings extension
* libvirt: Fix spurious backing file existence check
* Add unique constraint for security groups
* powervm: make get_host_uptime output consistent with other virt drivers
* Remove locals() from virt/vmwareapi package
* Add HACKING check for db session param
* Select disk driver for libvirt+Xen according to the Xen version
* Port coverage API into v3 part2
* Port coverage API into v3 part1
* Fix grizzly compat issue in conducor rpc api
* Xenapi shutdown should return True if vm is shutdown
* Break out Compute Manager unit tests
* Break out compute API unit tests
* port Host API into v3 part1
* Imported Translations from Transifex
* Standardize use of nova.db
* Check system_metadata type in _populate_instance_for_create
* Clean up and make HACKING.rst DRYer
* Sync db.models with migrations
* Refactor ServerStatusTest class
* Move tests db.api.instance_* to own class
* Add tests for `db.console_pool_*()` functions
* Fix binding of SQL query params in DB utils
* Make db.fakes stub out API not sqlalchemy
* Reassign MAC address for vm when resize_revert
* test_xmlutil.py covers more code in xmlutil.py
* Handle UnexpectedTaskState and InstanceNotFound exceptions
* Port quota classes extension to v3 API Part 2
* Ports image_size extension to v3 API
* xenapi: Add configurable BitTorrent URL fetcher
* remove locals() from virt/hyperv package
* Add resume state on host boot function to vmware Hyper
* Port server_diagnostics extension to v3 API Part2
* Port images functionality to v3 API Part 2
* Port cells extension to v3 API Part 2
* Notification support for host aggregate related operation
* Fix vol_usage_update() DB API tests
* Port consoles extension API into v3 part2
* Port consoles extension API into v3 part1
* Imported Translations from Transifex
* New select_destinations scheduler call
* Session cleanup for db.security_group_* methods
* fix invalid logging
* Port scheduler hints extension to v3 API Part 1
* Port config_drive API to v3 Part 2
* Port config drive API to v3 Part 1
* Port images functionality to v3 API Part 1
* Moves scheduler.manager._set_vm_state_and_notify to scheduler.utils
* VNC console does not work with VCDriver
* Sane rest API rate limit defaults
* Ignore lifecycle events for non-existent instances
* Fix resizes with attached file-based volumes
* Remove trivial cases of unused variables (3)
* Remove locals() from compute directory
* Hypervisor uptime fails if service is disabled
* Fix metadata access in prep for instance objects
* Sync to_primitive() IPAddress support from Oslo
* Merged flavor_swap extension into core API
* Fix typo for instance_get_all_by_filters() function
* Implement get_host_uptime for powervm driver
* Port flavor_disabled extension to v3 API Part 2
* Fix sqlalchemy utils
* Port flavor_disabled extension to v3 API Part 1
* Port flavor_access extension to v3 API Part 2
* Port flavor_access extension to v3 API Part 1
* Fixes for quota_sets v3 extension
* Port server password extension to v3 API Part 1
* Port Simple_tenant_usage API to v3 Part 2
* xenapi: Remove vestigial `compile_metrics` code
* Add update() method to NovaObject for dict compatibility
* Add obj_to_primitive() to recursively primitiveize objects
* Make sure periodic instance reclaims continues on error
* Remove broken config_drive image_href support
* Report the az based on the value in the instance table
* Allow retrying network allocations separately
* Imported Translations from Transifex
* Better default for my_ip if 8.8.8.8 is unreachable
* Fix a couple typos in the nova.exception module
* Make fake_network tolerant of objects
* Prepare fake instance stubs for objects
* Make info_cache handle when network_info is None
* Fix instance object's use of a db query method parameter
* Make NovaObject support the 'in' operator
* Add Instance.fault
* Add basic InstanceFault model
* xenapi: Make BitTorrent url more flexible
* xenapi: Improve cross-device linking error message
* db.compute_node_update: ignore values['update_at']
* Make sure periodic cleanup of instances continues on error
* Fix for failure of periodic instance cleanup
* Update instance properties values in child cells to create instance
* port Attach_interface API into v3 part1
* Sync models.Console* with migrations
* Port quota API into v3 part2
* Stop creating folders in virt unit tests
* Imported Translations from Transifex
* Refresh volume connections when starting instances
* Fix trivial mismatch of license header
* Exeption message of 'live migration' is not appropriate
* Sync rpc from oslo-incubator
* Fix types in test_ec2_ids_not_found_are_printable
* Port quota API into v3 part1
* Skip security group code when there is no network
* Sync db.models and migrations
* Update pyparsing to 1.5.7
* Make InstanceList filter non-column extra attributes
* Add Instance.security_groups
* Add basic SecurityGroup model
* Revert XenApi virt driver should throw exception
* Imported Translations from Transifex
* Avoid redefining host to none in get_instance_nw_info(...)
* Extract live-migration scheduler logic from the scheduler driver
* Fix the filtered characters list from console-log
* Add invalid number checking in flavor creation api
* Port quota classes extension to v3 API Part 1
* Remove usage of locals() from powervm virt package
* Fix xenstore-rm race condition
* Refactor db.security_group_get() instance join behavior
* Fix serialization of iterable types
* Fix orphaned instance from get_by_uuid() and _from_db_object()
* refactor security group api not to raise http exceptions
* Perform additional check before live snapshotting
* Do not raise NEW exceptions
* Baremetal_deploy_helper error message formatting
* Fix sys_meta access in prep for instance object
* Cells: Pass object for start/stop
* Clarify the compute API is_volume_backed_instance method
* Add AggregateCoreFilter
* Port extended-server-attributes into v3 part1
* Add AggregateRamFilter
* Fix KeyError exception when scheduling to child cell
* Port missing bits from httplib2 to requests
* Revert "fixes nova resize bug when force_config_drive is set."
* Port extended status extension to v3 API Part 1
* Fix quota logging on exceptions
* XenApi virt driver should throw exception on failure
* Retry quota_reserve on DBDeadlock
* Handle NoMoreFixedIps in _shutdown_instance
* Make sure instance_type has extra_specs
* Remove locals() from nova/virt/libvirt package
* Fix importing InstanceInfoCache during register_all()
* Make _poll_unconfirmed_resizes() use objects
* Revert "Add oslo-config-1.2.0a2 and pbr>=0.5.16 to requirements."
* Preserve network order when using ConfigDrive
* Revert "Initial scheduler support for instance_groups"
* fixes nova resize bug when force_config_drive is set
* Add troubleshoot to baremetal PXE template
* Sync db.models.Quota* with migrations
* Modify _assertEqualListsOfObjects() function
* Port hypervisor API into v3 part1
* Remove a layer of nesting in _poll_unconfirmed_resizes()
* Use InstanceList for _heal_instance_info_cache()
* Remove straggling use of all-kwarg object methods
* Allow scheduler manager NoValidHost exception to pass over RPC
* Imported Translations from Transifex
* Add oslo-config-1.2.0a2 and pbr>=0.5.16 to requirements
* Remove usage of locals() for formatting from nova.scheduler.*
* Libvirt driver: normalize variable names (part1)
* xenapi: script to rotate the guest logs
* Clean up scheduler tests
* Drop unused _virtual_power_settings global
* Remove junk file when ftp transfer failure
* xenapi: revisit error handling around calls to agent
* Remove the unused plugins framework
* Added unit tests for vmware cluster driver
* Adds expected_errors decorator for API v3
* Sync oslo-incubator gettextutils
* port Simple_tenant_usage API into v3 part1
* Remove db session hack from conductor's vol_usage_update()
* Converts scheduler.utils.build_request_spec return to json primitive
* Revert "Delegate authentication to quantumclient"
* Retry the sfdisk command up to 3 times
* No support for double nested 64 bit guest using VCDriver
* Fill context on objects in lists
* Setting static ip= for baremetal PXE boot
* Add tests for libvirt's reboot functionality
* Check the instance ID before creating it
* Add missing tests for nova.db.api.instance_system_metadata_*
* Add err_msg param to baremetal_deploy_helper
* Remove _is_precooked pre-cells Zones hacks
* Raise max header size to accommodate large tokens
* Make NovaObject support extra attributes in items()
* Imported Translations from Transifex
* Fix instance obj refresh()
* Fix overzealous conductor test for vol_usage_update
* Add missing tests for certificate_* methods
* Log xml in libvirt _create_domain failures
* Add unique constraints to Cell
* Accept is_public=None when listing all flavors
* Add missing tests for cell_* methods
* Add missing tests for nova.db.api.instance_metadata_*
* Don't deallocate network if destroy time out
* Port server_diagnostics extension to v3 API Part1
* Add old display name to update notification
* Port fping extension to v3 API Part 1
* libvirt fix resize/migrates with swap or ephemeral
* Allow reboot or rebuild from vm_state=Error
* Initial scheduler support for instance_groups
* Fix the ServerPasswordController class doc string
* Imported Translations from Transifex
* Cleanup certificate API extension
* Enforce sqlite-specific flow in drop_unique_constraint
* Remove unused cert db method
* Fix bad vm_state change in reboot_instance()
* Add rpc client side version control
* xenapi: ensure agent check respects image flags
* Drop `bm_pxe_ips` table from baremetal database
* Adding fixed_ip in create.end notification
* Improved tests for instance_actions_*
* Refactored tests for instance_actions_*
* Add missing tests for provider_fw_rule_* methods
* Session cleanup for db.security_group_rule_* methods
* Add tests for nova.db.api.security_group_rule_* methods
* Refactors qemu image info parsing logic
* Port cells extension to v3 API Part 1
* Organize limits units and per-units constants
* Fix flavor extra_specs filter doesn't work for number
* Replace utils.to_bytes() with strutils.to_bytes()
* Updates nova.conf.sample
* Remove bin lookup in conf sample generator
* Refactor conf sample generator script
* Remove unused arg from make_class_properties.getter method
* Fix obj_load() in NovaObject base class
* Backup and restore object registry for tests
* Fix the wrong reference by CONF
* Port flavors core API to v3 tree
* Remove usage of locals() from xenapi package
* Remove trivial cases of unused variables (1)
* Don't make nova-compute depend on iSCSI
* Change resource links when url has no project id
* Make sync_power_state routines use InstanceList
* Enhance the validation of the quotas update
* Add missing tests for compute_node_* methods
* Fix VMware Hyper can't honor hw_vif_model image property
* Remove use of locals() in db migrations
* Don't advertise mute cells capabilities upwards
* Allow confirm_resize if instance is in 'deleting' status
* Port certificates API to v3 Part 2
* port agent API into v3 part1
* Port certificates API to v3 Part 1
* Naming instance directory by uuid in VMware Hyper
* Revert "Fix local variable 'root_uuid' ref before assign"
* Use Python 3.x compatible octal literals
* Fix and enable H403 tests
* Remove usage of locals() from manager.py
* Fix local variable 'root_uuid' ref before assign
* Improve the performance of migration 186
* Update to the latest stevedore
* Quantum API _get_floating_ip_by_address mismatch with Nova-Net
* xenapi: remove auto_disk_config check during resize
* xenapi: implement get_console_output for XCP/XenServer
* Check libvirt version earlier
* update_dns() method optimization
* Sync can_send_version() helper from oslo-incubator
* Remove unused db api call
* Quantumapi returns an empty network list
* Add missing tests for nova.db.api.network_*
* Cleanup overshadowing in test_evacuate.py
* Give a way to save why a service has been disabled
* Cells: Add support for global cinder
* Fix race conditions with xenstore
* Imported Translations from Transifex
* Remove explicit distribute depend
* Fix assumed port has port_security_enabled
* Rename functions in nova.compute.flavors from instance_type
* Remove redundant architecture property update in powervm snapshot
* Use an inner join on aggregate_hosts in aggregate_get_by_host
* xenapi: ensure instance metadata always injected into xenstore
* Nova instance group DB support
* Fix to disallow server name with all blank spaces
* Replace functions in utils with oslo.fileutils
* Refactors get_instance_security_groups to only use instance_uuid
* Create an image BDM for every instance
* DB migration to the new BDM data format
* Fix dangling LUN issue under load with multipath
* Imported Translations from Transifex
* Add missing tests for s3_image_* methods
* Register libvirt driver with closed connection callback
* Enhance group handling in extract_opts
* Removed code duplication in conductor.api
* Refactored tests for instance_fault_*
* Added verbose error message in tests helper mixin
* Adds v3 API extension discovery filtering
* Adds support for the Indigo Virtual Switch (IVS)
* Some libvirt driver lookups lacks proper exception handling
* Put VM UUID to live migration error notification
* Fix db.models.Instance description
* Fix db.models.Certificate description
* Fix db.models.ComputeNodeStats description
* Fix db.models.ComputeNode description
* Fix db.models.Service description
* BDM class and transformation functions
* Remove unused method in VMware driver
* Cleanup nova exception message conversion
* Update analyze_opts to work with new nova.conf sample format
* Remove unused methods from VirtAPI
* Make xenapi use Instance object for host_maintenance_mode()
* Make xenapi/host use instance objects for _uuid_find
* Use InstanceList object for init_host
* Add Instance.info_cache
* Use Instance Objects for Start/Stop
* Add lists of instance objects
* Add base mixin class for object lists
* Add deleted flag to NovaObject base
* Export volume metadata to new instances
* Sending volume IO usage broken
* Rename unique constraints due to new convention
* Replace openstack-common with oslo in HACKING.rst
* Fixes test_config_drive unittest
* Port evacuate API to v3 Part 2
* Port evacuate API to v3 Part 1
* Speeding up scheduler tests
* Port rescue API to v3 Part 2
* Port rescue API to v3 Part 1
* Handle security group quota exceeded gracefully
* Adds check that the core V3 API is loaded
* Call virt.driver.destroy before deallocating network
* More KeypairAPI cleanups
* Improve Keypair error messages in osapi
* Fix Keypair exception messages
* Moving more tests to appropriate locations
* Skip ipv6 tests on system without ipv6 support
* Keypair API test cleanup
* Alphabetize v3 API extension entry point list
* Add missing exception to cell_update()
* Refactors scheduler.chance.select_hosts to raise NoValidHost
* Enhance unit test code coverage for availability zone
* Converts 'image' to json primitive on compute.rpcapi.prep_resize
* Import osapi_v3/enabled option in nova/test
* Regenerate missing resized backing files
* Moving `test_misc` tests to better locations
* Allocate networks in the background
* Make the datetime utility function coerce to UTC
* API to get the Cell Capacity
* Update rpc/impl_qpid.py from oslo
* More detailed log in failing aggregate extra filter
* xenapi: Added logging for sparse copy
* Make object actions pass positional arguments
* Don't snat all traffic when force_snat_range set
* Add x-compute-request-id header when no response body
* Call scheduler for run_instance from conductor
* correctly set iface-id in vmware driver
* Fix a race where a soft deleted instance might be removed by mistake
* Fix quota checks while resizing up by admin
* Refactor libvirt driver exception handling
* Avoiding multiple code loops in filter scheduler
* Don't log warn if v3 API is disabled
* Link to explanation of --checksum-full rule
* Imported Translations from Transifex
* Stop libvirt errors from outputting to strerr
* Delete unused bin directory
* Make instance object tolerate isotime strings
* Add fake_instance.py
* Fix postgresql failures related to Data type
* hardcode pbr and d2to1 versions
* Silence exceptions from qpid connection.close() (from oslo)
* Add Davanum to the mailmap
* Fix VMwareVCdriver reporting incorrect stats
* Adds ability to black/whitelist v3 API extensions
* Clean up vmwareapi.network_util.get_network_with_the_name
* Imported Translations from Transifex
* Normalize path for finding api_samples dir
* Add yolanda to the mailmap
* Add notes about how doc generation works
* python3: Add py33 to tox.ini
* Improve Python 3.x compatibility
* Ports consoles API to v3 API
* Fix nova-compute fails to start if quantum is down
* Handle instance directories correctly for migrates
* Remove unused launch_time from instance
* Launch_at and terminated_at on server(s) response
* Fixed two minor docs niggles
* Adds v3 API disable config option
* Fix bug where consoleauth depended on remote conductor service
* Only update cell capabilites once
* Ports ips api to v3 API
* Make pylint ignore nova/objects/
* Set resized instance back to original vm_state
* Add power_on flag to virt driver finish/revert migration methods
* Cosmetic fix to parameter name in DB API
* compute.api call conductor ComputeTaskManager for live-migrate
* Removed session from reservation_create()
* Raise exception instances not exception classes
* _s3_create handles image being deleted
* Imported Translations from Transifex
* Add instance object
* Add base object model
* Enhance multipath parsing
* Don't delete sys_meta on instance delete
* Fix volume IO usage notifications been sent too often
* Add missing os.path.abspath around csrfile
* Fix colorizier thowing exception when a test fails
* Add db test that checks that shadow tables are up-to-date
* Sync shadow table for 159 migration
* Sync shadow table for 157 migration
* Sync shadow table for 156 migration
* Add missing tests for nova.db.api.quota_* methods
* Add tests for some db.security_group_* methods
* Fix _drop_unique_constraint_in_sqlite() function
* Clean up failed image transfers in instance spawn
* Make testr preserve existing OS_* env vars values
* Fix msg version type sent to cells RPC API
* Verify that CONF.compute_driver is defined
* Fix EC2 RegisterImage ImageLocation starts with /
* Support Cinder mount options for NFS/GlusterFS
* Raise exception instances, not exception classes
* Add update method of security group name and description
* Cell weighing class to handle mute child cells
* Add posargs support to flake8 call
* Enumerate Flake8 E12x ignores
* Fix and enable flake8 F823
* Fix and enable flake8 F812
* libvirt: improve the specification of network disks
* Imported Translations from Transifex
* In utils.tempdir, pass CONF.tempdir as an argument
* Delegate authentication to quantumclient
* Pull binary name from sys.argv[0]
* Rename policy auth for V3 os-fixed-ips
* Fix internationalization for some LOG messages
* Enumerate Flake8 Fxxx ignores
* Enable flake8 E721
* Removing misleading error message
* No relevant message when stop a stopped VM
* Cells: Add filtering and weight support
* API Extensions framework for v3 API Part 2
* fix a misleading docstring
* xenapi: make the xenapi agent optional per image
* Fix config drive code logical error
* Add missing conversion specifier to ServiceGroupUnavailable
* Deprecate compute_api_class option in the config
* Add node as instance attribute for notification
* removes project_id/tenant_id from v3 api urls
* Set up 'compute_task' conductor namespace
* Removed superflous eval usage
* Fix log message
* Sync shadow table for 179 migration
* Remove copy paste from 179 migration
* Sync shadow table for 175 and 176 migration
* Change db `deleted` column type utils
* Fix tests for sqlalchemy utils
* Add missing tests for nova.db.api.quota_class_*
* Moved sample network creation out of unittest base class constructor
* Add missing tests for db.api.reservation_*
* add xml api sample tests to os-tenant-network
* Remove locals() usage from nova.virt.libvirt.utils
* IPMI driver sets bootdev option persistently
* update mailmap
* Imported Translations from Transifex
* Remove tempest hack for create/rebuild checks
* Better error message on malformed request url
* virt: Move generic virt tests to nova/tests/virt/
* vmwareapi: Move tests under tests/virt/vmwareapi/
* hyperv: Move tests under nova/tests/virt/hyperv
* Fix UnboundLocalError in powervm lvm cleanup code
* Delete a quota through admin api
* Remove locals() usage from nova.virt.libvirt.volume
* Importing correlation_id middleware from oslo-incubator
* Make a few places tolerant of sys_meta being a dict
* Remove locals() from scheduler filters
* Rename requires files to standard names
* Imported Translations from Transifex
* translates empty remote_ip_prefix to valid cidr for nova
* Reset task_state when resetting vm_state to ACTIVE
* xenapi: Moving tests under tests/virt/xenapi/
* xenapi: Disable VDI size check when root_gb=0
* Remove ImageTooLarge exception
* Move ImageTooLarge check to Compute API
* Share checks between create and rebuild
* Remove path_exists from NFS/GlusterFS drivers
* Removed session from fixed_ip_*() functions
* Catch InstanceNotFound in instance_actions GET
* Using unicode() to handle image's properties
* Adds live migration support to cells API
* Raise AgentBuildNotFound on updating/destroying deleted object
* Add missing tests for nova.db.api.agent_build_* methods
* Don't update API cell on get_nwinfo
* Optimize SecurityGroupsOutputController by len(servers)
* get_instance_security_groups() fails if no name on security group
* libvirt: Moving tests under tests/virt/libvirt
* Make it easier to add namespaced rpc APIs
* baremetal: Move tests under tests/virt/baremetal
* Disallow resize if image not available
* powervm: Move tests under tests/virt/powervm
* Sync RPC serializer changes from Oslo
* Fix missing argument to logging warning call
* set ERROR state when scheduler hits max attempts
* Sync latest RPC changes from oslo
* Add notification for live migration
* Add requests requirement capped <1.2.1
* Adding tests for rebuild image checks
* Add ImageNotActive check for instance rebuild
* Fix error in instance_get_all_by_filters() use of soft_deleted filter
* Fix resize when instance has no image
* Fixes encoding issues for nova api req body
* Update run_tests.sh to run flake8 too
* Added validation for networks parameter value
* Added attribute 'ip' to server search options
* Make nova-api use servicegroup.API.service_is_up()
* Add memorycache import into the oslo config
* Fix require_context() decorators
* Imported Translations from Transifex
* Remove locals() from nova/cells/*
* Update mailmap
* Strip exec_dirs prefix from rootwrap filters
* Clean up test_api_samples a bit
* Remove unnecessary parens in test_volumes
* Use strict=True instead of `is_valid_boolstr`
* Editable default quota support
* Remove usage of locals() for formatting from nova.api.*
* Switch to flake8+hacking
* Fix flake8 errors in anticipation of flake8
* Don't update DB records for unchanged stats
* baremetal: drop 'prov_mac_address' column
* The vm_state should not be modified until the task is complete
* Return Customer's Quota Usage through Admin API
* Use prettyxml output
* Remove locals() from messages in virt/disk/api.py
* 'm1.tiny' now has root_gb=1
* Cast `size` to int before comparison
* Don't raise unnecessary stack traces in EC2 API
* Mox should cleanup before stubs
* Reverse compare arguments in filters tests
* Don't inject settings for dynamic network
* Add ca cert file support to cinder client requests
* libvirt: Catch VIR_ERR_NO_DOMAIN in list_instances
* Revert "Include list of attached volumes with instance info"
* Sync rpc from oslo
* Remove openstack.common.version
* Fix for missing multipath device name
* Add missing tests for db.fixed_ip_*(). functions
* xenapi: ensure vdi is not too big when resizing down
* Cells: Don't allow active -> build
* Fix whitespace issue in indent
* Pass the proper admin context to update_dhcp
* Fix quantum security group driver to accept none for from/to_port
* Reverse path SNAT for DNAT floating-ip
* Use Oslo's `bool_from_string`
* Handle IPMI transient failures better
* Improve unit tests for DB archiving
* Remove "#!/usr/bin/env python" from .py files under nova/cmd
* Add missing unique constraint to KeyPair model
* Refactored tests for db.key_pair_*() functions
* Refactor nova.volume.cinder.API to reduce roundtrips with Cinder
* Fix response from snapshot create stub
* Hide lock_prefix argument using synchronized_with_prefix()
* Cleanups for create-flavor
* Cleanup create flavor tests
* Imported Translations from Transifex
* Test for remote directory creation before shutting down instance
* Fix run_tests.sh usage of tools/colorizer.py
* Move get_table() from test_migrations to sqlalchemy.utils
* Convert Nova to use Oslo service infrastructure
* Show the cause of virt driver error
* Detach volume fails when using multipath iscsi
* API extensions framework for v3 API
* Sync service and threadgroup modules from oslo
* Fix header issue for baremetal_deploy_helper.py
* Extract getting instance's AZ into a helper module
* Allow different paths for deploy-helper helpers
* Show exception details for failed deploys
* Imported Translations from Transifex
* Check QCOW2 image size during root disk creation
* Adds useful debug logging to filter_scheduler
* fix non reporting of failures with floating IP assignment
* Improve message and logging for corrupt VHD footers
* Cleanup for test_create_server_with_deleted_image
* Check cached SSH connection in PowerVM driver
* Allow a floating IP to be associated to a specific fixed IP
* Record smoketest dependency on gFlags
* Make resize/migrated shared storage aware
* Imported Translations from Transifex
* Add pointer to compute driver matrix wiki page
* xenapi: cleanup vdi when disk too big exception raised
* Update rootwrap with code from oslo
* Fixes typo in server-evacuate-req.xml
* Fix variable referenced before assginment in vmwareapi code
* Remove invalid block_device_mapping volume_size of ''
* Architecture property updated in snapshot libvirt
* Add sqlalchemy migration utils.create_shadow_table method
* Add sqlalchemy migration utils.check_shadow_table method
* Change type of cells.deleted from boolean to integer
* Pass None to image if booted from volume in live migration
* Raise InstanceInvalidState for double hard reboot
* Removes duplicate assertEqual
* Remove insecure default for signing_dir option
* Removes unnecessary check for admin context in evacuate
* Fix zookeeper import and tests
* Make sure that hypervisor nodename is set correctly in FakeDriver
* Optimize db.instance_floating_address_get_all method
* Session cleanup for db.floating_ip_* methods
* Optimize instance queries in compute manager
* Remove duplicate gettext.install() calls
* Include list of attached volumes with instance info
* Catch volume create exception
* Fixes KeyError bug with network api associate
* Add unitests for VMware vif, and fix code logical error
* Fix format error in claims
* Fixes mock calls in Hyper-V test method
* Adds instance root disk size checks during resize
* Rename nova.compute.instance_types to flavors
* Convert to using newly imported processutils
* Import new additions to oslo's processutils
* Imported Translations from Transifex
* Enable live block migration when using iSCSI volumes
* Nova evacuate failed when VM is in SHUTOFF status
* Transition from openstack.common.setup to pbr
* Remove random print statements
* Remove security_group_handler
* Add cpuset attr to vcpu conf in libvirt xml
* Imported Translations from Transifex
* Remove referances to LegacyFormatter in example logging.conf
* libvirt: ignore NOSTATE in resume_state_on_host_boot() method
* Sync oslo-incubator print statement changes
* Fix stub_instance() to include missing attributes
* Add an index to compute_node_stats
* Convert to using oslo's execute() method
* Import latest log module from oslo
* Being more defensive around the use_ipv6 config option
* Update hypervisor_hostname after live migration
* Make nova-network support requested nic ordering
* nova coverage creates lots of empty folders
* fix broken WSDL logic
* Remove race condition (in FloatingIps)
* Add missing tests for db.floating_ip_* methods
* Deprecate show_host_resources() in scheduler manager
* Add force_nodes to filter properties
* Adds --addn-hosts to the dnsmasq arg list
* Update our import of oslo's processutils
* Update oslo-incubator import
* Delete InstanceSystemMetadata on instance deletion
* vmwareapi: Add supported_instances to host state
* xenapi: Always set other_config for VDIs
* Copy the RHEL6 eventlet workaround from Oslo
* Move db.fixed_ip_* tests from DbApiTestCase to FixedIpTestCase
* Checks if volume can be attached
* Call format_message on InstanceTypeNotFound exception
* xenapi: Don't swallow missing SR exception
* Prevent rescuing a VM with a partially mounted volume
* Fix key error when create lpar instance failed
* Reset migrating task state for MigrationError exceptions
* Volume IO usage gets reset to 0 after a reboot / crash
* Sync small and safe changes from oslo
* Sync jsonutils from oslo
* Fix EC2 instance bdm response
* Rename _check_image_size to _get_and_check_image_metadata
* Convert the cache key from unicode to a string
* Catch glance image create exceptions
* Update to using oslo periodic tasks implementation
* Import oslo periodic tasks support
* import and install gettext in vm_vdi_cleaner.py
* Fix baremetal get_available_nodes
* Fix attach when running as root without sysfsutils
* Make _build_network_info_model testable
* Fix building quantumapi network model with network list
* Add the availability_zone to the volume.usage notifications
* Add delete_net_interface function
* Performance optimization for contrib.flavorextraspecs
* Small whitespace tweak
* Kill off usage of locals() in the filter_scheduler
* Remove local variable only used in logging
* Create instance with deleting image
* Refactor work with db.instance_type_* methods
* Fix flakey TestS3ImageService bug
* Add missing snapshot image properties for VMware Hyper
* Imported Translations from Transifex
* Fix VMware Hyper console url parameter error
* Update NovaBase model per changes on oslo.db.sqlalchemy
* Send a instance create error notification
* Refactor _run_instance() to unify control flow
* set bdm['volume_id'] to None rather than delete it
* Destroy conntrack table on source host during migration
* Adds tests for isolated_hosts_filter
* Fixes race condition of deleting floating ip
* Imported Translations from Transifex
* Wrong proxy port in nova.conf for Spice proxy
* Fix missing kernel output via VNC/Spice on boot
* Fix bug in db.instance_type_destroy
* Move get_backdoor_port to base rpc API
* Move db.instance_type_extra_specs_* to db.instance_type_* methods
* Add missing test for db.instance_type_destroy method
* Fix powervm driver resize instance error
* Support FlatDHCP network for VMware Hyper
* Imported Translations from Transifex
* Deprecate conductor ping method
* Add an rpc API common to all services
* If rescue fails don't error the instance
* Make os.services.update work with cells
* Fix fixed_ip_count_by_project in DB API
* Add unit tests for /db/api.py#fixed_ip_*
* Add option to exclude joins from instance_get_by_uuid
* Remove unnecessary method argument
* Improve Python 3.x compatibility
* ec2 CreateVolumes/DescribeVolumes status mapping
* Can now reboot rescued instances in xenapi
* Allows xenapi 'lookup' to look for rescue mode VMs
* Adds tests to xenapi.vm_utils's 'lookup' method
* Imported Translations from Transifex
* Stop vm_state reset on reboot of rescued vm
* Fix hyperv copy file error logged incorrect
* Fix ec2 CreateVolumes/DescribeVolumes status
* Imported Translations from Transifex
* Don't swallow PolicyNotAuthorized for resize/reboot actions
* Remove unused exception and variable from scheduler
* Remove unnecessary full resource audits at the end of resizes
* Update the log module from oslo-incubator
* Translate NoMoreFloatingIps exception
* Imported Translations from Transifex
* Fix up regression tester
* Delete extra space to api/volumes message
* Map internal S3 image state to EC2 API values
* removing unused variable from a test
* Translate cinder NotFound exception
* hypervisor tests more accurate db
* Added comments to quantum api client
* Cleanup and test volume usage on volume detach
* Import and convert to oslo loopingcall
* Remove orphaned db method instance_test_and_set
* baremetal: VirtualPowerDriver uses mac addresses in bm_interfaces
* Sync rpc from oslo-incubator
* Correct disk's over committed size computing error
* Imported Translations from Transifex
* Allow listing fixed_ips for a given compute host
* Imported Translations from Transifex
* baremetal: Change input for sfdisk
* Make sure confirm_resize finishes before setting vm_state to ACTIVE
* Completes the power_state mapping from compute driver and manager
* Make compute/manager use conductor for unrescue()
* Add an extension to show the mac address of a ip in server(s)
* Cleans up orphan compute_nodes not cleaned up by compute manager
* Allow for the power state interval to be configured
* Imported Translations from Transifex
* Fix bug in os-availability-zone extension
* Remove unnecessary db call in scheduler driver live-migration code
* baremetal: Change node api related to prov_mac_address
* Don't join metadata twice in instance_get_all()
* Imported Translations from Transifex
* Don't hide stacktraces for unexpected errors in rescue
* Fix issues with check_instance_shared_storage
* Remove "undefined name" pyflake errors
* Optimize some of compute/manager's periodic tasks' DB queries
* Optimize some of the periodic task database queries in n-cpu
* Change DB API instance functions for selective metadata fetching
* Replace metadata joins with another query
* xenapi: Make _connect_volume exc handler eventlet safe
* Fix typo: libvir => libvirt
* Remove multi scheduler
* Remove unnecessary LOG initialisation
* Remove unnecessary parens
* Simplify random host choice
* Add NOVA_LOCALEDIR env variable
* Imported Translations from Transifex
* Clarify volume related exception message
* Cleanup trailing whitespace in api samples
* Add tenant/ user id to volume usage notifications
* Security groups may be unavailable
* Encode consoleauth token in utf-8 to make it a str
* Catch NoValidHost exception during live-migration
* Evacuated instance disk not deleted
* Fix a bad tearDown method in test_quantumv2.py
* Import eventlet in __init__.py
* Raise correct exception for duplicate networks
* Add an extension to show the network id of a virtual interface
* Fix error message in pre_live_migration
* Add reset function to nova coverage
* Imported Translations from Transifex
* nova-consoleauth start failed by consoleauth_manager option missing
* set timeout for paramiko ssh connection
* Define LOG globally in baremetal_deploy_helper
* Allow describe_instances to use tags for searches
* Correct network uuid field for os-network extension
* Only call getLogger after configuring logging
* Add SecurityGroups API sample tests
* Cannot boot vm if quantum plugin does not support L3 api
* Add missing tests for instance_type_extra_specs_* methods
* Remove race condition (in InstanceTypeProjects)
* Deprecate old vif drivers
* Optimize resource tracker queries for instances
* baremetal: Integrate provisioning and non-provisioning interfaces
* Move console scripts to entrypoints
* Remove deprecated Grizzly code
* Fallback to conductor if types are not stashed
* Imported Translations from Transifex
* Resolve conflicting mac address in resize
* Simplify and correct the bm partition sizes
* Fix legacy_net_info guard
* Fix SecurityGroups XML sample tests
* Modify _verify_response to validate response codes
* Fix a typo in attach_interface error path
* After migrate, catch and remove deleted instances
* Grab instance for migration before updating usage
* Explain why the give methods are whitelisted
* libvirt: Get driver type from base image type
* Guard against content being None
* Limit the checks for block device becoming available
* Fix _error_out_instance exception handler
* Raise rather than generating millions of IPs
* Add unit tests for nova.volume.cinder.API
* Update latest oslo.setup
* baremetal: Drop unused columns in bm_nodes
* Remove print statements
* Imported Translations from Transifex
* Fix the python version comparison
* Remove gettext.install() from nova/__init__.py
* Sync latest gettextutils from oslo-incubator
* Return 409 on creating/importing same name keypair
* Delete tests.baremetal.util.new_bm_deployment()
* Return proper error message when network conflicts
* Better iptables DROP removal
* Query quantum once for instance's security groups
* quantum security group driver nova list shows same group
* Sync in matchmaker and qpid Conf changes from oslo
* improve handling of an empty dnsmasq --domain
* Fix automatic confirmation of resizes for no-db-compute
* 'injected_files' should be base 64 encoded
* Add missing unit tests for FlavorActionController
* Set default fixed_ip quota to unlimited
* Accepts aws-sdk-java timestamp format
* Imported Translations from Transifex
* get context from req rather than getting a new admin context
* Use Cluster reference to reduce SDK calls
* Fix missing punctuation in docstring
* xenapi: fix support for iso boot
* Ensure only pickle-able objects live in metadata
* sync oslo db/sqlalchemy module
* Convert host value from unicode to a string
* always quote dhcp-domain, otherwise dnsmasq can fail to start
* Fix typo in the XML serialization os-services API
* Add CRUD methods for tags to the EC2 API
* Fix migrating instance to the same host
* Rework time handling in periodic tasks
* Show quota 'in_use' and 'reserved' info
* Imported Translations from Transifex
* Fix quantum nic allocation when only portid is specified
* Make tenant_usage fall back to instance_type_id
* Use format_message on exceptions instead of str()
* Add a format_message method to the Exceptions
* List AZs fails if there are disabled services
* Switch nova-baremetal-deploy-helper to use sfdisk
* Bring back colorizer again with error results
* Imported Translations from Transifex
* Adds Tilera back-end for baremetal
* Always store old instance_type during a migration
* Make more readable error msg on quantum client authentication failure
* Adding netmask to dnsmasq argument --dhcp-range
* Add missing tests for db.instance_type_access_* methods
* Remove race condition (in InstanceTypes)
* Add missing tests for db.instance_type_* methods
* Imported Translations from Transifex
* set up FakeLogger for root logger
* Fix /servers/<instance-id>os-security-groups using quantum
* NoneType exception thrown if driver live-migration check returns None
* Add missing info to docstring
* Include Co-authored-by entries in AUTHORS
* Do not test foreign keys with SQLite version < 3.7
* Avoid using whitespace in test_safe_parse_xml
* xenapi: Retrieve VM uuid from xenstore
* Reformat openstack-common.conf
* Imported Translations from Transifex
* Fixes Nova API /os-hosts missing element "zone"
* disable colorizer as it swallows fails
* Make iptables drop action configurable
* Fixes argument order of quantumv2.api.get_instance_nw_info
* Make _downsize_quota_delta() use stashed instance types
* py2.6 doesn't support TextTestRunner resultclass
* Reset ec2 image cache between S3 tests
* Sync everything from oslo-incubator
* Sync rpc from oslo-incubator
* Don't log traceback on rpc timeout
* Adds return-type in two functions' docstrings
* Remove unnecessary checks in api.py
* translate cinder BadRequest exception
* Initialize compute manager before loading driver
* Add a comment to placeholder migrations
* xenapi: fix console for rescued instance
* Fixes passing arbitrary conductor_api argument
* Make nova.virt.fake.FakeDriver useable in integration testing
* Remove unnecessary DB call to find EC2 AZs
* Remove outdated try except block in ec2 code
* nova-manage vm list fails looking 'instance_type'
* Update instance network info cache to include vif_type
* Bring back sexy colorized test results
* Don't actually connect to libvirtd in unit tests
* Add placeholder migrations to allow backports
* Change arguments to volume_detach()
* Change type of ssh_port option from Str to Int
* xenapi: rpmbuild fixes
* Set version to 2013.2

2013.1.rc1
----------

* Fix Hyper V instance conflicts
* Add caching for ec2 mapping ids
* Imported Translations from Transifex
* fix add-fixed-ip with quantum
* Update the network info when using quantum
* List InstanceNotFound as a client exception
* Refactor db.service_destroy and db.service_update methods
* Fix console support with cells
* Fix missing argument to QemuImageInfo
* Add missing tests for db.virtual_interface_* methods
* Fix multiple fixed-ips with quantum
* Add missing tests for db.service_* methods
* Ensure that headers are returned as strings, not integers
* Enable tox use of site-packages for libvirt
* Require netaddr>=0.7.6 to avoid UnboundLocalError
* Pass project id in quantum driver secgroup list
* Fixes PowerVM spawn failed as missing attr supported_instances
* Fix RequestContext crashes w/ no service catalog
* Prevent volume-attach/detach from instances in rescue state
* Fix XenAPI performance issue
* xenapi: Adding logging for migration plugin
* libvirt: Tolerate existing vm(s) with cdrom(s)
* Remove dead code
* Remove unused virt.disk.api methods bind/unbind
* Imported Translations from Transifex
* Revert "Remove the usage of instance['extra_specs'
* Add standard methods to the Limits API
* Store project_id for instance actions
* rstrip() strips characters, not strings
* Fix use of libvirt_disk_prefix
* Revert 1154253 causes XenServer image compat issue
* Reset migrating task state for more Exceptions
* Fix db archiving bug with foreign key constraints
* Imported Translations from Transifex
* Update migration 153 for efficiency
* Don't include traceback when wrapping exceptions
* Fix exception message in Networks API extension
* Make conductor's quota methods pass project_id properly
* Fix: improve API error responses from os-hosts extension
* Add missing API doc for networks-post-req
* Make os-services API extensions consistent
* Fix system_metadata "None" and created_at values
* Add the serial to connection info for boot volumes
* Do not accept invalid keys in quota-update
* Add quotas for fixed ips
* Makes safe xml data calls raise 400 http error instead of 500
* Fixes an iSCSI connector issue in the Hyper-V driver
* Check keypair destroy result operation
* Resize/Migrate refactoring fixes and test cases
* Fixes Hyper-V live migration with attached volumes
* Force nova to use keystone v2.0 for auth_token
* Fix issues with cells and resize
* Fix copyright - from LLC to Foundation
* Don't log traceback on expected console error
* Generalize console error handling during build
* Remove sqlalchemy calling back to DB API
* Make ssh key injection work with xenapi agent
* Fix use of potentially-stale instance_type in tenant_usage
* Drop gzip flag from tar command for OVF archives
* Fix reconnecting to libvirt
* List ComputeHostNotFound as a client exception
* Fix: Nova aggregate API throws an uncaught exception on invalid host
* Do cleaning up resource before rescheduling
* nova-manage: remove unused import
* Read instance resource quota info from "quota" namespace
* LibvirtGenericVIFDriver update for stp
* Switch to final 1.1.0 oslo.config release
* Skip deleted fixed ip address for os-fixed-ips extension
* Return error details to users in "dns-create-private-domain"
* Lazy load CONF.quota_driver
* Fix cells instance deletion
* Don't load system_metadata when it isn't joined
* List ConsoleTypeInvalid as a client exception
* Make run_instance() bail quietly if instance has been deleted
* Delete instance metadata when delete VM
* Virtual Power Driver list running vms quoting error
* Refactor work with session in db.block_device_mapping_* methods
* Add missing tests for db.block_device_mapping_* methods
* websockify 0.4 is busted
* Sync rpc from oslo-incubator
* Fix: nova-manage throws uncaught exception on invalid host/service
* Fix more OS-DCF:diskConfig XML handling
* Fix: Managers that incorrectly derive from SchedulerDependentManager
* Fix nova-manage --version
* Pin SQLAlchemy to 0.7.x
* Deprecate CONF.fixed_range, do dynamic setup
* Remove the usage of instance['extra_specs']
* Fix behaviour of split_cell_and_item
* Fix quota issues with instance deletes
* Fixes instance task_state being left as migrating
* Force resource updates to update updated_at
* Prepare services index method for use with cells
* Handle vcpu counting failures gracefully
* Return XML message with objectserver 404
* xenapi: Fix reboot with hung volumes
* Rename LLC to Foundation
* Pass migration_ref when when auto-confirming
* Revert changing to FQDN for hostnames
* Add numerous fixes to test_api_samples
* Fixes instance action exception in "evacuate" API
* Remove instance['instance_type'] relationship from db api
* Refactor db tests to ensure that notdb driver is used
* Rewrap two lines
* Server create will only process "networks" if os-networks is loaded
* Fixes nbd device can't be released error
* Correct exception args in vfs/guestfs
* Imported Translations from Transifex
* Prevent nova services' coverage data from combining into nova-api's
* Check if flavor id is an empty string
* Simple syntax fix up
* Fixes volume attach on Hyper-V with IPv6
* Add ability to control max utilization of a cell
* Extended server attributes can show wrong hypervisor_hostname
* Imported Translations from Transifex
* Remove uses of instance['instance_type'] from nova/notifications
* Libvirt driver create images even without meta
* Prevent rescue for volume-backed instances
* Fix OS-DCF:diskconfig XML handling
* Imported Translations from Transifex
* Compile BigInteger to INTEGER for sqlite
* Add conductor to nova-all
* Make bm model's deleted column match database
* Update to Quantum Client 2.2.0
* Remove uses of instance['instance_type'] from nova/scheduler
* Remove uses of instance['instance_type'] from nova/api
* Remove uses of instance['instance_type'] from nova/network
* Remove uses of instance['instance_type'] from nova/compute
* Correct substring matching of baremetal VPD node names
* Fix Wrong syntax for set:tag in dnsmasq startup option
* Fix instance evacuate with shared storage
* nova-manage: remove redundant 'dest' args
* clear up method parameters for _modify_rules
* Check CONF values *after* command line args are parsed
* Make nova-manage db archive_deleted_rows more explicit
* Fix for delete error in Hyper-V - missing CONF imports
* add .idea folder to .gitignore pycharm creates this folder
* Make 'os-hosts/node1' case sensitivity defer to DB
* Fix access_ip_* race
* Add MultipleCreate template and fix conflict with other templates
* Update tox.ini to support RHEL 6.x
* Fix instance type cleanup when doing a same-id migration
* Tiny typo
* Remove unnecessary setUp() and tearDown() methods
* Remove duplicate API logging
* Remove uses of instance['instance_type'] from libvirt driver
* Remove uses of instance['instance_type'] from powervm driver
* Remove uses of instance['instance_type'] from xenapi driver
* Fixed image filter support for vmware
* Switch to oslo.config
* Fix instance_system_metadata deleted columns
* Remove parameters containing passwords from Notifications
* Add missing action_start if deleting resized inst
* Fix issues with re-raising exceptions
* Don't traceback in the API on invalid keypair
* delete deleted image 500 bug
* Moves Hyper-V options to the hyperv section
* Fix 'to integer' conversion of max and min count values
* Standarize ip validation along the code
* Adjusts reclaim instance interval of deferred delete tests
* Fix Network object encoding issue when using qpid
* Rename VMWare to VMware
* Put options in a list
* Bump instance updated_at on network change
* Catching InstanceNotFound exception during reboot instance
* Imported Translations from Transifex
* Remove completed FIXME
* quantum security_group driver queries db regression
* Prevent reboot of rescued instance
* Baremetal deploy helper sets ODIRECT
* Read baremetal images from extra_specs namespace
* Rename source_(group_id/ip_prefix) to remote_(group_id/ip_prefix)
* docs should indicate proper git commit limit
* Imporove db.sqlalchemy.api._validate_unique_server_name method
* Remove unused db calls from nova.db.api
* Fixes oslo-config update for deprecated_group
* fix postgresql drop race
* Compute manager should remove dead resources
* Fix an error in compute api snapshot_volume_backed bdm code
* Fixes disk size issue during image boot on Hyper-V
* Updating powervm driver snapshot with update_task_state flow
* Imported Translations from Transifex
* Add ssh port and key based auth to VPD
* Make ComputeManager _running_deleted_instances query by uuid
* Refactor compute manager _get_instances_by_driver
* Fix target host variable from being overwritten
* Imported Translations from Transifex
* Fixes live migration with attached volumes issue
* Don't LOG.error on max_depth (by default)
* Set vm_state to ERROR on net deallocate failure
* validate security_groups on server create
* Fix IBM copyright strings
* Implement rules_exist method for quantum security group driver
* Switch to using memorycache from oslo
* Remove pylint errors for undefined GroupException members
* Sync timeutils and memorycache from oslo
* instance_info_cache_update creates wrongly
* Tone down logging while waiting for conductor
* Add os-volumes extension to api samples
* Regenerate nova.conf.sample
* Fix ephemeral devices on LVM don't get mkfs'd
* don't stack trace if long ints are passed to db
* Pep8/pyflakes cleanup of deprecated_api
* Fix deprecated network api
* Fixes the Hyper-V driver's method signature
* Imported Translations from Transifex
* Fixes a Hyper-V live migration issue
* Don't use instance['instance_type'] for scheduler filters in migration
* Fallback coverage backdoor telnet connection to lo
* Add instance_type_get() to virt api
* Make compute manager revert crashed migrations on init_host()
* Adds API Sample tests for Volume Attachments
* Ensure that FORWARD rule also supports DHCP
* Remove duplicate options(joinedload) from aggregates db code
* Shrink size of aggregate_metadata_get_by_host sql query
* Remove old commented out code in sqlalchemy models
* Return proper error messages while disassociating floating IP
* Don't blindly skip first migration
* Imported Translations from Transifex
* Suppress retries on UnexpectedTaskStateErrors
* Fix `with_data` handling in test-migrations
* BM Migration 004: Actually drop column
* Actually run baremetal migration tests
* Adds retry on upload_vhd for xapi glance plugin
* ec2 _format_security_group() accesses db when using quantum_driver
* Remove un-needed methods
* Prevent hacking.py from crashing on unexpected import exception
* Bump python-quantumclient version to 2.1.2
* Improve output msgs for _compare_result
* Add a 'hw_' namespace to glance hardware config properties
* Makes sure required powervm config options are set
* Update OpenStack LLC to Foundation
* Improve hackings docstring detection
* Make sure no duplicate forward rules can exist
* Use min_ram of original image for snapshot, even with VHD
* Revert IP Address column length to 39
* Additional tests for safe parsing with minidom
* Make allocate_for_instance() return only info about ports allocated
* Fix crash in quantumapi if no network or port id is specified
* Unpin PasteDeploy dependency version
* Unpin routes dependency version
* Unpin suds dependency version
* Unpin Cheetah dependency version
* Allow zk driver be imported without zookeeper
* Retry floating_ip_fixed_ip_associate on deadlock
* Fix hacking.py to handle 'cannot import x'
* Add missing import to fakelibvirt
* Migration 148: Fix drop table dependency order
* Minor code optimization in _compute_topic
* Fix hacking.py to handle parenthesise in from import as
* Fix redefinition of function test_get_host_uptime
* Migration 147: Prevent duplicate aggregate_hosts
* Rework instance actions to work with cells
* Fix incorrect zookeeper group name
* Sync nova with oslo DB exception cleanup
* Fix broken baremetal migration tests
* if reset fails, display the command that failed
* Remove unused nova.db.api:instance_get_all_by_reservation
* Add API Sample tests for Snapshots extension
* Run libguestfs API calls in a thread pool
* Change nova-dhcpbridge FLAGFILE to a list of files
* Imported Translations from Transifex
* Readd run_tests.sh --debug option
* Clean unused kernels and ramdisks from image cache
* Imported Translations from Transifex
* Ensure macs can be serialized
* Remove Print Statement
* Prevent default security group deletion
* libvirt: lxml behavior breaks version check
* Add missing import_opt for flat_injected
* Add processutils from oslo
* Updates to OSAPI sizelimit middleware
* Remove compat cfg wrapper
* Fix exception handling in baremetal API
* Make guestfs use same libvirt URI as Nova
* Make LibvirtDriver.uri() a staticmethod
* Enable VM DHCP request to reach DHCP agent
* Don't set filter name if we use Noop driver
* Removes unnecessary qemu-img dependency on powervm driver
* Migration 146: Execute delete call
* Add `post_downgrade` hook for migration tests
* Fix migration snake-walk
* BM Migrations 2 & 3: Fix drop_column statements
* Migration 144: Fix drop index statement
* Remove function redefinitions
* Migration 135: Fix drop_column statement
* Add missing ec2 security group quantum mixin
* Fix baremetal migration skipping
* Add module prefix to exception types
* Flush tokens on instance delete
* Fix launching libvirt instances with swap
* Spelling: compatable=>compatible
* import base_dir_name config option into vmwareapi
* Fix ComputeAPI.get_host_uptime
* Move DB thread pooling to DB API
* Use a fake coverage module instead of real one
* Standardize the coverage initializations
* Sync eventlet_backdoor from oslo-incubator
* Sync rpc from oslo-incubator
* Fix message envelope keys
* Remove race condition (in Networks)
* Move some context checking code from sqlalchemy
* Baremetal driver returns accurate list of instance
* Identify baremetal nodes by UUID
* Improve performance of baremetal list_instances
* Better error handling in baremetal spawn & destroy
* Wait for baremetal deploy inside driver.spawn
* cfg should be imported from oslo.config
* Add Nova quantum security group proxy
* Add a volume driver in Nova for Scality SOFS
* Make nova security groups more pluggable
* libvirt: fix volume walk of /dev/disk/by-path
* Add better status to baremetal deployments
* Fix handling of source_groups with no-db-compute
* Improve I/O performance for periodic tasks
* Allow exit code 21 for 'iscsiadm -m session'
* Removed duplicate spawn code in PowerVM driver
* Add API Sample tests for Hypervisors extension
* Log lifecycle events to log INFO (not ERROR)
* Sync rpc from oslo-incubator
* sync oslo log updates
* Adding ability to specify the libvirt cache mode for disk devices
* Sync latest install_venv_common.py
* Make add-fixed-ip update nwfilter wth in libvirt
* Refactor nwfilter parameters
* ensure we run db tests in CI
* More gracefully handle TimeoutException in test
* Multi-tenancy isolation with aggregates
* Fix pep8 issues with test_manager.py
* Fix broken logging imports
* Fix hacking test to handle namespace packages
* Use oslo-config-2013.1b4
* support preallocated VM images
* Fix instance directory path for lxc
* Add snapshot methods to fakes.py
* PowerVMDiskAdapter detach/cleanup refactoring
* Make ComputeTestCase.test_state_revert faster
* Add an extension to show image size
* libvirt: Use uuid for instance directory name
* Support running periodic tasks immediately at startup
* Fix XMLMatcher error reporting
* Fix XML config tests for disk/net/cpu tuning
* Add support for network adapter hotplug
* Handle lifecycle events in the compute manager
* Add support for lifecycle events in the libvirt driver
* Enhance IPAdresses migration tests
* Add basic infrastructure for compute driver async events
* Fix key check in instance actions formatter
* Add a safe_minidom_parse_string function
* Documentation cleanups for nova devref
* Fix leak of loop/nbd devices in injection using localfs
* Add support for instance CPU consumption control
* Add support for instance disk IO control
* Retry bw_usage_update() on innodb Deadlock
* Change CIDR column size on migration version 149
* Provide way to pass rxtx factor to quantum
* Fibre channel block storage support (nova changes)
* Default SG rules for the Security Group "Default"
* create new cidr type for data storage
* Ensure rpc result is primitive types
* Change all instances of the non-word "inteface" to "interface"
* Remove unused nova.db.api:network_get_by_bridge
* Fix a typo in two comments. networksa -> networks
* Live migration with an auto selection of dest
* Remove unused nova.db.api:network_get_by_instance
* Fix network list and show with quantum
* Remove unused db calls from nova.db.sqlalchemy.api
* Remove unused db calls
* Small spelling fix in sqlalchemy utils
* Fix _get_instance_volume_block_device_info call parameter
* Do not use abbreviated config group names (zookeeper)
* Prevent the unexpected with nova-manage network modify
* Fix hacking tests on osx
* Enable multipath for libvirt iSCSI Volume Driver
* Add select_hosts to scheduler manager rpc
* Add and check data functions for test_migrations 141
* fix incorrectly defined ints as strs
* Remove race condition (in TaskLog)
* Add generic dropper for duplicate rows
* Imported Translations from Transifex
* Fix typo/bug in generic UC dropper
* remove intermediate libvirt downloaded images
* Add support for instance vif traffic control
* Add libvirt XML schema support for resource tuning parameters
* Fix instance can not be deleted after soft reboot
* Correct spelling of quantum
* Make pep8 tests run inside virtualenv
* Remove tests for non-existing SimpleScheduler
* libvirt: Fix LXC container creation
* Rename 'connection' to 'driver' in libvirt HostState
* Ensure there is only one instance of LibvirtDriver
* Stop unit test for prompting for a sudo password
* clean up missing whitespace after ':'
* Push 'Error' result from event to instance action
* Speedup the revert_state test
* Add image to request_spec during resize
* Ensure start time is earlier than end time in simple_tenant_usage
* Split out body of loop in _sync_power_states in compute manager
* Remove dead variable assignment in compute manager
* Assign unique names with os-multiple-create
* Nova network needs to take care of existing alias
* Delete baremetal interfaces when their parent node is deleted
* Harmonize PEP8 checking between tox and run_tests.sh
* VirtualPowerDriver catches ProcessExecutionError
* [xenapi] Cooperatively yield during sparse copy
* Allow archiving deleted rows to shadow tables, for performance
* Adds API Sample tests for FlavorAccess extension
* Add an update option to run_tests.sh
* filter_scheduler: Select from a subset of hosts
* use nova-conductor for live-migration
* Fix script argument parsing
* Add option to allow cross AZ attach configurable
* relocatable roots doesn't handle testr args/opts
* Remove a log message in test code
* add config drive to api_samples
* Don't modify injected_files inside PXE driver
* Synchronize code from oslo
* Canonizes IPv6 before insert it into the db
* Only dhcp the first ip for each mac address
* Use connection_info on resize
* Fix add-fixed-ip and remove-fixed-ip
* API extension for accessing instance_actions
* Use joinedload for system_metadata in db
* Add migration with data test for migration 151
* Correct misspelling in PowerVM comment
* Add GlusterFS libvirt volume connector
* Module import style checking changes
* Stub additional FloatingIP methods in FlatManager
* Resize/Migrate functions for PowerVM driver
* Added a service heartbeat driver using Memcached
* Use a more specific error reporting invalid disk hardware
* Allow VIF model to be chosen per image
* Check the length of flavor name in "flavor-create"
* Add API sample tests to Services extension
* VMWare driver to use current nova.network.model
* Add "is not" test to hacking.py
* Update tools/regression_tester
* Fix passing conductor to get_instance_nw_info()
* Imported Translations from Transifex
* Make compute manager use conductor for stopping instances
* Move allowvssprovider=false to vm-data field
* Allow aggregate create to have None as the az
* Forces flavorRef to be string in servers resize api
* xenapi: Remove unecessary exception handling
* Sync jsonutils from openstack-common
* Simplify and optimize az server output extension
* Add an extension to show the type of an ip
* Ensure that only one IP address is allocated
* Make the metadata paths use conductor
* Fix nova-compute use of missing DBError
* Adding support for AoE block storage SANs
* Update docs about testing
* Allow generic rules in context_is_admin rule in policy
* Implements resize / cold migration on Hyper-V
* test_(dis)associate_by_non_existing_security_group_name missing stub
* Make scheduler remove dead nodes from its cache
* More conductor support for resizes
* Allow fixed to float ping with external gateway
* Add generic UC dropper
* Remove locking declarator in ServiceGroup __new__()
* Use ServiceGroup API to show node liveness
* Refine PowerVM MAC address generation algorithm
* Fixes a bug in attaching volumes on Hyper-V
* Fix unconsumed column name warning in test_migrations
* Fix regression in non-admin simple_usage:show
* Ensure 'subunit2pyunit' is run in venv from run_tests.sh
* Fix inaccuracies in the development environment doc
* preserve order of pre-existing iptables chains
* Adds API Sample tests for FloatingIPDNS extension
* Don't call 'vif.plug' twice during VM startup
* Disallow setting /0 for network other than 0.0.0.0
* Fix spelling in comment
* Imported Translations from Transifex
* make vmwareapi driver pass quantum port-id to ESX
* Add control-M to list of characters to strip out
* Update to simplified common oslo version code
* Libvirt: Implement snapshots for LVM-backed roots
* Properly write non-raw LVM images on creation
* Changes GA code for tracking cross-domain
* Return dest_check_data as expected by the Scheduler
* Simplify libvirt snapshot code path
* fix VM power state to be NOSTATE when instance not found
* Fix missing key error in libvirt.driver
* Update jsonutils from oslo-incubator
* Update nova/compute/api to handle instance as dict
* Use joined version of db.api calls
* l3.py,add_floating_ip: setup NAT before binding
* Regenerate nova.conf.sample
* Fixes a race condition on updating security group rules
* Ensure that LB VIF drivers creates the bridge if necessary
* Remove nova.db call from baremetal PXE driver
* Support for scheduler hints for VM groups
* Fixed FlavorAccess serializer
* Add a virtual PowerDriver for Baremetal testing
* Optimize rpc handling for allocate and deallocate
* Move floating ip db access to calling side
* Implement ZooKeeper driver for ServiceGroup API
* Added the build directory to the tox.ini list pep8 ignores
* support reloctable venv roots in testing framework
* Change to support custom nw filters
* Allow multiple dns servers when starting dnsmasq
* Clean up extended server output samples
* maint: remove unused imports from bin/nova-*
* xenapi: Cleanup detach_volume code
* Access DB as dict not as attributes part 5
* Introduce support for 802.1qbg and 802.1qbh to Nova VIF model
* Adds _(prerun|check)_134 functions to test_migrations
* Extension for rebuild-for-ha
* Support hypervisor supplied macs in nova-network
* Recache or rebuild missing images on hard_reboot
* Cells: Add cells support to hypervisors extension
* Cells: Add cells support to instance_usage_audit_log api extension
* Update modules from common required for rpc with lock detection
* Fix lazy load 'system_metadata' failed problem
* Ban database access in nova-compute
* Move security_groups refreshes to conductor
* Fix inject_files for storing binary file
* Add regression testing tool
* Change forward_bridge_interface to MultiStrOpt
* Imported Translations from Transifex
* hypervisor-supplied-nics support in PowerVM
* Default the last parameter (state) in task_log_get to None
* Sync latest install_venv_common from oslo
* Remove strcmp_const_time
* Adds original copyright notice to refactored files
* Update .coveragerc
* Allow disk driver to be chosen per image
* Refactor code for setting up libvirt disk mappings
* Refactor instance usage notifications for compute manager
* Flavor Extra Specs should require admin privileges
* Remove unused methods
* Return to skipping filters when using force_hosts
* Refactor server password metadata to avoid direct db usage
* lxc: Clean up namespace mounts
* Move libvirt volume driver tests to separate test case
* Move libvirt NFS volume driver impl into volume.py
* replace ssh-keygen -m with a python equivalent
* Allow connecting to self-signed quantum endpoints
* Sync latest db and importutils from oslo
* Use oslo database code
* Fix check instance host for instance action
* Make get_dev_name_for_instance() use stashed instance_type info
* Added Postgres CI opportunistic test case
* Remove remaining instance_types query from compute/manager
* Make cells_api fetch stashed instance_type info
* Teach resource tracker about stashed instance types
* Fix up instance types in sys meta for resizes
* lxc: virDomainGetVcpus is not supported by driver
* Fix incorrect device name being raised
* VMware VC Compute Driver
* Default value of monkey_patch_modules is broken
* Adds evacuate method to compute.api
* Fix import for install_venv.py
* allow disabling file injection completely
* separate libvirt injection and configdrive config variables
* Add API sample tests to os-network
* Fix incorrect logs in network
* Update HACKING.rst per recent changes
* Allow for specifying nfs mount options
* Add REST API to show availability_zone of instance
* Make NFS mount hashes consistent with Cinder
* Parse testr output through subunit2pyunit
* Imported Translations from Transifex
* Optimize floating ip list to make one db query
* Remove hardcoded topic strings in network manager
* Reimplement is_valid_ipv4()
* Tweakify is_valid_boolstr()
* Fix update quota with invalid value
* Make system_metadata update in place
* Mark password config options with secret
* Record instance actions and events
* Postgres does not like empty strings for type inet
* Add 'not in' test to tools/hacking.py
* Split floating ip functionality into new file
* Optimize network calls by moving them to api
* Fixes unhandled exception in detach_volume
* Fixes FloatingIPDNS extension 'show' method
* import tools/flakes from oslo
* Use conductor for instance_info_cache_update
* Quantum metadata handler now uses X-Forwarded-For
* instance.update notifications don't always identify the service
* Handle compute node not available for live migration
* Fixes 'not in' operator usage
* Fixes "is not" usage
* Make scheduler modules pass conductor to add_instance_fault
* Condense multiple authorizers into a single one
* Extend extension_authorizer to enable cleaner code
* Remove unnecessary deserializer test
* Added sample tests to FlavorExtraSpecs API
* Fix rebuild with volumes attached
* DRYing up volume_in_mapping code
* Use _prep_block_device in rebuild
* xenapi: Ax unecessary `block_device_info` params
* Code cleanup for rebuild block device mapping
* Fix eventlet/mysql db pooling code
* Add support for compressing qcow2 snapshots
* Remove deprecation notice in LibvirtBridgeDriver
* Fix boto capabilities check
* Add api samples to fping extension
* Fix SQL Error with fixed ips under devstack/postgresql
* Pass testropts in to setup.py in run_tests.sh
* Nova Hyper-V driver refactoring
* Fixed grammar problems and typos in doc strings
* Add option to control where bridges forward
* xenapi: Add support for different image upload drivers
* Removed print stmts in test cases
* Fix get and update in FlavorExtraSpecs
* Libvirt: Add support for live snapshots
* Move task_log functions to conductor
* erase outdated comment
* Keep flavor information in system_metadata
* Add instance_fault_create() to conductor
* Adds API Sample tests for os-instance_usage_audit_log extension
* validate specified volumes to boot from at the API layer
* Refactor libvirt volume driver classes to reduce duplication
* Change ''' to """ in bin/nova-{novncproxy,spicehtml5proxy}
* Pass parameter 'filter' back to model layer
* Fix boot with image not active
* refactored data upgrade tests in test_migrations
* Fix authorized_keys file permissions
* Finer access control in os-volume_attachments
* Stop including full service catalog in each RPC msg
* Make sure there are no unused import
* Fix missing wrap_db_error for Session.execute() method
* Use install_venv_common.py from oslo
* Add Region name to quantum client
* Removes retry of set_admin_password
* fix nova-baremetal-manage version printing
* Refactoring/cleanup of compute and db apis
* Fix an error in affinity filters
* Fix a typo of log message in _poll_unconfirmed_resizes
* Allow users to specify a tmp location via config
* Avoid hard dependency on python-coverage
* iptables-restore error when table not loaded
* Don't warn up front about libvirt loading issues in NWFilterFirewall
* Relax API restrictions around the use of reboot
* Strip out Traceback from HTTP response
* VMware Compute Driver OVF Support
* VMware Compute Driver Host Ops
* VMware Compute Driver Networking
* Move policy checks to calling side of rpc
* Add api-samples to multinic extension
* Add system_metadata to db.instance_get_active_by_window_joined
* Enable N302: Import modules only
* clean up api_samples documentation
* Fix bad imports that cause nova-novncproxy to fail
* populate dnsmasq lease db with valid leases
* Support optional 4 arg for nova-dhcpbridge
* Add debug log when call out to glance
* Increase maximum URI size for EC2 API to 16k
* VMware Compute Driver Glance improvement
* Refactored run_command for better naming
* Fix rendering of FixedIpNotFoundForNetworkHost
* Fix hacking N302 import only modules
* Avoid db lookup in info_from_instance()
* Fixes task_log_get and task_log_get_all signatures
* Make failures in the periodic tests more detailed
* Clearer debug when test_terminate_sigterm fails
* Skip backup files when running pep8
* Added sample tests to floating-ip-pools API
* _sync_compute_node should log host and nodename
* Don't pass the entire list of instances to compute
* VMware Compute Driver Volume Management
* Bump the base rpc version of the network api to 1.7
* Remove compute api from scheduler driver
* Remove network manager from compute manager
* Adds SSL support for API server
* Provide creating real unique constraints for columns
* Add version constraint for coverage
* Correct a format string in virt/baremetal/ipmi.py
* Add REST api to manage bare-metal nodes
* Adding REST API to show all availability zones of an region
* Fixed nova-manage argument parsing error
* xenapi: Add cleanup_sm_locks script
* Fix double reboot during resume_state_on_host_boot
* Add support for memory overcommit in live-migration
* Adds conductor support for instance_get_active_by_window_joined
* Make compare_result show the difference in lists
* Don't limit SSH keys generation to 1024 bits
* Ensure service's servicegroup API is created first
* Drop volume API
* Fix for typo in xml API doc sample in nova
* Avoid stuck task_state on snapshot image failure
* ensure failure to inject user files results in startup error
* List servers having non-existent flavor should return empty list
* Add version constraint for cinder
* Remove duplicated tapdev creation code from libvirt VIF
* Move helper APIs for OVS ports into linux_net
* Add 'ovs_interfaceid' to nova network VIF model
* Replace use of mkdtemp with fixtures.TempDir
* Add trust level cache to trusted_filter
* Fix the wrong datatype in task_log table
* Cleanup of extract_opts.py
* Baremetal/utils should not log certain exceptions
* Use setup.py testr to run testr in run_tests.sh
* Fix nova coverage
* PXE driver should rmtree directories it created
* Fix floating ips with external gateway
* Add support for Option Groups in LazyPluggable
* Fix incorrect use of context object
* Unpin testtools
* fix misspellings in logs, comments and tests
* fix mysql race in tests
* Fix get Floating ip pools action name to match with its policy
* Generate coverage even if tests failed
* Allow snapshots of paused and suspended instances
* Update en_US message translations
* Sync latest cfg from oslo-incubator
* Avoid testtools 0.9.25
* Cells: Add support for compute HostAPI()
* Refactor compute_utils to avoid db lookup
* ensure zeros are written out when clearing volumes
* fix service_ref undefined problem
* Add rootwrap filters for password injection with localfs
* fix floating ip test that wasn't running
* Prevent metadata updates until instance is active
* More consistent libvirt XML handling and cleanup
* pick up eventlet backdoor fix from oslo
* Run_as_root to ensure resize2fs succeed for all image backends
* libvirt: Fix typo in configdrive implementation
* Refactor EC2 keypairs exception
* Directly copy a file URL from glance
* Remove restoring soft deleted entries part 2
* Remove restoring soft deleted entries part 1
* Use conductor in the servicegroup db driver
* Add service_update to conductor
* Remove some db calls from db servicegroup driver
* XenAPI: Fix volume detach
* Refactor: extract method: driver_dict_from_config
* Cells: Fix for relaying instance info_cache updates
* Fix wrong quota reservation when deleting resizing instance
* Go back to the original branch after pylint check
* Ignore auto-generated files by lintstack
* Add host to instance_faults table
* Clean up db network db calls for fixed and float
* Remove obsolete baremetal override of MAC addresses
* Fix multi line docstring tests in hacking.py
* PXE driver should not accept empty kernel UUID
* Use common rootwrap from oslo-incubator
* Remove network_host config option
* Better instance fault message when rescheduling
* libvirt: Optimize test_connection and capabilities
* don't allow crs in the code
* enforce server_id can only be uuid or int
* Allow nova to use insecure cinderclient
* Makes sure compute doesn't crash on failed resume
* Fix fallback when Quantum doesn't provide a 'vif_type'
* Move compute node operations to conductor
* correcting for proper use of the word 'an'
* Correcting improper use of the word 'an'
* Save password set through xen agent
* Add encryption method using an ssh public key
* Make resource tracker use conductor for listing instances
* Make resource tracker use conductor for listing compute nodes
* Updates prerequisite packages for fedora
* Expose a get_spice_console RPC API method
* Add a get_spice_console method to nova.virt.ComputeDriver API
* Add nova-spicehtml5proxy helper
* Pull NovaWebSocketProxy class out of nova-novncproxy binary
* Add support for configuring SPICE graphics with libvirt
* Add support for setting up <channel> elements in libvirt config
* Add common config options for SPICE graphics
* Create ports in quantum matching hypervisor MAC addresses
* Make nova-api logs more useful
* Override floating interface on callee side
* Reject user ports that have MACs the hypervisor cannot use
* Remove unused import
* Reduce number of iptable-save restore loops
* Clean up get_instance_id_by_floating_address
* Move migration_get_..._by_host_and_node to conductor
* Make resource tracker use conductor for migration updates
* minor improvements to nova/tests/test_metadata.py
* Cells: Add some cells support to admin_actions extension
* Populate service list with availability zone and correct unit test
* Correct misspelling of fake_service_get_all
* Add 'devname' to nova.network.model.VIF class
* Use testrepository setuptools support
* Cleaning up exception handling
* libvirt: use tap for non-blockdevice images on Xen
* Export the MAC addresses of nodes for bare-metal
* Cells: Add cells API extension
* More HostAPI() cleanup for cells
* Break out a helper function for working with bare metal nodes
* Renames the new os-networks extension
* Define a hypervisor driver method for getting MAC addresses
* enables admin to view instance fault "details"
* Revert "Use testr setuptools commands."
* Revert "Populate service list with availability zone"
* Fix typos in docstring
* Fix problem with ipv6 link-local address(es)
* Adds support for Quantum networking in Hyper-V
* enable hacking.py self tests
* Correct docstring on sizelimit middleware
* sync latest log and lockutils from oslo
* Fix addition of CPU features when running against legacy libvirt
* Fix nova.availability_zones docstring
* Fix uses of service_get_all_compute_by_host
* VMware Compute Driver Rename
* use postgresql INET datatype for storing IPs
* Extract validation and provision code to separate method
* Implement Quantum support for addition and removal of fixed IPs
* Keep self and context out of error notification payload
* Populate service list with availability zone
* Add Compute API validations for block device map
* Cells: Commit resize quota reservations immediately
* Cells: Reduce the create_image call depth for cells
* Clean up compute API image_create
* Fix logic error in periodic task wait code
* Centralize instance directory logic
* Chown doesn't work on mounted vfat
* instances_path is now defined here
* Convert ConfigDriveHelper to being a context manager itself
* Use testr setuptools commands
* Move migration_create() to conductor
* Move network call from compute API to the manager
* Fix incorrect comment, and move a variable close to use
* Make sure reboot_instance uses updated instance
* Cleanup reboot_instance tests
* Fix use of stale instance data in compute manager
* Implements getPasswordData for ec2
* Add service_destroy to conductor
* Make nova.service get service through conductor
* Add service_create to conductor
* Handle waiting for conductor in nova.service
* Allow forcing local conductor
* Make pinging conductor a part of conductor API
* Fix some conductor manager return values
* Handle directory conflicts with html output
* Fix error in NovaBase.save() method
* Skip domains on libvirt errors in get_vcpu_used()
* Fix state sync logic related to the PAUSED VM state
* Remove more unused opts from nova.scheduler.driver
* Fix quota updating when admin deletes common user's instance
* Tests for PXE bare-metal provisioning helper server
* Correct the calculating of disk size when using lvm disk backend
* Adding configdrive to xenapi
* Validated device_name value in block device map
* Fix libvirt resume function call to get_domain_xml
* Make it clearer that network.api.API is nova-network specific
* Access instance as dict, not object in xenapi
* Expand quota logging
* Move logic from os-api-host into compute
* Create a directory for servicegroup drivers
* Move update_instance_info_cache to conductor
* Change ComputerDriver.legacy_nwinfo to raise by default
* Cleanup pyflakes in nova-manage
* Add user/tenant shim to RequestContext
* make runtests -p act more like tox
* fix new N402 errors
* Add host name to log message for _local_delete
* Try out a new nova.conf.sample format
* Regenerate nova.conf.sample
* Make Quantum plugin fill in the 'bridge' name
* Make nova network manager fill in vif_type
* Add some constants to the network model for drivers to use
* Move libvirt VIF XML config into designer.py
* Remove bogus 'unplug' calls from libvirt VIF test
* Fix bash syntax error in run_tests.sh
* Update instance's cell_name in API cell
* Fix init_host checking moved instances
* Fix test cases in integrated.test_multiprocess_api
* Map libvirt error to InstanceNotFound in get_instance_disk_info
* Fixed comment typo
* Added sample tests to FlavorSwap API
* Remove unused baremetal PXE options
* Remove unused opt import in scheduler.driver
* Move global service networking opts to new module
* Move memcached_servers opt into common.memorycache
* Move service_down_time to nova.service
* Move vpn_key_suffix into pipelib
* fix N402 on tools/
* fix N402 for nova-manage
* fix N402 for rest of nova
* fix N402 for nova/c*
* fix N402 for nova/db
* don't clear the database dicts in the tearDown method
* Fixed typos in doc strings
* Enhance wsgi to listen on ipv6 address
* Adds a flag to allow configuring a region
* Fix double reboot issue during soft reboot
* Remove baremetal-compute-pxe.filters
* Fix pyflakes issues in integrated tests
* Adds option to rebuild instance with existing disk
* Move common virt driver options to virt.driver
* Move vpn_image_id to pipelib
* Move enabled_apis option into nova.service
* Move default_instance_type into nova.compute
* Move osapi_compute_unique_server_name_scope to db
* Move api_class options to where they are used
* Move manager options into nova.service
* Move compute_topic into nova.compute.rpcapi
* fix N402 for nova/network
* fix N402 for nova/scheduler
* fix N402 for nova/tests
* Fix N402 for nova/virt
* Fix N402 for nova/api
* New instance_actions and events table, model, and api
* Cope better with out of sync bm data
* Import latest timeutils from oslo-incubator
* Remove availability_zones from service table
* Enable Aggregate based availability zones
* Sync log from oslo-incubator
* Clarify the DBApi object in cells fakes
* Fix lintstack check for multi-patch reviews
* Adds to manager init_host validation for instances location
* Add to libvirt driver instance_on_disk method
* add to driver option to keep disks when instance destroyed
* Fix serialization in impl_zmq
* Added sample tests to FlavorRxtx API
* Refresh instance metadata in-place
* xenapi: Remove dead code, moves, tests
* Fix baremetal VIFDriver
* Adds a new tenant-centric network extension
* CLI for bare-metal database sync
* Move scheduler_topic into nova.scheduler.rpcapi
* Move console_topic into nova.console.rpcapi
* Move network_topic into nova.network.rpcapi
* Move cert_topic into nova.cert.rpcapi
* Move global s3 opts into nova.image.s3
* Move global glance opts into nova.image.glance
* Remove unused osapi_path option
* attach/detach_volume() take instance as a parameter
* fix N401 errors, stop ignoring all N4* errors
* Add api extension to get and reset password
* powervm: Implement snapshot for local volumes
* Add exception handler for previous deleted flavor
* Add NoopQuotaDriver
* Conductor instance_get_all replaces _by_filters
* Support cinderclient http retries
* Sync rpc and notifier from oslo-incubator
* PXE bare-metal provisioning helper server
* Added sample tests to QuotaClasses API
* Changed 'OpenStack, LLC' message to 'OpenStack Foundation'
* Convert short doc strings to be on one line
* Get instances from conductor in init_host
* Invert test stream capture logic for debugging
* Upgrade WebOb to 1.2.3
* Make WebOb version specification more flexible
* Refactor work with TaskLog in sqlalchemy.api
* Check admin context in bm_interface_get_all()
* Provide a PXE NodeDriver for the Baremetal driver
* Handle compute node records with no timestamp
* config_drive is missing in xml deserializer
* Imported Translations from Transifex
* NovaBase.delete() rename to NovaBase.soft_delete()
* livbirt: have a single source of console log file naming
* Remove the global DATA
* Add ping to conductor
* Add two tests for resize action in ServerActionsControllerTest
* Move service_get_all operations to conductor
* Move migration_get_unconfirmed_by_dest_compute to conductor
* Move vol_usage methods to conductor
* Add test for resize server in ComputeAPITestCase
* Allow pinging own float when using fixed gateway
* Use full instance in virt driver volume usage
* Imported Translations from Transifex
* Refactor periodic tasks
* Cells: Add periodic instance healing
* Timeout individual tests after one minute
* Fix regression in RetryFilter
* Cells: Add the main code
* Adding two snapshot related task states
* update version urls to working v2 urls
* Add helper methods to nova.paths
* Move global path opts in nova.paths
* Remove unused aws access key opts
* Move fake_network opt to nova.network.manager
* Allow larger encrypted password posts to metadata
* Move instance_type_get() to conductor
* Move instance_info_cache_delete() to conductor
* Move instance_destroy() to conductor
* Move instance_get_*() to conductor
* Sync timeutils changes from Oslo
* Remove system_metadata db calls from compute manager
* Move block_device_mapping destroy operations to conductor
* Clean up setting of control_exchange default
* fix floating-ip in multihost case
* Invalid EC2 ids should make the entire request fail
* improve libguestfs exception handling
* fix resize of unpartitioned images with libguestfs
* xenapi: Avoid hotplugging volumes on resize
* Remove unused VMWare VIF driver abstraction
* Delete pointless nova.virt.VIFDriver class
* Clarify & fix docs for nova-novncproxy
* Removes unused imports
* Imported Translations from Transifex
* Fix spelling mistakes in nova.virt
* Cells: Add cells commands to nova-manage
* Add remaining get_backdoor_port() rpc calls to coverage
* Fix race in resource tracker
* Move block_device_mapping get operations to conductor
* Move block_device_mapping update operations to conductor
* Improve baremetal driver error handling
* Add unit test to update server metadata
* Add unit test to revert resize server action
* Add compute build/resize errors to instance faults
* Add unit test for too long metadata for server rebuild action
* Adds os-volume_attachments 'volume_id' validation
* Raise BadRequest when updating 'personality'
* Imported Translations from Transifex
* Ensure that Quantum uses configured fixed IP
* Add conditions in compute APIRouter
* Imported Translations from Transifex
* CRUD on flavor extra spec extension should be admin-only
* Report failures to mount in localfs correctly
* Add API sample tests to FixedIPs extension
* baremetal power driver takes **kwargs
* Implement IPMI sub-driver for baremetal compute
* Fix tests/baremetal/test_driver.py
* Move baremetal options to [BAREMETAL] OptGroup
* Adds test for HTTPUnprocessableEntity when rebooting
* Make sure the loadables path is the absolute path
* Fix bug and remove update lock in db.instance_test_and_set()
* Periodic update of DNS entries
* Fix error in test_get_all_by_multiple_options_at_once()
* Remove session.flush() and session.query() monkey patching
* Update nova-cert man page
* Allow new XML API sample file generation
* Remove unused imports
* spelling in test_migrations
* Imported Translations from Transifex
* Check for image_meta in libvirt.driver.spawn
* Adds test for 'itemNotFound' errors in 'Delete server'
* Remove improper NotFound except block in list servers
* Spelling: Compatability=>Compatibility
* Imported Translations from Transifex
* Ensure we add a new line when appending to rc.local
* Verify the disk file exists before running qemu-img on it
* Remove lxc attaching/detaching of volumes
* Teardown container rootfs in host namespace for lxc
* Fix cloudpipe instances query
* Ensure datetimes can be properly serialized
* Imported Translations from Transifex
* Database metadata performance optimizations
* db.network_delete_safe() method performance optimization
* db.security_group_rule_destroy() method performance optimization
* Import missing exception
* Ignore double messages to associate the same ip
* Imported Translations from Transifex
* Database reservations methods performance optimization
* Using query.soft_delete() method insead of soft deleting by hand
* Create and use subclass of sqlalchemy Query with soft_delete() method
* Remove inconsistent usage of variable from hyperv
* Log last compute error when rescheduling
* Removed unused imports
* Make libvirt driver default to virtio for KVM/QEMU NICs
* Refactor libvirt VIF classes to reduce duplicate code
* Makes sure to call crypto scripts with abspath
* Enable nova exception format checking in tests
* Eliminate race conditions in floating association
* Imported Translations from Transifex
* Provide a configdrive helper which uses contextlib
* Add extension to allow hiding of addresses
* Add html reports to report action in coverage extension
* Add API samples tests for the coverage extension
* Fix _find_ports() for when backdoor_port is None
* Parameterize database connection in test.py
* fixing the typo of the error message from nbd
* add 'random_seed' entry to instance metadata
* Baremetal VIF and Volume sub-drivers
* Fix revert resize failure with disk.local not found
* Fix a test isolation error in compute.test_compute
* New Baremetal provisioning framework
* Move baremetal database tests to fixtures
* address uuid overwriting
* Add get_backdoor_port to cert
* Add get_backdoor_port to scheduler
* Add get_backdoor_port to console
* Make libvirt driver.listinstances return defined
* Add get_backdoor_port to consoleauth
* Export custom SMBIOS info to QEMU/KVM guests
* Make configdrive.py use version.product_string()
* Allow loading of product/vendor/package info from external file
* Remove obsolete VCS version info completely
* Trap exception when trying to write csr
* Define a product, vendor & package strings in version.py
* Extract image metadata from Cinder
* Add expected exception to aggregate_metadata_delete()
* Move aggregate_get() to conductor
* Add .testrepository/ directory to gitginore
* Make load_network_driver load passed in driver
* Fix race condition of resize confirmation
* libvirt: Make vif_driver.plug() returns None
* Add an iptables mangle rule per-bridge for DHCP
* Make NBD retry logic more generic, add retry to loop
* Reliably include OS type in ephemeral filenames
* Allow specification of libvirt guest interface backend driver
* Fix "image_meta" data passed in libvirt test case
* Fix typos in vncserver_listen config param help description
* Traceback when user doesn't have permission
* removed duplicate function definitions
* network/api add_fixed_ip correctly passes uuid
* Import cfg module in extract_opts.py
* Raise old exception instance instead of new one
* Update exceptions to pass correct kwargs
* Add option to make exception format errors fatal
* allow for the ability to run partial coverage
* Remove fake_tests opt from test.py
* Execute pygrub using nova-rootwrap in xenapi
* Add DBDuplicateEntry exception for unique constraint violations
* Fix stack trace on incorrect nova-manage args
* Use service fixture in DB servicegroup tests
* fix instance rescue without cmdline params in xml.rescue
* Added sample tests to FlavorDisabled API
* Reset the IPv6 API backend when resetting the conf stack
* libvirt: Skip intermediate base files with qcow2
* fix test_nbd using stubs
* Imported Translations from Transifex
* Properly remove the time override in quota tests
* Fix API samples generation
* Move TimeOverride to the general reusable-test-helper place
* Added conf support for security groups
* Add accounting for orphans to resource tracker
* Add more association support to network API
* Remove the WillNotSchedule exception
* Replace fixtures.DetailStream with fixtures.StringStream
* Move network_driver into new nova.network.driver
* Move DNS manager options into network.manager
* Refactor xvp console
* Move agent_build_get_by_triple to conductor
* Move provider_fw_rule_get_all to conductor
* Move security_group operations in VirtAPI to conductor
* Retry NBD device allocation
* Use testr to run nova unittests
* Add a developer trap for api samples
* Update command on devref doc
* Fixed deleting instance booted from invalid vol
* Add general mechanism for testing api coverage
* Add the missing replacement text in devref doc
* Allow xenapi to work with empty image metadata
* Imported Translations from Transifex
* Fix for broken switch for config_drive
* Fix use of osapi_compute_extension option in api_samples
* Remove sleep in test_consoleauth
* Fix errors in used_limits extension
* Fix poll_rescued_instances periodic task
* Add syslogging to nova-rootwrap
* Clean up run_tests.sh
* Ensure that sql_dbpool_enable is a boolean value
* Stop nbd leaks, remove pid race
* Fixes KeyError: 'sr_uuid' when booting from volume on xenapi
* Add VirtAPI tests
* Move remaining aggregate operations to conductor
* remove session param from instance_get
* remove session param from instance_get_by_uuid
* Use nova.test.TestCase as the base test class
* Ensure datetimes can be properly serialized
* Fixes string formatting error
* Adds API Sample tests for DiskConfig extension
* Fix for correctly parsing snapshot uuid in ec2api
* Autodetect nbd devices
* Add Jian Wen to .mailmap
* Move metadata_{host,port} to network.linux_net
* Move API extension opts to api.openstack.compute
* Move osapi_max_limit into api.openstack.common
* Move link_prefix options into api.openstack.common
* Move some opts into nova.utils
* Properly scope password options
* Remove the deprecated quantum v1 code and directory
* add and removed fixed ip now refresh cache
* Implement an XML matcher
* Add support for parsing the <uuid> from libvirt host capabilities
* Add support for libvirt domain <smbios> XML config
* Add support for libvirt domain <sysinfo> XML config
* Add coverage extension to nova API
* Allow rpc-silent FloatingIP exceptions in n-net
* Allow conductor exceptions to pass over RPC silently
* Don't leak info from libvirt LVM backed instances
* Add get_backdoor_port to nova-conductor
* Properly scope isolated hosts config opts
* Move monkey patch config opts into nova.utils
* Move zombie_instance_updated_at_window option
* Move some options into nova.image.glance
* Move cache_images to nova.virt.xenapi.vm_utils
* Move api_rate_limit and auth_strategy to nova.api
* Move api_paste_config option into nova.wsgi
* Port to argparse based cfg
* Cleanup the test DNS managers
* Move all temporary files into a single /tmp subdir
* Modified sample tests to FlavorExtraData API
* Fix KeyError of log message in virt/libvirt/utils.py
* Allows an instance to post encrypted password
* Make nova/virt use aggregate['metadetails']
* Revert "Simplify how ephemeral disks are created and named."
* Fix bw_usage_update issue with conductor
* Correctly init XenAPIDriver in vm_vdi_cleaner.py
* Set instance_ref['node'] in _set_instance_host_and_node
* Consider reserved count in os-user-limits extension
* Make DNS drivers inherit interface
* Map cinder snapshot statuses to ec2
* i18n raise Exception messages
* Set default DNS driver to No-op
* Access DB values as dict not as attributes. Part 4
* Use conductor for bw_usage operations
* libvirt: enable apic setting for Xen or KVM guest
* Improve virt/disk/mount/nbd test coverage
* Add NFS to the libvirt volume driver list
* Use admin user to read Quantum port
* Add vif_type to the VIF model
* Make the nbd mounter respect CONF.max_nbd_devices
* Imported Translations from Transifex
* Raise NotImplementedError in dns_driver.DNSDriver
* Unpin lxml requirements
* Added sample tests to FlavorManage API
* Use fixtures library for nova test fixtures
* Catch ProcessExecutionError when building config drives
* Fix fname concurrency tests
* Imported Translations from Transifex
* Make ignore_hosts and force_hosts work again
* Run test objectstore server on arbitrary free port
* Fix network manager ipv6 tests
* Prevent creation of extraneous resource trackers
* Remove unused bridge interfaces
* Use conductor for migration_get()
* Reset node to source in finish_revert_resize()
* Simplify how ephemeral disks are created and named
* Order instance faults by created_at and id
* Sync RPC logging-related bits from oslo
* Fix bugs in test_migrations.py
* Fix regression allowing quotas to be applied to projects
* Improve nova-manage usability
* Add new cliutils code from oslo-incubator
* Update tools/flakes to work with pydoc
* Fix pep8 exclude logic for 1.3.3
* Avoid vm instance shutdown when power state is NOSTATE
* Fix handling of unimplemented host actions
* Fix positional arg swallow decorator
* Fix minidns delete_entry to work for hostname with mixed case chars
* powervm: Refactored run_command for better naming
* Sync latest openstack.common.rpc
* Ensure prep_resize arguments can be serialized
* Add host to get_backdoor_port() for network api
* Add agent build API support for list/create/delete/modify agent build
* Added sample tests to extended status API
* Imported Translations from Transifex
* Make policy.json not filesystem location specific
* Use conductor for resourcetracker instance_update
* network managers: Pass elevated cxtx to update_dhcp
* Volume backed live migration w/o shared storage
* Add pyflakes option to tox
* Adds API Sample tests for Quotas extension
* Boot from volume without image supplied
* Implements volume usage metering
* Configurable exec_dirs to find rootwrap commands
* Allow newer boto library versions
* Add notifications when libvirtd goes down
* Make update_service_capabilities() accept a list of capabilities
* update mailmap to add my perferred mail
* Fix test suite to use MiniDNS
* Add support for new WMI iSCSI initiator API
* Added sample tests to deferred delete API
* On confirm_resize, update correct resource tracker
* Renaming xml test class in sample tests of consoles API
* remove session param from certificate_get
* improve sessions for key_pair_(create,destroy)
* powervm: add DiskAdapter for local volumes
* Access DB values as dict not as attributes. Part 3
* Patch fake_libvirt_utils with fixtures.MonkeyPatch
* Open test xenapi/vm_rrd.xml relative to tests
* Reset notifier_api before each test
* Reset volume_api before cinder cloud tests
* Fix rpc control_exchange regression
* Add generic customization hooks via decorator
* add metadata support for overlapping networks
* Split out part of compute's init_host
* Use elevated cxtx in resource_tracker.resize_claim
* Fix test_migrations for postgres
* Add vpn ip/port setting support for CloudPipe
* Access DB values as dict not as attributes. Part 2
* Enable debug in run_tests using pdb
* Add POWERVM_STARTING state to powervm driver
* Fix test_inject_admin_password for OSX
* Multi host DHCP networking and local DNS resolving
* use file instead of tap for non-blockdevice images on Xen
* use libvirt getInfo() to receive number of physical CPUs
* Don't run the periodic task if ticks_between_runs is below zero
* Fix args to AggregateError exception
* Fix typo in inherit_properties_from_image
* Access DB values as dict not as attributes
* Fix KeyError of log message in compute/api.py
* Fix import problem in test_virt_disk_vfs_localfs
* Remove start_guests_on_host_boot config option
* Add aggregate_host_add and _delete to conductor
* Imported Translations from Transifex
* Call plug_vifs() for all instances in init_host
* Make compute manager use conductor for instance_gets
* Fixes HyperV compute "resume" tests
* Convert datetimes for conductor instance_update
* Update migration so it supports PostgreSQL
* Include 'hosts' and 'metadetails' in aggregate
* Verify doc/api_samples files along with the templates
* Remove default_image config option
* Move ec2 config opts to nova.api.ec2.cloud
* Move imagecache code from nova.virt.libvirt.utils
* Use flags() helper method to override config in tests
* RetryFilter checks 'node' as well as 'host'
* Make resize and multi-node work properly together
* Migration model update for multi-node resize fix
* Add version to conductor migration_update message
* Validate rxtx_factor as a float
* Display errors when running nosetests
* Respect the base_dir_name flag in imagebackend
* Add exceptions to baremetal/db/api
* Clean up unused methods in scheduler/driver
* Provide better error message for aggregate-create
* Imported Translations from Transifex
* Allow multi_host compute nodes to share dhcp ip
* Add blank nova/virt/baremetal/__init__.py
* Add migration_update to conductor
* Remove unnecessary topic argument
* Add pluggable ServiceGroup monitoring APIs
* Add SSL support to utils.generate_glance_url()
* Add eventlet db_pool use for mysql
* Make compute manager use nova-conductor for instance_update
* Missing instance_uuid in floating_ip notifications
* Make nova-dhcpbridge use CONFIG_FILE over FLAGFILE
* Rename instance_info_cache unique key constraints
* Cleanup compute multi-node assignment of node
* Imported Translations from Transifex
* maint: remove an unused import from libvirt.utils
* Encode consoleauth token in utf-8 to make it a str
* nova-dhcpbridge should require the FLAGFILE is set
* Added cpu_info report to HyperV Compute driver
* Remove stale flags unit tests
* Truncate large console logs in libvirt
* Move global fixture setup into nova/test.py
* Complete API samples for Hosts extension
* Fix HostDeserializer to enable multiple line xml
* adjust rootwrap filters for recent file injection changes
* Don't hard code the xen hvmloader path
* Don't update arch twice when create server
* remove db access in xen driver
* Imported Translations from Transifex
* Move compute_driver into nova.virt.driver
* Re-organize compute opts a bit
* Move compute opts from nova.config
* Add a CONTRIBUTING file
* Compute doesn't set the 'host' field in instance
* Xenapi: Don't resize down if not auto_disk_config
* Cells: Re-add DB model and calls
* Use more specific SecurityGroupHandler calls
* Fix wait_for_deleted function in SmokeTests
* Wrap log messages with _()
* Add methods to Host operations to fake hypervisor
* Move sql options to nova.db.sqlalchemy.session
* Add debug logging to disk mount modules
* Remove the libguestfs disk mount API implementation
* Remove img_handlers config parameter usage
* Convert file injection code to use the VFS APIs
* Introduce a VFS implementation backed by the libguestfs APIs
* Introduce a VFS implementation mapped to the host filesystem
* Adds API for bulk creation/deletion of floating IPs
* Remove obsolete config drive init.d example
* Imported Translations from Transifex
* Rename sql_pool_size to sql_max_pool_size
* Detect shared storage; handle base cleanup better
* Allow VMs to be resumed after a hypervisor reboot
* Fix non-primitive uses of instance in compute/manager
* Remove extra space in exception
* Adds missing index migrations by instance/status
* Convert migrations.instance_uuid to String(36)
* Add missing binary
* Change all tenants servers listing as policy-based
* Fixes a bug in get_info in the Hyper-V Driver
* refactor: extract method: connect_volume
* Handle instances not being found in EC2 API responses
* Pin pep8 to 1.3.3
* Return an error response if the specified flavor does not exists. (v4)
* Send block device mappings to rebuild_instance
* Move db lookup for block device mappings
* Use CONF.import_opt() for nova.config opts
* Imported Translations from Transifex
* Remove nova.config.CONF
* Add keystoneclient to pip-requires
* Pass rpc connection to pre_start_hook
* Fix typo: hpervisor=> hypervisor
* Fix reversed args to call to _reschedule
* Add the beginnings of the nova-conductor service
* remove old baremetal driver
* Remove useless function quota_usage_create
* Fix calls to private method in linux_net
* Drop unused PostgreSQL sequences from Folsom
* Compact pre-Grizzly database migrations
* Fix os-hosts extension can't return xml response correctly
* Set node_availability_zone in XenAPIAggregateTestCase
* Ignore editor backup files
* Imported Translations from Transifex
* Remove nova.flags
* Remove FLAGS
* Make fping extension use CONF
* Use disk image path to setup lxc container
* Use the auth_token middleware from keystoneclient
* improve session handling around instance_ methods
* add index to fixed_ips
* add instance_type_extra_specs to instances
* Change a toplevel function comment to a docstring
* Ensure cat process is terminated
* Add some sqlalchemy tweakables
* Fixes an error reporting bug on Hyper-V
* update api_samples add os-server-start-stop
* update api_samples add os-services module
* Switch to using eventlet_backdoor from oslo
* Sync eventlet_backdoor from oslo
* Added sample tests to consoles API
* Fix use of 'volume' variable name
* Ditch unused import and variable
* Make ec2_instance_create db method consistant across db apis
* Adds documentation for Hyper-V testing
* Adds support for ConfigDriveV2 in Hyper-V
* don't explode if a 413 didn't set Retry-After
* Fix a couple uses of FLAGS
* Remove nova.flags imports from scheduler code
* Remove some unused imports from compute/*
* Remove importing of flags from compute/*
* Remove nova.flags imports from bin/*
* Move nova shared config options to nova.config
* Fix use_single_default_gateway
* Update api_samples README.rst to use tox
* Do not alias stdlib uuid module as uuidutils, since nova has uuidutils
* Allow group='foo' in self.flags() for tests
* updated api_samples with real hypervisor_hostname
* Issue a hard shutdown if clean fails on resize up
* Introduce a VFS api abstraction for manipulating disk images
* Fix network RPC API backwards compat
* create_db_entry_for_new_instance did not call sgh for default
* Add support for backdoor_port to be returned with a rpc call
* Refactor scheduling filters
* Unpin amqplib and kombu requirements
* Add module for loading specific classes
* Make sure instance data is always refreshed
* Move all mount classes into a subdirectory
* Add support for resizes to resource tracker
* Fixes create instance *without* config drive test
* Update db entry before upate the DHCP host file
* Remove gen_uuid()
* Enhance compute capability filter to check multi-level
* API extension for fpinging instances
* Allow controller extensions to extend update/show
* Isolate tests from the environment variable http_proxy
* Handle image cache hashing on shared storage
* fix flag type define error
* Simplify libvirt volume testing code
* Migrate floating ip addresses in multi_host live_migration
* Add DB query to get in-progress migrations
* Try hard shutdown if clean fails on resize down
* Restore self.test_instance at LibvirtConnTestCase.setUp()
* Fixes usage of migrate_instance_start
* added getter methods for quantumv2 api
* fix LVM backed VM logial volumes can't be deleted
* Clean up __main__ execution from two tests for consistency
* Imported Translations from Transifex
* Update uuidutils from openstack common
* Remove volume.driver and volume.iscsi
* Use base image for rescue instance
* Make xenapi shutdown mode explicit
* Fix a bug in XenAPISession's use of virtapi
* Ban db import from nova/virt
* Update vol mount smoketest to wait for volume
* Add missing webob to exc
* Add missing exception NetworkDuplicated
* Fix misuse of exists()
* Rename config to vconfig
* Move agent_build_get_by_triple to VirtAPI
* Fix _setup_routes() signature in APIRouter
* Move libvirt specific cgroups setup code out of nova.virt.disk.api
* make libvirt with Xen more workable
* script for configuring a vif in Xen in non-bridged mode
* Upgrade pylint version to 0.26.0
* Removes fixed_ip_get_network
* improve session handling around virtual_interfaces
* improve sessions for reservation
* improve session handling around quotas
* Remove custom test assertions
* Add nova option osapi_compute_unique_server_name_scope
* Add REST API support for list/enable/disable nova services
* Switch from FLAGS to CONF in nova.compute
* Switch from FLAGS to CONF in tests
* Get rid of pylint E0203 in filter_scheduler.py
* Updated scheduler and compute for multiple capabilities
* Switch from FLAGS to CONF in nova.db
* Removed two unused imports
* Remove unused functions
* Fixes a bug in api.metadata.base.lookup() on Windows
* Fixes a bug in nova.utils, due to Windows compatibility issues
* improve session handling of dnsdomain_list
* Make tox.ini run pep8/hacking checks on bin
* Fix import ordering in /bin scripts
* add missing opts to test_db_api.py
* clean up dnsdomain_unregister
* Make utils.mkfs() set label when fs=swap
* Another case of dictionary access
* Remove generic topic support from filter scheduler
* Clarify server_name, hostname, host
* Refactor scheduling weights
* update nova.conf.sample
* Check instance_type in compute capability filter
* Sync latest code from oslo-incubator
* Adds REST API support for Fixed IPs
* Added separate bare-metal MySQL DB
* Added bare-metal host manager
* Remove unused volume exceptions
* Adds a conf option for custom configdrive mkisofs
* Fixed HyperV to get disk stats of instances drive
* powervm: failed spawn should raise exception
* Enable Quantum linux bridge VIF driver to use "bridge" type
* Remove nova-volume DB
* make diagnostics workable for libvirt with Xen
* Avoid unnecessary system_metadata db lookup
* Make instance_system_metadata load with instance
* Add some xenapi Bittorrent tests
* Move security groups and firewall ops to VirtAPI
* Move host aggregate operations to VirtAPI
* Simplify topic handling in network rpcapi
* Sync rpc from openstack-common
* Send instance_type to resize_instance
* Remove instance_type db lookup in prep_resize
* Send all aggregate data to remove_aggregate_host
* Fix incorrect LOG.error usage in _compare_cpu
* Limit formatting routes when adding resources
* Removes unnecessary db query for instance type
* Fix verification in test_api_samples.py
* Yield in between hash runs for the image cache manager
* Remove unused function require_instance_exists
* Refactor resource tracker claims and test logic
* Remove out-of-date comment
* Make HostManager.get_all_host_states() return an iterator
* Switch from FLAGS to CONF in nova.virt
* 'BackupCreate' rotation parameter >= 0
* Corrects usage of db.api.network_get
* Switch from FLAGS to CONF in nova.console
* Map NotAuthorized to 403 in floating ips extension
* Decouple EC2 API from using instance id
* libvirt: Regenerates xml instead of using on-disk
* Imported Translations from Transifex
* Fix to include error message in instance faults
* Include hostname in notification payloads
* Fix quota updating during soft delete and restore
* Fix warnings found with pyflakes
* make utils.mkfs() more general
* Fixes snapshot instance failure on libvirt
* Make ComputeDrivers send hypervisor_hostname
* Fixed instance deletion issue from Nova API
* De-duplicate option: console_public_hostname
* Don't verify image hashes if checksumming is disabled
* Imported Translations from Transifex
* Look up stuck-in-rebooting instances in manager
* Use chance scheduler in EC2 tests
* Send all aggregate data to add_aggregate_host
* Send all migration data to finish_revert_resize
* Send all migration data to revert_resize
* Fix migrations when not using multi-host network
* Fix bandwidth polling exception
* Fixes volume attach issue on Hyper-V
* Shorten self.compute.resource_tracker in test_compute.py
* Cleanup nova.db.sqlalchemy.api import
* Use uuidutils.is_uuid_like for uuid validation
* Add uuidutils module
* Imported Translations from Transifex
* Switch from FLAGS to CONF in nova.scheduler
* Switch from FLAGS to CONF in nova.network
* Switch from FLAGS to CONF in misc modules
* Switch from FLAGS to CONF in nova.api
* Switch from FLAGS to CONF in bin
* Remove flags.DECLARE
* Move parse_args to nova.config
* Forbid resizing instance to deleted instance types
* Imported Translations from Transifex
* Fix unused variables and wrong indent in test_compute
* Remove unnecessary db call from xenapi/vmops
* xenapi: place boot lock when doing soft delete
* Detangle soft delete and power off
* Fix signing_dir option for auth_token middleware
* Fix no attribute 'STD_OUT_HANDLE' on windows
* Use elevated context in disassociate_floating_ip
* Remove db.instance_get* from nova/virt
* sync deprecated log method from openstack-common
* move python-cinderclient to pip-requires
* Tiny resource tracker cleanup
* Fix Quantum v2 API method signatures
* add doc to standardize session usage
* improve sessions around floating_ip_get_by_address
* Bump the base rpc version of the network api
* Eliminates simultaneous schedule race
* Introduce VirtAPI to nova/virt
* Add some hooks for managers when service starts
* Fix backwards compat of rpc to compute manager
* xenapi: Make agent optional
* Add xenapi host_maintenance_mode() test
* refactor: extract _attach_mapped_block_devices
* Make bdms primitive in rpcapi.terminate_instance
* Ability to specify a host restricted to admin
* Improve EC2 describe_security_groups performance
* Increased MAC address range to reduce conflicts
* Move to a more canonicalized output from qemu-img info
* Read deleted flavors when using to_xml()
* Fix copy-paste bug in block_device_info_generation
* Remove nova-volume scheduling support
* Remove duplicate api_paste_config setting
* Fixes hypervisor based image filtering on Hyper-V
* make QuantumV2 support requested nic ordering
* Add rxtx_factor to network migration logic
* Add scheduler retries for prep_resize operations
* Add call to reset quota usage
* Make session.py reusable
* Remove redundant code from PowerVM driver
* Force earlier version of sqlalchemy
* refactor: extract method vm_ref_or_raise
* Use env to set environ when starting dnsmasq
* pep8 fixes for nova-manage
* Fix VM deletion from down compute node
* Remove database usage from libvirt check_can_live_migrate_destination
* Clean up xenapi VM records on failed disk attaches
* Remove nose detailed error reporting
* Validate is-public parameter to flavor creation
* refactor: extract _terminate_volume_connections
* improve sessions around compute_node_*
* Fix typo in xenapi/host.py
* Remove extra print line in hacking.py
* Ensures compute_driver flag can be used by bdm
* Add call to trigger_instance[add/remove]_security_group_refresh quantum
* Validates Timestamp or Expiry time in EC2 requests
* Add API samples to Admin Actions
* Add live migration helper methods to fake hypervisor driver
* Use testtools as the base testcase class
* Clean up quantumv2.get_client
* Fix getattr usage
* Imported Translations from Transifex
* removes the nova-volume code from nova
* Don't elevate context when calling run_instance
* remove session parameter from fixed_ip_get
* Make instance_get_all() not require admin context
* Fix compute tests abusing admin context
* Fix use of elevated context for resize methods
* Fix check for memory_mb
* Imported Translations from Transifex
* Fix nova-network MAC collision logic
* Fix rpcapi version for new methods
* Remove useless return
* Change hacking.py N306 to use logical_lines
* Add missing live migration methods to ComputeDriver base class
* Fix hacking.py naivete regarding lines that look like imports
* details the reboot behavior that a virt driver should follow
* xenapi: refactor: Agent class
* Send usage event on revert_resize
* Fix config-file overrides for nova-dhcpbridge
* Make nova-rootwrap optional
* Remove duplicated definition of is_loaded()
* Let scheduler know services' capabilities at startup
* fetch_images() method no more needed
* Fix hardcoded topic strings with constants
* Save exceptions earlier in finish_resize
* Correct _extract_query_params in image.glance
* Fix Broken XML Namespace Handling
* More robust checking for empty requested_networks
* Imported Translations from Transifex
* Rehydrate NetworkInfo in reboot_instance()
* Update common
* Use cat instead of sleep for rootwrap test
* Addtional 2 packages for dev environment on ubuntu
* Let VlanManager keep network's DNS settings
* Improve the performance of quantum detection
* Support for nova client list hosts with specific zone
* Remove unused imports in setup.py
* Fixes fake for testing without qemu-img
* libvirt: persist volume attachments into config
* Extend IPv6 subnets to /64 if network_size is set smaller than /64
* Send full migration data to finish_resize
* Send full migration to confirm_resize
* Send full migration to resize_instance
* Migrate to fileutils and lockutils
* update sample for common logging
* Add availability zone extension to API samples test
* Refactor: config drive related functions
* Fix live migration volume assignment
* Remove unused table options dicts
* Add better log line for undefined compute_driver
* Remove database usage from libvirt imagecache module
* Return empty list when listing servers with bad status value
* Consistent Rollback for instance creation failures
* Refactor: move find_guest_agent to xenapi.agent
* Fix Incorrect Exception when metadata is over 255 characters
* Speed up volume and routing tests
* Speed up api.openstack.compute.contrib tests
* Allow loading only selected extensions
* Migrate network of an instance
* Don't require quantumclient when running nova-api
* Handle the case where we encounter a snap shot correctly
* Remove deprecated root_helper config
* More specific exception handling in migration 091
* Add virt driver capabilities definition
* Remove is_admin_context from sqlalchemy.api
* Remove duplicate methods from network/rpcapi.py
* SanISCSIDriver SSH execution fixes
* Fix bad Log statement in nova-manage
* Move mkfs from libvirt.utils to utils
* Fixes bug Snapshotting LXC instance fails
* Fix bug in a test for the scheduler DiskFilter
* Remove mountpoint from parse_volume_info
* limit the usage of connection_info
* Sync with latest version of openstack.common.timeutils
* nova-compute sends its capabilities to schedulers ASAP
* Enable custom eventlet.wsgi.server log_format
* Fix the fail-on-zero-tests case so that it is tolerant of no output
* add port support when QuantumV2 subclass is used
* Add trove classifiers for PyPI
* Fix and enable pep8 E502, E712
* Declare vpn client option in pipelib
* Fix nova-volume-usage-audit
* Fix error on invalid delete_on_termination value
* Add Server diagnostics extension api samples
* Add meaningful server diagnostic information to fake hypervisor
* Use instance_exists to check existence
* Fix nova-volume-usage-audit
* Imported Translations from Transifex
* Avoid leaking BDMs for deleted instances
* Deallocate network if instance is deleted in spawn
* Create Flavors without Optional Arguments
* Update policies
* Add DNS records on IP allocation in VlanManager
* update kwargs with args in wrap_instance_fault
* Remove ComputeDriver.update_host_status()
* Do not call directly vmops.attach_volume
* xenapi: fix bfv behavior when SR is not attached
* Use consoleauth rpcapi in nova-novncproxy
* Change install_venv to use setup.py develop
* Fixes syntax error in nova.tools.esx.guest_tools.py
* Allow local rbd user and secret_uuid configuration
* Set host prior to allocating network information
* Remove db access for block devices and network info on reboot
* Remove db access for block devices on terminate_instance
* Check parameter 'marker' before make request to glance
* Imported Translations from Transifex
* Internationalize nova-manage
* Imported Translations from Transifex
* Fixes live_migration missing migrate_data parameter in Hyper-V driver
* handles empty dhcp_domain with hostname in metadata
* xenapi: Tag volumes in boot from volume case
* Stops compute api import at import time
* Fix imports in openstack compute tests
* Make run_tests.sh fail if no tests are actually run
* Implement snapshots for raw backend
* Used instance uuid rather than id in remove-fixed-ip
* Migrate DHCP host info during resize
* read_deleted snapshot and volume id mappings
* Make sure sleep can be found
* Pass correct task_state on snapshot
* Update run_tests.sh pep8 ignore list for pep8 1.2
* Clean up imports in test_servers
* Revert "Tell SQLite to enforce foreign keys."
* Add api samples to simple tenant usage extension
* Avoid RPC calls while holding iptables lock
* Add util for image conversion
* Add util for disk type retrieval
* Fixes test_libvirtr spawn_with_network_info test
* Remove unneeded temp variable
* Add version to network rpc API
* Remove cast_to_network from scheduler
* Tell SQLite to enforce foreign keys
* Use paramiko.AutoAddPolicy for the smoketests
* nova-manage doesn't validate key to update the quota
* Dis-associate an auto-assigned floating IP should return proper warning
* Proxy floating IP calls to quantum
* Handle invalid xml request to return BadRequest
* Add api-samples to Used limits extension
* handle IPv6 race condition due to hairpin mode
* Imported Translations from Transifex
* XenAPI should only snapshot root disk
* Clarify trusted_filter conf options
* Fix pep8 error in bin/nova-manage
* Set instance host field after resource claim
* powervm: add polling timeout for LPAR stop command
* Drop claim timeouts from resource tracker
* Update kernel_id and ramdisk_id while rebuilding instance
* Add Multiple Create extension to API sample tests
* Fix typo in policy docstring
* Fix reserve_block_device_name while attach volume
* Always use bdm in instance_block_mapping on Xen
* Centralize sent_meta definition
* Move snapshot image property inheritance
* Set read_deleted='yes' for instance_id_mappings
* Fix XML response for return_reservation_id
* Stop network.api import on network import
* libvirt: ignore deleted domain while get block dev
* xenapi: Refactor snapshots during resize
* powervm: remove broken instance filtering
* Add ability to download images via BitTorrent
* powervm: exception handling improvements
* Return proper error messages while associating floating IP
* Create util for root device path retrieval
* Remove dependency on python-ldap for tests
* Add api samples to Certificates extension
* Add nova-cert service to integrated_helpers
* Compare lists in api samples against all matches
* ip_protocol for ec2 security groups
* Remove unneeded lines from aggregates extension API sample tests
* Remove deprecated Folsom code: config convert
* Make resource tracker uses faster DB query
* Remove deprecated Folsom code: bandwith_poll_interval
* Add TestCase.stub_module to make stubbing modules easier
* Imported Translations from Transifex
* Update tools hacking for pep8 1.2 and beyond
* Remove outdated moduleauthor tags
* remove deprecated connection_type flag
* Add aggregates extension to API samples test
* Update RPM SPEC to include new bandwidth plugin
* Remove TestCase.assertNotRaises
* Imported Translations from Transifex
* Imported Translations from Transifex
* Use self.flags() instead of manipulating FLAGS by hand
* Use test.TestCase provided self.mox and self.stubs
* Remove unnecessary setUp, tearDown and __init__ in tests
* xenapi: implement resume_state_on_host_boot
* Revert "Add full test environment."
* Synchronize docstring with actual implementation
* Num instances scheduler filter
* Add api samples to cloudpipe extension
* Fix CloudPipe extension XML serialization
* Max I/O ops per host scheduler filter
* libvirt: continue detach if instance not found
* libvirt: allows attach and detach from all domains
* Fixes csv list required for qemu-img create
* Added compute node stats to HostState
* libvirt: Improve the idempotency of iscsi detach
* Pass block_device_info to destroy in revert_resize
* Enable list with no dict objects to be sorted in api samples
* Fixes error message for flavor-create duplicate ID
* Loosen anyjson dependency to avoid clash with ceilometer
* xenapi: make it easier to recover from failed migrations
* Remove unnecessary check if migration_ref is not None
* Bump the version of SQLAlchemy in pip-requires
* optimize slightly device lookup with LXC umounts
* Support for several HA RabbitMQ servers
* xenapi: Removing legacy swap-in-image
* xenapi: increase timeout for resetnetwork agent request
* Replaced default hostname function from gethostname to getfqdn
* Fix issues deleting instances in RESIZED state
* Modified 404 error response to show specific message
* Updated code to update attach_time of a volume while detaching
* Check that an image is active before spawning instances
* Fix issues with device autoassignment in xenapi
* Deleting security group does not mark rules as deleted
* Collect more accurate bandwidth data for XenServer
* Zmq register opts fix in receiver
* Revert explicit usage of tgt-adm --conf option
* Fix booting a raw image on XenServer
* Add servers/ips api_samples tests
* LOG.exception() should only be used in exception handler
* Fix XenServer's ability to boot xen type images
* all_extensions api_samples testing for server actions
* Fixes remove_export for IetAdm
* libvirt: Fix _cleanup_resize
* Imported Translations from Transifex
* xenapi: fix undefined variable in logging message
* Spelling: ownz=>owns
* Fix NetAppCmodeISCSIDriver._get_lun_handle() method
* Integration tests virtual interfaces API extension
* Allow deletion of instance with failed vol cleanup
* Fixes snapshotting of instances booted from volume
* Move fakeldap.py from auth dir to tests
* Remove refs to ATAoE from nova docs
* Imported Translations from Transifex
* Set volume status to error if scheduling fails
* Update volume detach smoke test to check status
* Fix config opts for Storwize/SVC volume driver
* Ensure hybrid driver creates veth pair only once
* Cleanup exception handling
* Imported Translations from Transifex
* Add lun number (0) to model_update in HpSanDriver
* libvirt: return after soft reboot successfully completes
* Fixes to the SolarisISCSI Driver
* Fix live migration when volumes are attached
* Clarify dangerous use of exceptions in unit tests
* Cleanup test_api_samples:_compare_result
* Fix testContextClaimWithException
* Fix solidfire unit tests
* Stop double logging to the console
* Recreate nw_info after auto assigning floating ip
* Re-generate sample config file
* Use test.TestingException instead of duplicating it
* Fix startup with DELETED instances
* Fix solidfire option declaration
* Restore SIGPIPE default action for subprocesses
* Raise NotFound for non-existent volume snapshot create
* Catch NotFound exception in FloatingIP add/remove
* Adds API sample testing for rescue API extension
* Fix bugs in resource tracker and cleanup
* Replace builtin hash with MD5 to solve 32/64-bit issues
* Properly create and delete Aggregates
* No stack trace on bad nova aggregate-* command
* Clean up test_state_revert
* Fix aggregate_hosts.host migration for sqlite
* Call compute manager methods with instance as keyword argument
* Adds deserialization for block_device_mapping
* Fix marker pagination for /servers
* Send api.fault notification on API service faults
* Always yield to other greenthreads after database calls
* fix unused import
* Don't include auto_assigned ips in usage
* Correct IetAdm remove_iscsi_target
* Cleanup unused import in manager.py
* xapi: fix create hypervisor pool
* Bump version to 2013.1
* Add Keypairs extension to API samples test
* sample api testing for os-floating-ips extension
* Update quota when deleting volume that failed to be scheduled
* Update scheduler rpc API version
* Added script to find unused config options
* Make sure to return an empty subnet list for a network without sunbet
* Fix race condition in CacheConcurrencyTestCase
* Makes scheduler hints and disk config xml correct
* Add lookup by ip via Quantum for metadata service
* Fix over rate limit error response
* Add deserialization for multiple create and az
* Fix doc/README.rst to render properly
* Add user-data extension to API samples tests
* Adds API sample testing for Extended server attributes extension
* Inherit the base images qcow2 properties
* Correct db migration 91
* make ensure_default_security_group() call sgh
* add ability to clone images
* add get_location method for images
* Adds new volume API extensions
* Add console output extension to API samples test
* Raise BadRequest while creating server with invalid personality
* Update 'unlimited' quota value to '-1' in db
* Modified 404 error response for server actions
* Fix volume id conversion in nova-manage volume
* Improve error handling of scheduler
* Fixes error handling during schedule_run_instance
* Include volume_metadata with object on vol create
* Reset the task state after backup done
* Allows waiting timers in libvirt to raise NotFound
* Improve entity validation in volumes APIs
* Fix volume deletion when device mapper is used
* Add man pages
* Make DeregisterImage respect AWS EC2 specification
* Deserialize user_data in xml servers request
* Add api samples to Scheduler hints extension
* Include Schedule Hints deserialization to XML API
* Add admin actions extension
* Allow older versions of libvirt to delete vms
* Add security groups extension to API samples test
* Sync a change to rpc from openstack-common
* Add api_samples tests for servers actions
* Fix XML deserialization of rebuild parameters
* All security groups not returned to admins by default
* libvirt: Cleanup L2 and L3 rules when confirm vm resize
* Corrects use of instance_uuid for fixed ip
* Clean up handling of project_only in network_get
* Add README for doc folder
* Correct typo in memory_mb_limit filter property
* Add more useful logging around the unmount fail case
* Imported Translations from Transifex
* Make compute/manager.py use self.host instead of FLAGS.host
* Add a resume delete on volume manager startup
* Remove useless _get_key_name() in servers API
* Add entity body validation helper
* Add 422 test unit test for servers API
* Use tmpdir and avoid leaving test files behind
* Includes sec group quota details in limits API response
* Fixes import issue on Windows
* Overload comment in generated SSH keys
* Validate keypair create request body
* Add reservations parameter when cast "create_volume" to volume manager
* Return 400 if create volume snapshot force parameter is invalid
* Fix FLAGS.volumes_dir help message
* Adds more servers list and servers details samples
* Makes key_name show in details view of servers
* Avoid VM task state revert on instance termination
* Avoid live migrate overwriting the other task_state
* Backport changes from Cinder to Nova-Volume
* Check flavor id on resize
* Rename _unplug_vifs to unplug_vifs
* PowerVM: Establish SSH connection at use time
* libvirt: Fix live block migration
* Change comment for function _destroy
* Stop fetch_ca from throwing IOError exceptions
* Add 'detaching' to volume status
* Reset task state before rescheduling
* workaround lack of quantum/nova floatingip integration
* fix rpcapi version
* Added description of operators for extra_specs
* Convert to ints in VlanManager.create_networks
* Remove unused AddressAlreadyAllocated exception
* Remove an unused import
* Make ip block splitting a bit more self documenting
* Prevent Partial terminations in EC2
* Add flag cinder_endpoint_template to volume.cinder
* Handle missing network_size in nova-manage
* Adds API sample test for Flavors Extra Data extension
* More specific lxml versions in tools/pip-requires
* Fixes snat rules in complex networking configs
* Fix flavor deletion when there is a deleted flavor
* Make size optional when creating a volume from a snapshot
* Add documentation for scheduler filters scope
* Add and fix tests for attaching volumes
* Fix auth parameter passed to libvirt openAuth() method
* xapi: Fix live block migration
* Add a criteria to sort a list of dict in api samples
* delete a module never used
* Update SolidFire volume driver
* Adds get_available_resource to hyperv driver
* Create image of volume-backed instance via native API
* Improve floating IP delete speed
* Have device mapping use autocreated device nodes
* remove a never used import
* fix unmounting of LXC containers in the presence of symlinks
* Execute attach_time query earlier in migration 98
* Add ServerStartStop extension API test
* Set install_requires in setup.py
* Add Server Detail and Metadata tests
* xenapi: Make dom0 serialization consistent
* Refer to correct column names in migration 98
* Correct ephemeral disk cache filename
* Stop lock decorator from leaving tempdirs in tests
* Handle missing 'provider_location' in rm_export
* Nail the pip requirement at 1.1
* Fix typo in tgtadm LOG.error() call
* Call driver for attach/detach_volume
* rbd: implement create_volume_from_snapshot
* Use volume driver specific exceptions
* Fake requests in tests should be to v1
* Implement paginate query use marker in nova-api
* Simplify setting up test notifier
* Specify the conf file when creating a volume
* Generate a flavorid if needed at flavor creation
* Fix EC2 cinder volume creation as an admin user
* Allow cinder catalog match values to be configured
* Fix synchronized decorator path cleanup
* Fix and cleanup compute node stat tracking
* avoid the buffer cache when copying volumes
* Add missing argument to novncproxy websockify call
* Use lvs instead of os.listdir in _cleanup_lvm
* Fixing call to hasManagedSaveImage
* Fix typo in simple_tenant_usage tests
* Move api_samples to doc dir
* Add a tunable to control how many ARPs are sent
* Get the extension alias to compose the path to save the api samples
* Add scope to extra_specs entries
* Use bare container format by default
* Sync some updates from openstack-common
* Fix simple_tenant_usage's handing of future end times
* Yield to another greenthread when some time-consuming task finished
* Automatically convert device names
* Fix creation of iscsi targets
* Makes sure new flavors default to is_public=True
* Optimizes flavor_access to not make a db request
* Escape ec2 XML error responses
* Skip tests in OSX due to readlink compat
* Allow admins to de-allocate any floating IPs
* Fix xml metadata for volumes api in nova-volume
* Re-attach volumes after instance resize
* Speed up creating floating ips
* Adds API sample test for limits
* Fix vmwareapi driver spawn() signature
* Fix hyperv driver spawn() signature
* Add API samples to images api
* Add method to manage 'put' requests in api-sample tests
* Add full python path to test stubbing modules for libvirt
* Rename imagebackend arguments
* Fixes sqlalchemy.api.compute_node_get_by_host
* Fix instances query for compute stats
* Allow hard reboot of a soft rebooting instance
* On rebuild, the compute.instance.exists
* Fix quota reservation expiration
* Add api sample tests for flavors endpoint
* Add extensions for flavor swap and rxtx_factor
* Address race condition from concurrent task state update
* Makes sample testing handle out of order output
* Avoid leaking security group quota reservations
* Save the original base image ref for snapshots
* Fixed boot from snapshot failure
* Update zmq context cleanup to use term
* Fix deallocate_fixed_ip invocation
* fix issues with Nova security groups and Quantum
* Clear up the .gitignore file
* Allow for deleting VMs from down compute nodes
* Update nova-rpc-zmq-receiver to load nova.conf
* FLAG rename: bandwith_poll_*=>bandwidth_poll_*
* Spelling: Persistant=>Persistent
* Fix xml metadata for volumes extension
* delete unused valiables
* Clean up non-spec output in flavor extensions
* Adds api sample testing for extensions endpoint
* Makes api extension names consistent
* Fixes spawn method signature for PowerVM driver
* Spelling fix Retrive=> Retrieve
* Update requires to glanceclient >=0.5.0
* Sort API extensions by alias
* Remove scheduler RPC API version 1.x
* Add version 2.0 of the scheduler RPC API
* Remove some remnants of VSA support
* hacking: Add driver prefix recommendation
* Implements PowerVM get_available_resource method
* Add a new exception for live migration
* Assume virt disk size is consumed by instances
* External locking for image caching
* Stop using scheduler RPC API magic
* Adds api sample testing for versions
* Do not run pylint by default
* Remove compute RPC API version 1.x
* Add version 2.0 of compute RPC API
* Accept role list from either X-Roles or X-Role
* Fix PEP8 issues
* Fix KeyError when test_servers_get fails
* Update nova.conf.sample
* Fixes backwards compatible rpc schedule_run
* Include launch-index in openstack style metadata
* Port existing code to utils.ensure_tree
* Correct utils.execute() to check 0 in check_exit_code
* Add the self parameter to NoopFirewallDriver methods
* request_spec['instance_uuids'] as list in resize
* Fix column variable typo
* Add ops to aggregate_instance_extra_specs filter
* Implement project specific flavors API
* Correct live_migration rpc call in test
* Allow connecting to a ssl-based glance
* Move ensure_tree to utils
* Define default mode and device_id_string in Mount
* Update .mailmap
* Fix path to example extension implementation
* Remove test_keypair_create_quota_limit()
* Remove duplicated test_migrate_disk_and_power_off()
* Add missing import webob.exc
* Fix broken SimpleScheduler.schedule_run_instance()
* Add missing user_id in revoke_certs_by_user_and_project()
* Rename class_name to project_id
* Use the compute_rpcapi instance not the module
* Remove duplicated method VM_migrate_send
* Add missing context argument to start_transfer calls
* Remove unused permitted_instance_types
* Add lintstack error checker based on pylint
* Make pre block migration create correct disk files
* Remove unused and old methods in hyperv and powervm driver
* Trap iscsiadm error
* Check volume status before detaching
* Simplify network create logic
* Clean up network create exception handling
* Adding indexes to frequently joined database columns
* Ensure hairpin_mode is set whenever vifs is added to bridge
* Returns hypervisor_hostname in xml of extension
* Adds integration testing for api samples
* Fix deallocate_fixed_ip() call by unifying signature
* Make instance_update_and_get_original() atomic
* Remove unused flags
* Remove test_instance_update_with_instance_id test
* Remove unused instance id-to-uuid function
* Re-work the handling of firewall_driver default
* Include CommonConfigOpts options in sample config
* Re-generate nova.conf.sample
* Ensure log formats are quoted in sample conf
* Don't include hostname and IP in generated sample conf
* Allow generate_sample.sh to be run from toplevel dir
* Let admin list instances in vm_states.DELETED
* Return actual availability zones
* Provide a hint for missing EC2 image ids
* Check association when removing floating ip
* Add public network support when launching an instance
* Re-define libvirt domain on "not found" exception
* Add two prereq pkgs to nova devref env guide
* Fix hyperv Cfgs: StrOpt to IntOpt
* continue deleting instance even if quantum port delete fails
* Typo fix: existant => existent
* Fix hacking.py git checks to propagate errors
* Don't show user-data when its not sent
* Clarify nwfilter not found error message
* Remove unused _create_network_filters()
* Adds missing assertion to FloatingIP tests
* Restore imagebackend in test_virt_drivers.py
* Add nosehtmloutput as a test dependency
* Remove unused exceptions from nova/exception.py
* Cleanup pip dependencies
* Make glance image service check base exception classes
* Add deprecated warning to SimpleScheduler
* Have compute_node_get() join 'service'
* XCP-XAPI version fix
* add availability_zone to openstack metadata
* Remove stub_network flag
* Implements sending notification on metadata change
* Code clean up
* Implement network creation in compute API
* Debugged extra_specs_ops.py
* Fix typo in call in cinder.API unreserve_volume
* xenapi: Tag nova volumes during attach_volume
* Allow network to call get_fixed_ip_by_address
* Add key_name attribute in XML servers API
* Fix is_admin check via policy
* Keep the ComputeNode model updated with usage
* Remove hard-coded 'admin' role checking and use policy instead
* Introduce ImagePropertiesFilter scheduler filter
* Return HTTP 422 on bad server update PUT request
* Makes sure instance deletion ok with deleted data
* OpenStack capitalization added to HACKING.rst
* Fix get_vnc_console race
* Fix a TypeError that occurs in _reschedule
* Make missing imports flag in hacking settable
* Makes sure tests don't leave lockfiles around
* Update FilterScheduler doc
* Disable I18N in Nova's test suites
* Remove logging in volume tests
* Refactor extra specs matching into a new module
* Fix regression in compute_capabilities filter
* Refactor ComputeCapabilitiesFilter test cases
* Revert per-user-quotas
* Remove unused imports
* Fix PEP8 issues
* Sync changes from openstack common
* Implement GET (show) in OS API keypairs extension
* Fix spelling typos
* Ignoring *.sw[op] files
* xenapi: attach root disk during rescue before boot
* Allows libvirt to set a serial number for a volume
* Adds support for serial to libvirt config disks
* Remove unused variables
* Always create the run_instance records locally
* Fix use of non-existant var pool
* Adds Hyper-V support in nova-compute (with new network_info model), including unit tests
* Update sqlite to use PoolEvents for regexp
* Remove unused function in console api
* Allow nova to guess device if not passed to attach
* Update disk config to check for 'server' in req
* Changes default behavior of ec2
* Make ComputeFilter verify compute-related instance properties
* Collect instance capabilities from compute nodes
* Move volume size validation to api layer
* Change IPtablesManager to preserve packet:byte counts
* Add get_key_pair to compute API
* Defined IMPL in global ipv6 namespace
* xenapi: remove unnecessary json decoding of injected_files
* Remove unnecessary try/finally from snapshot
* Port pre_block_migration to new image caching
* Adding port attribute in network parameter of boot
* Add support for NFS-based virtual block devices
* Remove assigned, but unused variables from nova/db/sqlalchemy/api.py
* xenapi: Support live migration without pools
* Restore libvirt block storage connections on reboot
* Added several operators on instance_type_extra_specs
* Revert to prior method of executing a libvirt hard_reboot
* Set task_state=None when finished snapshotting
* Implement get_host_uptime in libvirt driver
* continue config-drive-v2, add openstack metadata api
* Return values from wrapped functions in decorators
* Allow XML payload for volume creation
* Add PowerVM compute driver and unit tests
* Revert task_state on failed instance actions
* Fix uuid related bug in console/api
* Validate that min_count & max_count parameters are numeric
* Allow stop API to be called in Error
* Enforce quota limitations for instance resize
* Fix rpc error with live_migration
* Simple checks for instance user data
* Change time.sleep to greenthread.sleep
* Add missing self. for parent
* Rewrite image code to use python-glanceclient
* Fix rpc error with live_migration
* volumes: fix check_for_export() in non-exporting volume drivers
* Avoid {} and [] as default arguments
* Improve bw_usage_update() performance
* Update extra specs calls to use deleted: False
* Don't stuff non-db data into instance dict
* Fix type error in state comparison
* update python-quantumclient dependency to >=2.0
* Key auto_disk_config in create server off of ext
* Implement network association in OS API
* Fix TypeError conversion in API layer
* Key requested_networks off of network extension
* Key config_drive off of config-drive extension
* Make sure reservations is initialized
* import module, not type
* Config drive v2
* Don't accept key_name if not enabled
* Fix HTTP 500 on bad server create
* Default behavior should restrict admins to tenant for volumes
* remove nova code related to Quantum v1 API
* Make sure ec2 mapping raises proper exceptions
* Send host not ComputeNode into uptime RPC call
* Making security group refresh more specific
* Sync with latest version of openstack.common.cfg
* Sync some cleanups from openstack.common
* maint: compare singletons with 'is' not '=='
* Compute restart causes period of network 'blackout'
* Revert "Remove unused add_network_to_project() method"
* Add error log for live migration
* Make FaultWrapper handle exception code = None
* Don't accept scheduler_hints if not enabled
* Avoid double-reduction of quota for repeated delete
* Traceback when over allocating IP addresses
* xenapi: ensure all calls to agent get logged
* Make update_db an opt arg in scheduler manager
* Key min_count, max_count, ret_res_id off of ext
* Key availability_zone in create server off of ext
* Fix the inject_metadata_into_fs in the disk API
* Send updated instance model to schedule_prep_resize
* Create unique volumes_dir for testing
* Fix stale instances being sent over rpc
* Fix setting admin_pass in rescue command
* Key user_data in create server off of extension
* Key block_device_mapping off of volume extension
* Moves security group functionality into extension
* Adds ability to inherit wsgi extensions
* Fixes KeyError when trying to rescue an instance
* Make TerminateInstances compatible with EC2 api
* Uniqueness checks for floating ip addresses
* Driver for IBM Storwize and SVC storage
* scheduler prep_resize should not update instance['host']
* Add a 50 char git title limit test to hacking
* Fix a bug on remove_volume_connection in compute/manager.py
* Fix a bug on db.instance_get_by_uuid in compute/manager.py
* Make libvirt_use_virtio_for_bridges flag works for all drivers
* xenapi: reduce polling interval for agent
* xenapi: wait for agent resetnetwork response
* Fix invalid exception format strings
* General host aggregates part 2
* Update devref for general host aggregates
* Cleanup consoles test cases
* Return 409 error if get_vnc_console is called before VM is created
* Move results filtering to db
* Prohibit file injection writing to host filesystem
* Added updated locations for iscsiadm
* Check against unexpected method call
* Remove deprecated use Exception.message
* Remove temporary hack from checks_instance_lock
* Remove temporary hack from wrap_instance_fault
* Fix up some instance_uuid usage
* Update vmops to access metadata as dict
* Improve external locking on Windows
* Fix traceback when detaching volumes via EC2
* Update RPC code from common
* Fixes parameter passing to tgt-admin for iscsi
* Solve possible race in semaphor creation
* Rename private methods of compute manager
* Send full instance to compute live_migration
* Add underscore in front of post_live_migration
* Send full instance to scheduler live_migration
* Send full instance to run_instance
* Use dict style access for image_ref
* Use explicit arguments in compute manager run_instance
* Remove topic from scheduler run_instance
* Use explicit args in run_instance scheduler code
* Update args to _set_vm_state_and_notify
* Reduce db access in prep_resize in the compute manager
* Remove instance_id fallback from cast_to_compute_host()
* Remove unused InstanceInfo class
* Adds per-user-quotas support for more detailed quotas management
* Remove list_instances_detail from compute drivers
* Move root_helper deprecation warning into execute
* Flavor extra specs extension use instance_type id
* Fix test_resize_xcp testcase - it never ran
* tests: avoid traceback warning in test_live_migration
* ensure_tree calls mkdir -p
* Only log deprecated config warnings once
* Handle NetworkNotFound in _shutdown_instance
* Drop AES functions and pycrypto dependency
* Simplify file hashing
* Allow loaded extensions to be checked from servers
* Make extension aliases consistent
* Remove old exception type
* Fix test classes collision
* Remove unused variables
* Fix notification logic
* Improve external lock implementation
* maint: remove an unused import in libvirt.driver
* Require eventlet >= 0.9.17
* Remove **kwargs from prep_resize in compute manager
* Updates to the prep_resize scheduler rpc call
* Migrate a notifier patch from common:
* Update list_instances to catch libvirtError
* Audit log messages in nova/compute/api.py
* Rename _self to self according to Python convention
* import missing module time
* Remove unused variables
* Handle InstanceNotFound in libvirt list_instances
* Fix broken pep8 exclude processing
* Update reset_db to call setup if _DB is None
* Migrate a logging change from common:
* Send 'create volume from snapshot' to the proper host
* Fix regression with nova-manage floating list
* Remove unused imports
* Simple refactor of some db api tests
* fix unmounting of LXC containers
* Update usage of 'ip' to handle more return codes
* Use function registration for policy checks
* Check instance lock in compute/api
* Fix a comment typo in db api
* Audit log messages in nova/compute/manager.py
* XenAPI: Add script to destroy cached images
* Fix typo in db test
* Fix issue with filtering where a value is unicode
* Avoid using logging in signal handler
* Fix traceback when using s3
* Don't pass kernel args to Xen HVM instances
* Sync w/ latest openstack common log.py
* Pass a full instance to rotate_backups()
* Remove agent_update from the compute manager
* Move tests.test_compute_utils into tests.compute
* Send a full instance in terminate_instance
* maint: don't require write access when reading files
* Fix get_diagnostics RPC arg ordering
* Fix failed iscsi tgt delete errors with new tgtadm
* Deprecate root_helper in favor of rootwrap_config
* Use instance_get instead of instance_by
* Clarify TooManyInstances exception message
* Setting root passwd no longer fails silently
* XenAPI: Fix race-condition with cached images
* Prevent instance_info_cache from being altered post instance
* Update targets information when creating target
* Avoid recursion from @refresh_cache
* Send a full instance in change_instance_metadata
* Send a full instance in unrescue_instance
* Add check exit codes for vlans
* Compute: Error out instance on rebuild and resize
* Partially revert "Remove unused scheduler functions"
* Use event.listen() instead of deprecated listeners kwarg
* Avoid associating floating IP with two instances
* Tidy up nova.image.glance
* Fix arg to get_instance_volume_block_device_info()
* Send a full instance in snapshot_instance
* Send a full instance in set_admin_password
* Send a full instance in revert_resize
* Send a full instance in rescue_instance
* Send a full instance in remove_volume_connection
* Send a full instance in rollback_live_migration_at_destination
* Send a full instance in resume_instance
* Send a full instance in resize_instance
* Send a full instance in reset_network
* Convert virtual_interfaces to using instance_uuid
* Compute: VM-Mode should use instance dict
* Fix image_type=base after snapshot
* Send a full instance in remove_fixed_ip_from_instance
* Send a full instance in rebuild_instance
* Reverts fix lp1031004
* sync openstack-common log changes with nova
* Set default keystone auth_token signing_dir loc
* Resize.end now includes the correct instance_type
* Fix rootwrapper with tgt-admin
* Use common parse_isotime in GlanceImageService
* Xen: VHD sequence validation should handle swap
* Revert "Check for selinux before setting up selinux."
* reduce debugging from utils.trycmd()
* Avoid error during snapshot of ISO booted instance
* Add a link from HACKING to wiki GitCommitMessages page
* Instance cleanups from detach_volumes
* Check for selinux before setting up selinux
* Prefer instance in reboot_instance
* maint: libvirt imagecache: remove redundant interpreter spec
* Support external gateways in VLAN mode
* Turn on base image cleanup by default
* Make compute only auto-confirm its own instances
* Fix state logic for auto-confirm resizes
* Explicitly send primitive instances via rpc
* Allow _destroy_vdis if a mapping has no VDI
* Correct host count in instance_usage_audit_log extension
* Return location header on volume creation
* Add persistent volumes for tgtd
* xenapi: Use instance uuid when calling DB API
* Fix HACKING violation in nova/api/openstack/volume/types.py
* Remove ugly instance._rescue hack
* Convert to using dict style key lookups in XenAPI
* Implements notifications for more instance changes
* Fix ip6tables support in xenapi bug 934603
* Moving where the fixed ip deallocation happens
* Sanitize xenstore keys for metadata injection
* Don't store system_metadata in xenstore
* use REDIRECT to forward local metadata request
* Only enforce valid uuids if a uuid is passed
* Send a full instance in pre_live_migration
* Send a full instance in power_on_instance and start_instance
* Send a full instance in power_off_instance and stop_instance
* Make instance_uuid backwards compat actually work
* Send a full instance via rpc for post_live_migration_at_destination
* Send a full instance via rpc for inject_network_info
* Send a full instance via rpc for inject_file
* Send a full instance via rpc for get_vnc_console
* Remove get_instance_disk_info from compute rpcapi
* Send a full instance via rpc for get_diagnostics
* Send a full instance via rpc for finish_revert_resize
* Ensure instance is moved to ERROR on suspend failure
* Avoid using 'is' operator when comparing strings
* Revert "Add additional capabilities for computes"
* Allow power_off when instance doesn't exist
* Fix resizing VDIs on XenServer >= 6
* Refactor glance image service code
* Don't import libvirt_utils in disk api
* Call correct implementation for quota_destroy_all_by_project
* Remove return values from some compute RPC methods
* Reinstate instance locked error logging
* Send a full instance via rpc for finish_resize
* Fix exception handling in libvirt attach_volume()
* Convert fixed_ips to using instance_uuid
* Trim volume type representation
* Fix a couple of PEP8 nits
* Replace subprocess.check_output with Popen
* libvirt driver: set os_type to support xen hvm/pv
* Include architecture in instance base options passed to the scheduler
* Fix typo of localhost's IP
* Enhance nova-manage to set flavor extra specs
* Send a full instance via rpc for detach_volume
* Remove unused methods from compute rpcapi
* Send a full instance via rpc for confirm_resize
* Send a full instance via rpc for check_can_live_migrate_source
* Send a full instance via rpc for check_can_live_migrate_destination
* Remove unused scheduler functions
* Send a full instance via rpc for attach_volume
* Send a full instance via rpc for add_fixed_ip_to_instance
* Send a full instance via rpc for get_console_output
* Send a full instance via rpc for suspend_instance
* Send a full instance via rpc for (un)pause_instance
* Don't use rpc to lock/unlock an instance
* Convert reboot_instance to take a full instance
* Update decorators in compute manager
* Include name in a primitive Instance
* Shrink Simple Scheduler
* Allow soft deletes from any state
* Handle NULL deleted_at in migration 112
* Add support for snapshots and volume types to netapp driver
* Inject instance metadata into xenstore
* Add missing tempfile import to libvirt driver
* Fix docstring for SecurityGroupHandlerBase
* Don't log debug auth token when using cinder
* Remove temporary variable
* Define cross-driver standardized vm_mode values
* Check for exception codes in openstack API results
* Add missing parameters to novas cinder api
* libvirt driver: set driver name consistently
* Allow floating IP pools to be deleted
* Fixes console/vmrc_manager.py import error
* EC2 DescribeImageAttribute by kernel/ramdisk
* Xen: Add race-condition troubleshooting script
* Return 400 in get_console_output for bad length
* update compute_fill_first_cost_fn docstring
* Xen: Validate VHD footer timestamps
* Xen: Ensure snapshot is torn down on error
* Provide rootwrap filters for nova-api-metadata
* Fix a bug in compute_node_statistics
* refactor all uses of the `qemu-img info` command
* Xen: Fix snapshots when use_cow=True
* tests: remove misleading docstrings on libvirt tests
* Update NovaKeystoneContext to use jsonutils
* Use compute_driver in vmware driver help messages
* Use compute_driver in xenapi driver help messages
* Add call to get hypervisor statistics
* Adds xcp disk resize support
* Log snapshot UUID and not OpaqueRef
* Remove unused user_id and project_id arguments
* Fix wrong regex in cleanup_file_locks
* Update jsonutils from openstack-common
* Return 404 when attempting to remove a non-existent floating ip
* Implements config_drive as extension
* use boto's HTTPResponse class for versions of boto >=2.5.2
* Migrations for deleted data for previously deleted instances
* Add image_name to create and rebuild notifications
* Make it clear subnet_bits is unused in ipam case
* Remove unused add_network_to_project() method
* Adding networking rules to vm's on compute service startup
* Avoid unrecognized content-type message
* Updates migration 111 to work w/ Postgres
* fixes for nova-manage not returning a full list of fixed IPs
* Adds non_inheritable_image_properties flag
* Add git commit message validation to hacking.py
* Remove unnecessary use of with_lockmode
* Improve VDI chain logging
* Remove profane words
* Adds logging for renaming and hardlinking
* Don't create volumes if an incorrect size was given
* set correct SELinux context for injected ssh keys
* Fixes nova-manage fixed list with deleted networks
* Move libvirt disk config setup out of main get_guest_config method
* Refactor libvirt imagebackend module to reduce code duplication
* Move more libvirt disk setup into the imagebackend module
* Don't hardcode use of 'virtio' for root disk in libvirt driver
* Ensure to use 'hdN' for IDE disk device in libvirt driver
* Don't set device='cdrom' for all disks in libvirt driver
* Move setup of libvirt disk cachemode into imagebackend module
* Get rid of pointless 'suffix' parameter in libvirt imagebackend
* Revert "Attach ISO as separate disk if given proper instruction"
* Ensure VHDs in staging area are sequenced properly
* Fix error in error handler in instance_usage_audit task
* Fix SQL deadlock in quota reservations
* Ensure 413 response for security group over-quota
* fixes for nova-manage network list if network has been deleted
* Allow NoMoreFloatingIps to bubble up to FaultWrapper
* Fix cloudpipe keypair creation. Add pipelib tests
* Don't let failure to delete filesystem block deletion of instances in libvirt
* Static FaultWrapper status_to_type map
* Make flavorextradata ignore deleted flavors
* Tidy up handling of exceptions in floating_ip_dns
* Raise NotImplementedError, not NotImplemented singleton
* Fix the mis-use of NotImplemented
* Update FilterSchedulerTestCase docstring
* Remove unused testing.fake
* Make snapshot work for stopped VMs
* Split ComputeFilter up
* Show all absolute quota limits in /limits
* Info log to see which compute driver has loaded
* Rename get_lock() to _get_lock()
* Remove obsolete line in host_manager
* improve efficiency of image transfer during migration
* Remove unused get_version_from_href()
* Add debug output to RamFilter
* Fixes bare-metal spawn error
* Adds generic retries for build failures
* Fix docstring typo
* Fixes XenAPI driver import in vm_vdi_cleaner
* Display key_name only if keypairs extension is used
* Fix EC2 CreateImage no_reboot logic
* Reject EC2 CreateImage for instance-store
* EC2 DescribeImages reports correct rootDeviceType
* Support EC2 CreateImage API for boot-from-volume
* remove unused clauses[] variable
* Partially implements blueprint xenapi-live-migration
* Improved VM detection for bandwidth polling (XAPI)
* Sync jsonutils from openstack-common
* Adding granularity for quotas to list and update
* Remove VDI chain limit for migrations
* Refactoring required for blueprint xenapi-live-migration
* Add the plugin framework from common; use and test
* Catch rpc up to the common state-of-the-art
* Support requested_networks with quantum v2
* Return 413 status on over-quota in the native API
* Fix venv wrapper to clean *.pyc
* Use all deps for tools/hacking.py tests in tox
* bug 1024557
* General-host-aggregates part 1
* Attach ISO as separate disk if given proper instruction
* Extension to show usage of limited resources in /limits response
* Fix SADeprecationWarning: useexisting is deprecated
* Fix spelling in docstrings
* Fix RuntimeWarning nova_manage not found
* Exclude openstack-common from pep8 checks
* Use explicit destination user in xenapi rsync call
* Sync gettextutils fixes from openstack-common
* Sync importutils from openstack-common
* Sync cfg from openstack-common
* Add SKIP_WRITE_GIT_CHANGELOG to setup.py
* Remove unnecessary logging from API
* Sync a commit from openstack-common
* Fix typo in docstring
* Remove VDI chain limit for snapshots
* Adds snapshot_attached_here contextmanager
* Change base rpc version to 1.0 in compute rpcapi
* Use _lookup_by_name instead of _conn.lookupByName
* Use the dict syntax instead of attribute to access db objects
* Raise HTTP 500 if service catalog is not json
* Floating_ip create /31,32 shouldn't silent error
* Convert remaining network API casts to calls
* network manager returns empty list, not raise an exception
* add network creation call to network.api.API
* overriden VlanManager.create_networks must return a result
* When over quota for floating ips, return HTTPRequestEntityTooLarge
* Remove deprecated auth-related db code
* Fix .mailmap to generate unique AUTHORS list
* Imports base64 to fix xen file injection
* Remove deprecated auth from GlanceImageService
* Adds bootlocking to the xenserver suspend and resume
* ensure libguestfs mounts are cleaned up
* Making docs pretty!
* allows setting accessIPvs to null via update call
* Re-add nova.virt.driver import to xenapi driver
* Always attempt to delete entire floating IP range
* Adds network labels to the fixed ips in usages
* only mount guest image once when injecting files
* Remove unused find_data_files function in setup.py
* Use compute_api.get_all in affinity filters
* Refactors more snapshot code into vm_utils
* Clarifying which vm_utils functions are private
* Refactor instance_usage_audit. Add audit tasklog
* Fixes api fails to unpack metadata using cinder
* Remove deprecated auth docs
* Raise Failure exception when setting duplicate other_config key
* Split xenapi agent code out to nova.virt.xenapi.agent
* ensure libguestfs has completed before proceeding
* flags documentation to deprecate connection_type
* refactor baremetal/proxy => baremetal/driver
* refactor xenapi/connection => xenapi/driver
* refactor vmwareapi_conn => vmwareapi/driver
* Don't block instance delete on missing block device volume
* Adds diagnostics command for the libvirt driver
* associate_floating_ip an ip already in use
* When deleting an instance, avoid freakout if iscsi device is gone
* Expose over-quota exceptions via native API
* Fix snapshots tests failing bug 1022670
* Remove deprecated auth code
* Remove deprecated auth-related api extensions
* Make pep8 test work on Mac
* Avoid lazy-loading errors on instance_type
* Fetch kernel/ramdisk images directly
* Ignore failure to delete kernel/ramdisk in xenapi driver
* Boot from volume for Xen
* Fix 'instance %s: snapshotting' log message
* Fix KeyError 'key_name' when KeyPairExists raised
* Propagate setup.py change from common
* Properly name openstack.common.exception
* Janitorial: Catch rpc up with a change in common
* Make reboot work for halted xenapi instances
* Removed a bunch of cruft files
* Update common setup code to latest
* fix metadata file injection with xen
* Switch to common notifiers
* Implements updating complete bw usage data
* Fix rpc import path in nova-novncproxy
* This patch stops metadata from being deleted when an instance is deleted
* Set the default CPU mode to 'host-model' for Libvirt KVM/QEMU guests
* Fallback to fakelibvirt in test_libvirt.py test suite
* Properly track VBD and VDI connections in xenapi fake
* modify hacking.py to not choke on the def of _()
* sort .gitignore for readability
* ignore project files for eclipse/pydev
* Add checks for retrieving deleted instance metadata for notification events
* Allow network_uuids that begin with a prefix
* Correct typo in tools/hacking.py l18n -> i18n
* Add *.egg* to .gitignore
* Remove auth-related nova-manage commands
* Remove unnecessary target_host flag in xenapi driver tests
* Remove unnecessary setUp() method in xenapi driver tests
* Finish AUTHORS transition
* Don't catch & ignore exceptions when setting up LXC container filesystems
* Ensure system metadata is sent on new image creation
* Distinguish over-quota for volume size and number
* Assign service_catalog in NovaKeystoneContext
* Fix some hacking violations in the quantum tests

folsom-2
--------

* Fix missing nova.log change to nova.openstack.common.log
* Add Cinder Volume API to Nova
* Modifies ec2/cloud to be able to use Cinder
* Fix nova-rpc-zmq-receiver
* Drop xenapi session.get_imported_xenapi()
* Fix assertRaises(Exception, ...) HACKING violation
* Make possible to store snapshots not in /tmp directory
* Prevent file injection writing to host filesystem
* Implement nova network API for quantum API 2.0
* Expand HACKING with commit message guidelines
* Add ServiceCatalog entries to enable Cinder usage
* Pass vdi_ref to fake.create_vbd() not a string
* Switch to common logging
* use import_object_ns for compute_driver loading
* Add compatibility for CPU model config with libvirt < 0.9.10
* Sync rpc from openstack-common
* Redefine the domain's XML on volume attach/detach
* Sync jsonutils from openstack-common
* Sync iniparser from openstack-common
* Sync latest importutils from openstack-common
* Sync excutils from openstack-common
* Sync cfg from openstack-common
* Add missing gettextutils from openstack-common
* Run hacking tests as part of the gate
* Remove duplicate volume_id
* Make metadata content match the requested version of the metadata API
* Create instance in DB before block device mapping
* Get hypervisor uptime
* Refactoring code to kernel Dom0 plugin
* Ability to read deleted system metadata records
* Add check for no domains in libvirt driver
* Remove passing superfluous read_deleted argument
* Flesh out the README file with a little more useful information
* Remove unused 'get_open_port' method from libvirt utils
* deallocate_fixed_ip attempts to update deleted ip
* Dom0 plugin now returns data in proper format
* Add PEP8 checks back for Dom0 plugins
* Add missing utils declaration to RPM spec
* Fixes bug 1014194, metadata keys are incorrect for kernel-id and ramdisk-id
* Clean up cruft in nova.image.glance
* Retry against different Glance hosts
* Fix some import ordering HACKING violations
* Deal with unknown instance status
* OS API should return SHUTOFF, not STOPPED
* Implement blueprint ec2-id-compatibilty
* Add multi-process support for API services
* Allow specification of the libvirt guest CPU model per host
* Refactor Dom0 Glance plugin
* Switch libvirt get_cpu_info method over to use config APIs
* Remove tpool stub in xenapi tests
* Use setuptools-git plugin for MANIFEST
* Remove duplicate check of server_dict['name']
* Add missing nova-novncproxy to tarballs
* Add libvirt config classes for handling capabilities XML doc
* Refactor libvirt config classes for representing CPU models/features
* Fix regression in test_connection_to_primitive libvirt testcase
* Rename the instance_id column in instance_info_caches
* Rename GlanceImageService.get to download
* Use LOG.exception instead of logging.exception
* Align run_tests.py pep8 with tox
* Add hypervisor information extension
* Remove GlanceImageService.index in favor of detail
* Swap VDI now uses correct name label
* Remove image service show_by_name method
* Cleanup of image service code
* Adds default fall-through to the multi scheduler. Fixes bug 1009681
* Add missing netaddr import
* Make nova list/show behave nicely on instance_type deletion
* refactor libvirt from connection -> driver
* Switch to using new config parsing for vm_vdi_cleaner.py
* Adds missing 'owner' attribute to image
* Ignore floatingIpNotAssociated during disassociation
* Avoid casts in network manager to prevent races
* Stop nova_ipam_lib from changing the timeout setting
* Remove extra DB calls for instances from OS API extensions
* Allow single uuid to be specified for affinity
* Fix invalid variable reference
* Avoid reset on hard reboot if not supported
* Fix several PEP-8 issues
* Allow access to metadata server '/' without IP check
* Fix db calls for snaphsot and volume mapping
* Removes utils.logging_error (no longer used)
* Removes utils.fetch_file (no longer used)
* Improve filter_scheduler performance
* Remove unnecessary queries for network info in notifications
* Re-factor instance DB creation
* Fix hacking.py failures..
* fix libvirt get_memory_mb_total() with xen
* Migrate existing routes from flat_interface
* Add full test environment
* Another killfilter test fix for Fedora 17
* Remove unknown shutdown kwarg in call to vmops._destroy
* Refactor vm_vdi_cleaner.py connection use
* Remove direct access to glance client
* Fix import order of openstack.common
* metadata: cleanup pubkey representation
* Make tgtadm the default iscsi user-land helper
* Move rootwrap filters definition to config files
* Fixes ram_allocation_ratio based over subscription
* Call libvirt_volume_driver with right mountpoint
* XenAPI: Fixes Bug 1012878
* update refresh_cache on compute calls to get_instance_nw_info
* vm state and task state management
* Update pylint/pep8 issues jenkins job link
* Addtional CommandFilters to fix rootwrap on SLES
* Tidy up exception handling in contrib api consoles
* do sync before fusermount to avoid busyness
* Fix bug 1010581
* xenapi tests: changes size='0' to size=0
* fixes a bug in xenapi tests where a string should be int
* Minor HACKING.rst exception fix
* Make libvirt LoopingCalls actually wait()
* Add instance_id in Usage API response
* Set libvirt_nonblocking to true by default for Folsom
* Admin action to reset states
* Use rpc from openstack-common
* add nova-manage bash completion script
* Spelling fixes
* Fix bug 1014925: fix os-hosts
* Adjust the libvirt config classes' API contract for parsing
* Move libvirt version comparison code into separate function helper
* Remove two obsolete libvirt cheetah templates from MANIFEST.in
* Propose nova-novncproxy back into nove core
* Fix missing import in compute/utils.py
* Add instance details to notifications
* Xen Storage Manager: tests for xensm volume driver
* SM volume driver: DB changes and tests
* moved update cache functionality to the network api
* Handle missing server when getting security groups
* Imports cleanup
* added deprecated.warn helper method
* Enforce an instance uuid for instance_test_and_set
* Replaces functions in utils.py with openstack/common/timeutils.py
* Add CPU arch filter scheduler support
* Present correct ec2id format for volumes and snaps
* xensm: Fix xensm volume driver after uuid changes
* Cleanup instance_update so it only takes a UUID
* Updates the cache
* Add libvirt min version check
* Ensure dnsmasq accept rules are preset at startup
* Re-add private _compute_node_get call to sql api
* bug #996880 change HostNotFound in hosts to HTTPNotFound
* Unwrap httplib.HTTPConnection after WsgiLimiterProxyTest
* Log warnings instead of full exceptions for AMQP reconnects
* Add missing ack to impl_qpid
* blueprint lvm-disk-images
* Remove unused DB calls
* Update default policies for KVM guest PIT & RTC timers
* Add support for configuring libvirt VM clock and timers
* Dedupe native and EC2 security group APIs
* Add two missing indexes for instance_uuid columns
* Revert "Fix nova-manage backend_add with sr_uuid"
* Adds property to selectively enable image caching
* Remove utils.deprecated functions
* Log connection_type deprecation message as WARNING
* add unit tests for new virt driver loader
* Do not attempt to kill already-dead dnsmasq
* Only invoke .lower() on non-None protocols
* Add indexes to new instance_uuid columns
* instance_destroy now only takes a uuid
* Do not always query deleted instance_types
* Rename image to image_id
* Avoid partially finished cache files
* Fix power_state mis-use bug 1010586
* Resolve unittest error in rpc/impl_zmq
* Fix whitespace in sqlite steps
* Make eventlet backdoor play nicer with gettext
* Add user_name project_name and color option to log
* fixes bug 1010200
* Fixes affinity filters when hints is None
* implement sql-comment-string stack traces
* Finalize tox config
* Fixes bug lp:999928
* Convert consoles to use instance uuid
* Use OSError instead of ProcessExecutionError
* Replace standard json module with openstack.common.jsonutils
* Don't query nova-network on startup
* Cleans up power_off and power_on semantics
* Refactor libvirt create calls
* Fix whitespace in sqlite steps
* Update libvirt imagecache to support resizes
* separate Metadata logic away from the web service
* Fix bug 1006664: describe non existent ec2 keypair
* Make live_migration a first-class compute API
* Add zeromq driver. Implements blueprint zeromq-rpc-driver
* Fix up protocol case handling for security groups
* Prefix all nova binaries with 'nova-'
* Migrate security_group_instance_association to use a uuid to refer to instances
* Migrate instance_metadata to use a uuid to refer to instances
* Adds `disabled` field for instance-types
* More meaningful help messages for libvirt migration options
* fix the instance quota overlimit message
* fix bug lp:1009041,add option "-F" to make mkfs non-interactive
* Finally ack consumed message
* Revert "blueprint <multi-process-api-service>"
* Use openstack-common's policy module
* Use openstack.common.cfg.CONF
* bug #1006094 correct typo in addmethod.openstackapi.rst
* Correct use of uuid in _get_instance_volume_bdm
* Unused imports cleanup (folsom-2)
* Quantum Manager disassociate floating-ips on instance delete
* defensive coding against None inside bdm resolves bug 1007615
* Add missing import to quantum manager
* Add a comment to rpc.queue_get_for()
* Add shared_storage_test methods to compute rpcapi
* Add get_instance_disk_info to the compute rpcapi
* Add remove_volume_connection to the compute rpcapi
* blueprint <multi-process-api-service>
* Implements resume_state_on_host_boot for libvirt
* Fix libvirt rescue to work with whole disk images
* Finish removing xenapi.HelperBase class
* Remove network_util.NetworkHelper class
* Remove volume_util.VolumeHelper class
* Remove vm_utils.VMHelper class
* Start removing unnecessary classes from XenAPI driver
* XenAPI: Don't hardcode userdevice for VBDs
* convert virt drivers to fully dynamic loading
* Add compare_cpu to the compute rpcapi
* Add get_console_topic() to the compute rpcapi
* Add refresh_provider_fw_rules() to compute rpcapi
* Use compute rpcapi in nova-manage
* Add post_live_migration_at_destination() to compute rpcapi
* Add pre_live_migration() to the compute rpcapi
* Add rollback_live_migration_at_destination() to compute rpcapi
* Add finish_resize() to the compute rpcapi
* Add resize_instance() to the compute rpcapi
* Add finish_revert_resize() to the compute rpcapi
* Add get_console_pool_info() to the compute rpcapi
* Fix destination host for remove_volume_connection
* Don't deepcopy RpcContext
* Remove resize function from virt driver
* Cleans up extraneous volume_api calls
* Remove list_disks/list_interfaces from virt driver
* Remove duplicate words in comments
* Implement blueprint host-topic-matchmaking
* Remove unnecessary setting of XenAPI module attribute
* Prevent task_state changes during VERIFY_RESIZE
* Eliminate a race condition on instance deletes
* Make sure an exception is logged when config file isn't found
* Removing double quotes from sample config file
* Backslash continuation removal (Nova folsom-2)
* Update .gitignore
* Add a note on why quota classes are unused in Nova
* Move queue_get_for() from db to rpc
* Sample config file tool updates
* Fix instance update notification publisher id
* Use cfg's new global CONF object
* Make xenapi fake match real xenapi a bit closer
* Align ApiEc2TestCase to closer match api-paste.ini
* Add attach_time for EC2 Volumes
* fixing issue with db.volume_update not returning the volume_ref
* New RPC tests, docstring fixes
* Fix reservation_commit so it works w/ PostgreSQL
* remove dead file nova/tests/db/nova.austin.sqlite
* Fix the conf argument to get_connection_pool()
* Remove Deprecated auth from EC2
* Revert "API users should not see deleted flavors."
* Grammar fixes
* Record instance architecture types
* Grammar / spelling corrections
* cleanup power state (partially implements bp task-management)
* [PATCH] Allow [:print:] chars for security group names
* Add scheduler filter for trustedness of a host
* Remove nova.log usage from nova.rpc
* Remove nova.context dependency from nova.rpc
* _s3_create update only pertinent metadata
* Allow adding fixed IPs by network UUID
* Fix a minor spelling error
* Run coverage tests via xcover for jenkins
* Localize rpc options to rpc code
* clean-up of the bare-metal framework
* Use utils.utcnow rather than datetime.utcnow
* update xen to use network_model
* fixes bug 1004153
* Bugfix in simple_tenant_usage API detail view
* removed a dead db function register_models()
* add queue name argument to TopicConsumer
* Cleanup tools/hacking using flake8
* Expose a limited networks API for users
* Added a instance state update notification
* Remove deprecated quota code
* Update pep8 dependency to v1.1
* Nail pep8 dependencies to 1.0.1
* API users should not see deleted flavors
* Add scheduler filter: TypeAffinityFilter
* Add help string to option 'osapi_max_request_body_size'
* Permit deleted instance types to be queried for active instances
* Make validate_compacted_migration into general diff tool
* Remove unused tools/rfc.sh
* Finish quota refactor
* Use utils.parse_strtime rather than datetime.strptime

folsom-1
--------

* Add version to compute rpc API
* Add version to scheduler rpc API
* Add version to console rpc API
* Remove wsgiref from requirements
* More accurate rescue mode testing for XenAPI
* Add tenant id in self link in /servers call for images
* Add migration compaction validation tool
* Enable checking for imports in alphabetical order
* Include volume-usage-audit in tarballs
* Fix XenServer diagnostics to provide correct details
* Use cfg's new behavior of reset() clearing overrides
* Sync with latest version of openstack.common.cfg
* Only permit alpha-numerics and ._- for instance type names
* Use memcache to store consoleauth tokens
* cert/manager.py not using crypto.fetch_crl
* Cleanup LOG.getLoggers to use __name__
* Imported Translations from Launchpad
* Alphabetize imports in nova/tests/
* Fix Multi_Scheduler to process host capabilities
* fixed_ip_get_by_address read_deleted from context
* Fix for Quantum LinuxBridge Intf driver plug call
* Add additional logging to compute filter
* use a RequestContext object instead of context module
* make get_all_bw_usage() signature match for fake virt driver
* Add unit test coverage for bug 1000261
* Moving network tests into the network folder
* Add version to consoleauth rpc API
* Add version to the cert rpc API
* Add base support for rpc API versioning
* fixes typo that completely broken Quantum/Nova integration
* Make Iptables FW Driver handle dhcp_server None
* Add aliases to .mailmap for comstud and belliott
* Add eventlet backdoor to facilitate troubleshooting
* Update nova's copy of image metadata on rebuild
* Optional timeout for servers stuck in build
* Add configurable timeout to Quantum HTTP connections
* Modify vm_vdi_cleaner to handle `-orig`
* Add __repr__ to least_cost scheduler
* Bump XenServer plugin version
* handle updated qemu-img info output
* Rearchitect quota checking to partially fix bug 938317
* Add s3_listen and s3_listen_port options
* Misused and not used config options
* Remove XenAPI use of eventlet tpool
* Fixed compute periodic task. Fixes bug 973331
* get instance details results in volumes key error
* Fix bug 988034 - Quantum Network Manager - not clearing ips
* Stop using nova.exception from nova.rpc
* Make use of openstack.common.jsonutils
* Alphabetize imports in nova/api/
* Remove unused _get_target code from xenapi
* Implement get_hypervisor_hostname for libvirt
* Alphabetize imports
* Alphabetize imports in nova/virt/
* Adding notifications for volumes
* Pass 'nova' project into ConfigOpts
* fixes bug 999206
* Create an internal key pair API
* Make allocation failure a bit more friendly
* Avoid setting up DHCP firewall rules with FlatManager
* Migrate missing license info
* Imported Translations from Launchpad
* Fix libvirt Connection.get_disks method
* Create a utf8 version of the dns_domains table
* Setup logging, particularly for keystone middleware
* Use default qemu-img cluster size in libvirt connection driver
* Added img metadata validation. Fixes bug 962117
* Remove unnecessary stubout_loopingcall_start
* Actually use xenapi fake setter
* Provide a transition to new .info files
* Store image properties with instance system_metadata
* Destroy system metadata when destroying instance
* Fix XenServer windows agent issue
* Use ConfigOpts.find_file() to find paste config
* Remove instance Foreign Key in volumes table, replace with instance_uuid
* Remove old flagfile support
* Removed unused snapshot_instance method
* Report memory correctly on Xen. Fixes bug 997014
* Added image metadata to compute.instance.exists
* Update PostgreSQL sequence names for zones/quotas
* Minor help text related changes
* API does need new image_ref on rebuild immediately
* Avoid unnecessary inst lookup in vmops _shutdown
* implement blueprint floating-ip-notification
* Defer image_ref update to manager on rebuild
* fix bug 977007,make nova create correct size of qcow2 disk file
* Remove unnecessary shutdown argument to _destroy()
* Do not fail on notify when quantum and melange are out of sync
* Remove instance action logging mechanism
* httplib throw "TypeError: an integer is required" when run quantum
* fix bug 992008, we should config public interface on compute
* A previous patch decoupled the RPC drivers from the nova.flags, breaking instance audit usage in the process. This configures the xvpvncproxy to configure the RPC drivers properly with FLAGS so that xvpvncproxy can run
* Fix bug 983206 : _try_convert parsing string
* pylint cleanup
* Fix devref docs
* Remove Deprecated AuthMiddleware
* Allow sitepackages on jenkins
* Replaces exceptions.Error with NovaException
* Docs for vm/task state transitions
* Fix a race with rpc.register_opts in service.py
* Mistake with the documentation about cost function's weight corrected
* Remove state altering in live-migration code
* Register fake flags with rpc init function
* Generate a Changelog for Nova
* Find context arg by type rather than by name
* Default auto-increment for int primary key columns
* Adds missing copyright to migration 082
* Add instance_system_metadata modeling
* Use fake_libvirt_utils for libvirt console tests
* Fix semantics for migration test environment var
* Clean up weighted_sum logic
* Use ConfigOpts.find_file() to locate policy.json
* Sync to newer openstack.common.cfg
* Fix test_mysql_innodb
* Implement key pair quotas
* Ensure that the dom0 we're connected to is the right one
* Run ip link show in linux_net._device_exists as root
* Compact pre-Folsom database migrations
* Remove unused import
* Pass context to notification drivers when we can
* Use save_and_reraise_exception() from common
* Fix innodb tests again
* Convert Volume and Snapshot IDs to use UUID
* Remove unused images
* Adding 'host' info to volume-compute connection information
* Update common.importutils from openstack-common
* Provide better quota error messages
* Make kombu support optional for running unit tests
* Fix nova.tests.test_nova_rootwrap on Fedora 17
* Xen has to create it's own tap device if using libvirt and QuantumLinuxBridgeVIFDriver
* Fix test_migrations to work with python 2.6
* Update api-paste.ini to remove unused settings
* Fix test_launcher_app to ensure service actually got started
* Minor refactor of servers viewbuider
* A previous patch decoupled the RPC drivers from the nova.flags, breaking instance audit usage in the process. This configures the instance audit usage to configure the RPC drivers properly with FLAGS so that the job can run
* Allow blank passwords in changePassword action
* Allow blank adminPass on server create
* Return a BadRequest on bad flavors param values
* adjust logging levels for utils.py
* Update integration tests to listen on 127.0.0.1
* Log instance consistently
* Create name_label local variable for logging message
* Remove hack for xenapi driver tests
* Migrate block_device_mapping to use instance uuids
* Remove unnecessary return statements
* Clean up ElementTree usage
* Adds better bookending and robustness around the instance audit usage generation
* Pass instance to resize_disk() to fix exception
* Minor spelling fix
* Removes RST documentation and moves it to openstack-manuals
* Trivial spelling fix
* Remove workaround for sqlalchemy-migration < 0.6.4
* Remove unnecessary references to resize_confirm_window flag
* Fix InnoDB migration bug in migrate script 86
* Use openstack.common.importutils
* Ignore common code in coverage calculations
* Use additional task states during resize
* Add libvirt get_console_output tests: pty and file
* Keep uuid with bandwidth usage tracking to handle the case where a MAC address could be recycled between instances
* Added the validation for name check for rebuild of a server
* Make KillFilter to handle 'deleted' w/o rstrip
* Fix instance delete notifications
* Disconnect stale instance VDIs when starting nova-compute
* Fix timeout in EC2 CloudController.create_image()
* Add additional capabilities for computes
* Move image checksums into a generic file
* Add instance to several log messages
* Imports to human alphabetical order
* Fixes bug 989271, fixes launched_at date on notifications
* Enable InnoDB checking
* make all mysql tables explicitly innodb
* Use instance_get_by_uuid since we're looking up a UUID
* Use nova_uuid attribute instead of trying to parse out name_label
* Add a force_config_drive flag
* Fix 986922
* Improvement for the correct query extraction
* Fixes bug 983024
* Make updating hostId raises BadRequest
* Disallow network creation when label > 255. Fixes bug 965008
* Introduced _atomic_restart_dhcp() Fixes Bug 977875
* Make the filename that image hashes are written to configurable
* Xen: Pass session to destroy_vdi
* Add instance logging to vmware_images.py
* Add instance logging to vmops.py
* fix bug #980452 set net.ipv4.ip_forward=1 on network
* Log instance
* Log instance information for baremetal
* Include instance in log message
* Log instance
* Ensure all messages include instance
* Add instance to log messages
* Include instance in log message
* Refactor nova.rpc config handling
* Don't leak RPC connections on timeouts or other exceptions
* Small cleanup to attach_volume logging
* Implements EC2 DescribeAddresses by specific PublicIp
* Introduced flag base_dir_name. Fixes bug 973194
* Set a more reasonable default RPC thread pool size
* Number of missing imports should always be shown
* Typo fix in bin/instance-usage-audit
* Improved tools/hacking.py
* Scope coverage report generation to nova module
* Removes unnecessary code in _run_instance
* Validate min_ram/min_disk on rebuild
* Adding context to usage notifications
* Making `usage_from_instance` private
* Remove __init__.py from locale dir
* Fixes bug 987335
* allow power state "BLOCKED" for live migrations if using Xen by libvirt
* Exclude xenapi plugins from pep8/hacking checks
* Imported Translations from Launchpad
* Remove unnecessary power state translation messages
* Add instance logging
* Use utils.save_and_reraise_exception
* Removing XenAPI class variable, use session instead
* Log instance consistently
* Keep nova-manage commands sorted
* Log instances consistently
* Moves `usage_from_instance` into nova.compute.utils
* Log instance
* nova.virt.xenapi_conn -> nova.virt.xenapi.connection
* Remove unused time keyword arg
* Remove unused variable
* support a configurable libvirt injection partition
* Refactor instance image property inheritance out to a method
* Refactor availability zone handling out to a method
* Include name being searched for in exception message
* Be more tolerant of deleting failed builds
* Logging updates in IptablesFirewallDriver
* Implement security group quotas
* Do not allow blank adminPass attribute on set password
* Make rebuilds with an emtpy name raise BadRequest
* Updates launched_at in the finish and revert_migration calls
* Updated instance state on resize error
* Reformat docstrings in n/c/a/o/servers as per HACKING
* fix bug 982360, multi ip block for dmz_cidr
* Refactor checking instance count quota
* Small code cleanup for config_disk handling
* Refactors kernel and ramdisk handling into their own method
* Improve instance logging in compute/manager
* Add deleted_at to instance usage notification
* Simplify _get_vm_opaque_ref in xenapi driver
* Test unrescue works as well
* Remove unused variable
* Port types and extra specs to volume api
* Make exposed methods clearer in xenapi.vmops
* Fix error message to report correct operation
* Make run_tests.sh just a little bit less verbose
* Log more information when sending notifications
* xenapi_conn -> xenapi.connection
* Renamed current_audit_period function to last_completed_audit_period to clarify its purpose
* QuantumManager will start dnsmasq during startup. Fixes bug 977759
* Fixed metadata validation err. Fixes bug 965102
* Remove python-novaclient dependency from nova
* Extend instance UUID logging
* Remove references to RemoteError in os-networks
* Fix errors in os-networks extension
* Removes dead code around start_tcp in Server
* Improve grammar throughout nova
* Improved localization testing
* Log kwargs on a failed String Format Operation
* Standardize quota flag format
* Remove nova Direct API
* migration_get_all_unconfirmed() now uses lowercase "finished" Fixes bug 977719
* Run tools/hacking.py instead of pep8 mandatory
* Delete fixed_ips when network is deleted
* Remove unecessary --repeat option for pep8
* Create compute.api.BaseAPI for compute APIs to use
* Give all VDIs a reasonable name-label and name-description
* Remove last two remaining hyperV references
* bug 968452
* Add index to fixed_ips.address
* Use 'root' instead of 'os' in XenAPI driver
* Information about DifferentHostFilter and SameHostFilter added
* HACKING fixes, sqlalchemy fix
* Add test to check extension timestamps
* Fixes bug 952176
* Update doc to mention nova tool for type creation
* Change Diablo document reference to trunk
* Imported Translations from Launchpad
* Cloudpipe tap vpn not always working
* Allow instance logging to use just a UUID
* Add the serialization of exceptions for RPC calls
* Cleanup xenapi driver logging messages to include instance
* Stop libvirt test from deleting instances dir
* Move product_version to XenAPISession
* glance plugin no longer takes num_retries parameter
* Remove unused user_id and project_id parameters to fetch_image()
* Cleanup _make_plugin_call()
* Push id generation into _make_agent_call()
* Remove unused path argument for _make_agent_call()
* Remove unused xenstore methods
* Combine call_xenapi and call_xenapi_request
* Fixed bug 962840, added a test case
* Use -1 end-to-end for unlimited quotas
* fix bug where nova ignores glance host in imageref
* Remove unused _parse_xmlrpc_value
* Fix traceback in image cache manager
* Fixes regression in release_dhcp
* Use thread local storage from openstack.common
* Extend FilterScheduler documentation
* Add validation on quota limits (negative numbers)
* Get unit tests functional in OS X
* Make sure cloudpipe extension can retrieve network
* Treat -1 quotas as unlimited
* Auto-confirming resizes would bail on exceptions
* Grab the vif directly on release instead of lookup
* Corrects an AttributeError in the quota API
* Allow unprivileged RADOS users to access rbd volumes
* Remove nova.rpc.impl_carrot
* Sync openstack.common.cfg from openstack-common
* add libvirt_inject_key flag fix bug #971640
* Do not fail to build a snapshot if base image is not found
* fix TypeError with unstarted threads in nova-network
* remove unused flag: baremetal_injected_network_template baremetal_uri baremetal_allow_project_net_traffic
* Imported Translations from Launchpad
* fixed postgresql flavor-create
* Add rootwrap for touch
* Ensure floating ips are recreated on reboot
* Handle instances being missing while listing floating IPs
* Allow snapshots in error state to be deleted
* Ensure a functional database connection
* Add a faq to vnc docs
* adjust logging levels for linux_net
* Handle not found in check for disk availability
* Acccept metadata ip so packets aren't snatted
* bug 965335
* Export user id as password to keystone when using noauth
* Check that DescribeInstance works with deleted image
* Check that volume has no snapshots before deletion
* Fix libvirt rescue
* Check vif exists before releasing ip
* Make kombu failures retry on IOError
* Adds middleware to limit request body sizes
* Add validation for OSAPI server name length
* adjust logging levels for libvirt error conditions
* Fix exception type in _get_minram_mindisk_params
* fixed bug lp:968019 ,fix network manager init floating ip problem
* When dnsmasq fails to HUP log an error
* Update KillFilter to handle 'deleted' exe's
* Fix disassociate query to remove foreign keys
* Touch in use image files when they're checked
* Base image signature files are not images
* Support timestamps as prefixes for traceback log lines
* get_instance_uuids_by_ip_filter to QM
* Updated docstrings in /tools as per HACKING
* Minor xenapi driver cleanups
* Continue on the the next tenant_id on 400 codes
* Fix marker behavior for flavors
* Remove auth_uri, already have auth_host, auth_port
* A missing checksum does not mean the image is corrupt
* Default scheduler to spread-first
* Reduce the image cache manager periodic interval
* Handle Forbidden and NotAuthenticated glance exc
* Destroy src and dest instances when deleting in RESIZE_VERIFY
* Allow self-referential groups to be created
* Fix unrescue in invalid state
* Clean up the shared storage check (#891756)
* Don't set instance ACTIVE until it's really active
* Fix traceback when sending invalid data
* Support sql_connection_debug to get SQL diagnostic information
* Improve performance of safe_log()
* Fix 'nova-manage config convert'
* Add another libvirt get_guest_config() test case
* Fix libvirt global name 'xml_info' is not defined
* Clean up read_deleted support in host aggregates code
* ensure atomic manipulation of libvirt disk images
* Import recent openstack-common changes
* makes volume versions display properly
* Reordered the alphabet
* Add periodic_fuzzy_delay option
* Add a test case for generation of libvirt guest config
* Convert libvirt connection class to use config APIs for CPU comparisons
* Introduce a class for storing libvirt CPU configuration
* Convert libvirt connection class to use config APIs for guests
* Convert libvirt connection class to use config APIs for filesystem devices
* Introduce a class for storing libvirt snapshot configuration
* Move NIC devices back after disk devices
* Convert libvirt connection class to use config APIs for disk devices
* Convert libvirt connection class to use config APIs for input devices
* Convert libvirt connection class to use config APIs for serial/console devices
* Convert libvirt connection class to use config APIs for graphics
* Convert libvirt vif classes over to use config API
* Convert libvirt volume classes over to use config API
* Delete the test_preparing_xml_info libvirt test
* Introduce a set of classes for storing libvirt guest configuration
* Send a more appropriate error response for 403 in osapi
* Use key in locals() that actually exists
* Fix launching of guests where instances_path is on GlusterFS
* Volumes API now uses underscores for attrs
* Remove unused certificate SQL calls
* Assume migrate module missing __version__ is old
* Remove tools/nova-debug
* Inlining some single-use methods in XenAPI vmops
* Change mycloud.com to example.com (RFC2606)
* Remove useless dhcp_domain flags in EC2
* Handle correctly QuotaError in EC2 API
* Avoid unplugging VBDs for rescue instances
* Imported Translations from Launchpad
* Rollback create_disks handles StorageError exception
* Capture SIGTERM and Shut down python services cleanly
* Fixed status validation. Fixes bug 960884
* Clarify HACKING's shadow built-in guidance
* Strip auth token from log output
* Fail-fast for invalid read_deleted values
* Only shutdown rescue instance if it's not already shutdown
* Modify nova.wsgi.start() should check backlog parameter
* Fix unplug_vbd to retry a configurable number of times
* Don't send snapshot requests through the scheduler
* Implement quota classes
* Fixes bug 949038
* Open Folsom
* Fixes bug 957708
* Improvements/corrections to vnc docs
* Allow rate limiting to be disabled via flag
* Improve performance of generating dhcp leases
* Fix lxc console regression
* Strip out characters that should be escaped from console output
* Remove unnecessary data from xenapi test
* Correct accessIPv6 error message
* Stop notifications from old leases
* Fix typo in server diagnostics extension
* Stub-implement floating-ip functions on FlatManager
* Update etc/nova.conf.sample for ship
* Make sqlite in-memory-db usable to unittest
* Fix run/terminate race conditions
* Workaround issue with greenthreads and lockfiles
* allow the compute service to start with missing libvirt disks
* Destroy rescue instance if main instance is destroyed
* Tweak security port validation for ICMP
* Debug messages for host filters
* various cleanups
* Remove Virtual Storage Array (VSA) code
* Re-instate security group delete test case
* db api: Remove check for security groups reference
* Allow proper instance cleanup if state == SHUTOFF
* Use getLogger for nova-all
* Stop setting promisc on bridge
* Fix OpenStack Capitalization
* Remove improper use of redirect for hairpin mode
* Fix OpenStack Capitalization
* HACKING fixes, TODO authors
* Keep context for logging intact in greenthreads
* fix timestamps to match documented ec2 api
* Include babel.cfg in tarballs
* Fix LXC volume attach issue
* Make extended status not admin-only by default
* Add ssl and option to pass tenant to s3 register
* Remove broken bin/*spool* tools
* Allow errored volumes to be deleted
* Fix up docstring
* libvirt/connection.py: Set console.log permissions
* nonblocking libvirt mode using tpool
* metadata speed - revert logic changes, just caching
* Refix mac change to work around libvirt issue
* Update transfer_vhd to handle unicode correctly
* Fixes bug 954833 By adding the execute bit to the xenhost xenapi plugin
* Cleanup flags
* fix bug 954488
* Fix backing file cp/resize race condition
* Use a FixedIp subquery to find networks by host
* Changes remove_fixed_ip to pass the instance host
* Map image ids to ec2 ids in metadata service
* Remove date_dhcp_on_disassociate comment and docs
* Make fixed_ip_disassociate_all_by_timeout work
* Refactor glance id<->internal id conversion for s3
* Sort results from describe_instances in EC2 API
* virt/firewall: NoopFirewallDriver::instance_filter_exists must return True
* fix nova-manage floating delete
* fixed list warn when ip allocated to missing inst
* Removes default use of obsolete ec2 authorizor
* Additional extensions no longer break unit-tests
* Use cPickle and not just pickle
* Move (cast|call)_compute_message methods back into compute API class
* Fix libvirt get_console_output for Python < 2.7
* doc/source/conf.py: Fix man page building
* Update floating auto assignment to use the model
* Make nova-manage syslog check /var/log/messages
* improve speed of metadata
* Fix linux_net.py interface-driver loading
* Change default of running_deleted_instance_action
* Nuke some unused SQL api calls
* Avoid nova-manage floating create <IP addr>/32
* Add a serializer for os-quota-sets/defaults
* Import nova.exception so exception can be used
* refactoring code, check connection in Listener. refer to Bug #943031
* Fix live-migration in multi_host network
* add convert_unicode to sqlalchemy connection arguments
* Fixes xml representation of ext_srv_attr extension
* Sub in InstanceLimitExceeded in overLimit message
* Remove update lockmode from compute_node_get_by_host
* Set 'dhcp_server' in _teardown_network_on_host
* Bug #922356 QuantumManager does not initiate unplug on the linux_net driver
* Clean up setup and teardown for dhcp managers
* Display owner in ec2 describe images
* EC2 KeyName validation
* Fix issues with security group auths without ports
* Replaced use of webob.Request.str_GET
* Allow soft_reboot to work from more states:
* Make snapshots with qemu-img instead of libvirt
* Use utils.temporary_chown to ensure permissions get reset
* Add VDI chain cleanup script
* Reduce duplicated code in xenapi
* Since 'net' is of nova.network.model.VIF class and 'ips' is an empty list, net needs to be pulled from hydrated nw_info.fixed_ips(), and appended to ips
* Fix nova-manage backend_add with sr_uuid
* Update values in test_flagfile to be different
* Switch all xenapi async plugin calls to be sync
* Hack to fixup absolute pybasedir in nova.conf.sample
* fixup ldapdns default config
* Use cache='none' for all disks
* Update cfg from openstack-common
* Add pybasedir and bindir options
* Simply & unify console handling for libvirt drivers
* Cleanup XenAPI tests
* fix up nova-manage man page
* Don't use glance when verifying images
* Fixes os-volume/snapshot delete
* Use a high number for our default mac addresses
* Simplify unnecessary XenAPI Async calls to be synchronous
* Remove an obsolete FIXME comment
* Fixing image snapshots server links
* Wait for rescue VM shutdown to complete before destroying it
* Renaming user friendly fault name for HTTP 409
* Moving nova/network tests to more logical home
* Change a fake classes variable to something other than id
* Increase logging for xenapi plugin glance uploads
* Deprecate carrot rpc code
* Improve vnc proxy docs
* Require a more recent version of glance
* Make EC2 API a bit more user friendly
* Add kwargs to RequestContext __init__
* info_cache is related to deleted instance
* Handle kwargs in deallocate_fixed_ip for FlatDHCP
* Add a few missing tests regarding exception codes
* Checks image virtual size before qemu-img resize
* Set logdir to a tempdir in test_network
* Set lock_path to a tempdir in TestLockCleanup
* Exceptions unpacking rpc messages shouldn't hang the daemon
* Use sqlalchemy reflection in migration 080
* Late load rabbit_notifier in test_notifier
* boto shouldn't be required for production deploys
* Don't use ec2 IDs in scheduler driver
* pyflakes cleanups on libvirt/connection.py
* Validate VDI chain before moving into SR
* Fix racey snapshots
* Don't swallow snapshot exceptions
* allow block migration to talk to glance/keystone
* Remove cruft and broken code from nova-manage
* Update paste file to use service tenant
* Further cleanup of XenAPI
* Fix XML namespaces for limits extensions and versions
* Remove the <acpi/> feature from UML/LXC guests
* setup.py: Fix doc building
* Add adjustable offset to audit_period
* nova-manage: allow use of /32 IP range
* Clear created attributes when tearing down tests
* Fix multi_host column name in setup_networks..
* HACKING fixes, all but sqlalchemy
* Remove trailing whitespaces in regular file
* remove undocumented, unused mpi 'extension' to ec2 metadata
* Minor clarifications for the help strings in nova config options
* Don't use _ for variable name
* Make test_compute console tests more robust
* test_compute stubs same thing multiple times
* Ignore InstanceNotFound when trying to set instance to ERROR
* Cleans up the create_conf tool
* Fix bug 948611. Fix 'nova-manage logs errors'
* api-paste.ini: Add /1.0 to default urlmap
* Adds nova-manage command to convert a flagfile
* bug 944145: race condition causes VM's state to be SHUTOFF
* Cleanup some test docstrings
* Cleans up a bunch of unused variables in XenAPI
* Shorten FLAGS.rpc_response_timeout
* Reset instance to ACTIVE when no hosts found
* Replaces pipelines with flag for auth strategy
* Setup and teardown networks during migration
* Better glance exception handling
* Distinguish rootwrap Authorization vs Not found errors
* Bug #943178: aggregate extension lacks documentation
* Rename files/dirs from 'rabbit' to 'rpc'
* Change references to RabbitMQ to include Qpid
* Avoid running code that uses logging in a thread
* No longer ignoring man/novamanage
* Fixing incorrect use of instance keyword in logging
* Fix rst formatting and cross-references
* Provide a provider for boto.utils
* Only pass image uuids to compute api rebuild
* Finally fix the docs venv bug
* Get rid of all of the autodoc import errors
* Rename DistributedScheduler as FilterScheduler
* Allows new style config to be used for --flagfile
* Add support for lxc consoles
* Fix references to novncproxy_base_url in docs
* Add assertRaises check to tools/hacking.py as N202
* fix restructuredtext formatting in docstrings that show up in the developer guide
* Raise 409 when rescuing instance in RESCUE mode
* Log a certain rare instance termination exception
* Update fixed_ip_associate to not use relationships
* Remove unnecessary code in test setUp/tearDown
* Imported Translations from Launchpad
* Only raw string literals should be used with _()
* assertRaises(Exception, ...) considered harmful
* Added docs on MySQL queries blocking main thread
* Fix test_attach_volume_raise_exception
* Fix test_unrescue to actually test unrescue
* bug #941794 VIF and intf drivers for Quantum Linux Bridge plugin
* Ensures that we don't exceed iptables chain max
* Allows --flat_interface flag to override db
* Use self.mox instead of create a new self.mocker
* Fix test_migrate_disk_and_power_off_exception
* fakes.fake_data_store doesn't exist, so don't reset it
* populate glance 'name' field through ec2-register
* Remove unused _setup_other_managers method from test case
* Remove unused test_obj parameter to setUp()
* Use stubout instead of manually stubbing out os.path.exists
* Remove superfluous __init__ from test case
* Use test.TestCase instead of manually managing stubout
* Handle InstanceNotFound during server update
* Use stubout instead of manually stubbing out versions.VERSIONS
* Remove unused session variable in test setup
* Cleanup swap in _create_vm undo
* Do not invoke kill dnsmasq if no pid file was found
* Fixes for ec2 images
* Retry download_vhd with different glance host each time
* Display error for invalid CIDR
* Remove empty setUp/tearDown methods
* Call super class tearDown correctly
* Fixes bug 942556 and bug 944105
* update copyright, add version information to footer
* Refactor spawn to use UndoManager
* Fail gracefully when the db doesn't speak unicode
* Remove unnecessary setting up and down of mox and stubout
* Remove unnecessary variables from tests
* Ensure image status filter matches glance format
* fix for bug 821252. Smarter default scheduler
* blueprint sphinx-doc-cleanup bug 944381
* Adds soft-reboot support to libvirt
* Minor cleanup based on HACKING
* libvirt driver calls unplug() twice on vm reboot
* Add missing format string type on some exception messages
* Fixing a request-id header bug
* Test creating a server with metadata key too long
* Fixes lp931801 and a key_error
* notifications for delete, snapshot and resize
* Ensure that context read_deleted is only one of 'no', 'yes' or 'only'
* register Cell model, not Zone model
* Option expose IP instead of dnshost in ec2 desc'
* Fix _sync_power_states to obtain correct 'state'
* Ensures that keypair names are only AlphaNumeric
* Cast vcpu_weight to string before calling xen api
* Add missing filters for new root commands
* Destroy VM before VDIs during spawn cleanup
* Include hypervisor_hostname in the extended server attributes
* Remove old ratelimiting code
* Perform image show early in the resize process
* Adds netapp volume driver
* Fixes bug 943188
* Remove unused imports and variables from OS API
* Return empty list when volume not attached
* Be consistent with disabling periodic tasks
* Cast volume-related ids to str
* Fix for bug 942896: Make sure network['host'] is set
* Allow xvd* to be supplied for volume in xenapi
* Initialize progress to 0 for build and resize
* Fix issue starting nova-compute w/ XenServer
* Provide retry-after guidance on throttled requests
* Use constant time string comparisons for auth
* Rename zones table to cells and Instance.zone_name to cell_name
* Ensure temporary file gets cleaned up after test
* Fixes bug 942549
* Use assertDictMatch to keep 2.6 unit tests passing
* Handle case where instance['info_cache'] is None
* sm volume driver: fix backend adding failure
* sm vol driver: Fix regression in sm_backend_conf_update
* TypeError API exceptions get logged incorrectly
* Add NoopFirewallDriver
* Add utils.tempdir() context manager for easy temp dirs
* Check all migrations have downgrade in test_misc
* Remove monkey patching in carrot RPC driver
* Call detach_volume when attach fails
* Do not hit the network_api every poll
* OS X Support fixed, bug 942352
* Make scheduler filters more pluggable
* Adds temporary chown to sparse_copy
* make nova-network usable with Python < 2.6.5
* Re-adds ssl to kombu configuration and adds flags that are needed to pass through to kombu
* Remove unused import
* Make sure detail view works for volume snaphots
* Imported Translations from Launchpad
* Decode nova-manage args into unicode
* Cleanup .rescue files in libvirt driver unrescue
* Fixes cloudpipe extension to work with keystone
* Add missing directive to tox.ini
* Update EC2KeystoneAuth to grab tenant 'id'
* Monkey patch migrate < 0.7.3
* Fixes bug lp#940734 - Adding manager import so AuthMiddleware works
* Clean stale lockfiles on service startup : fixes bug 785955
* Fix nova-manage floating create docs
* Fix MANIFEST.in to include missing files
* Example config_drive init script, label the config drive
* fix unicode triggered failure in AuthManager
* Fix bug 900864 Quantum Manager flag for IP injection
* Include launch_index when creating instances
* Copy data when migration dst is on a different FS
* bigger-than-unit test for cleanup_running_deleted_instances
* Nova options tool enhancements
* Add hypervisor_hostname to compute_nodes table and use it in XenServer
* Fixes error if Melange returns no networks
* Print error if nova-manage should be run as root
* Don't delete security group in use from OS API
* nova-network can't deallocate ips from deleted instances
* Making link prefixes support https
* Prevent infinite loop in PublishErrorsHandler
* blueprint host-aggregates: host maintenance - xenapi implementation
* bug 939480
* libvirt vif-plugging fixes. Fixes bug 939252 , bug 939254
* Speeding up resize down with sparse_copy
* Remove network_api fallback for info_cache from APIs
* Improve unit test coverage per bug/934566
* Return 40x for flavor.create duplicate
* refactor a conditional for testing and understanding
* Disable usb tablet support for LXC
* Add Nexenta volume driver
* Improve unit test coverage per bug/934566
* nova-manage: Fix 'fixed list'
* Add lun number to provider_location in create_volume * Fixes bug 938876
* Fix WeightedHost
* Fix instance stop in EC2 create_image
* blueprint host-aggregates: improvements and clean-up
* Move get_info to taking an instance
* Support fixed_ip range that is a subnet of the network block
* xenapi: nova-volume support for multiple luns
* Fix error that causes 400 in flavor create
* Makes HTTP Location Header return as utf-8 as opposed to Unicode
* blueprint host-aggregates: host maintenance
* blueprint host-aggregates: xenapi implementation
* Rework base file checksums
* Avoid copying file if dst is a directory
* Add 'nova-manage export auth'
* Alter output format of volume types resources
* Scheduler notifications added
* Don't store connection pool in RpcContext
* Fix vnc docs: novaclient now supports vnc consoles
* Clarify use of Use of deprecated md5 library
* Extract get_network in quantum manager
* Add exception SnapshotIsBusy to be handled as VolumeIsBusy
* Exception cleanup
* Stop ignoring E202
* Support tox-based unittests
* Add attaching state for Volumes
* Fix quantum get_all_networks() signature (lp#936797)
* Escape apostrophe in utils.xhtml_escape() (lp#872450)
* Backslash continuations (nova.api.openstack)
* Fix broken method signiture
* Handle OSError which can be thrown when removing tmpdir. Fixes bug 883326
* Update api-paste.ini with new auth_token settings
* Imported Translations from Launchpad
* Don't tell Qpid to reconnect in a busy loop
* Don't inherit controllers from each other, we don't want the methods of our parent
* Improve unit test coverage per bug/934566
* Setting access ip values on server create
* nova.conf sample tool
* Imported Translations from Launchpad
* Add support for admin_password to LibVirt
* Add ephemeral storage to flavors api
* Resolve bug/934566
* Partial fix for bug 919051
* fix pre_block_migration() interaction with libvirt cache
* Query directly for just the ip
* bug 929462: compile_diagnostics in xenapi erronously catch XenAPI.Failure
* Use new style instance logging in compute api
* Fix traceback running instance-usage-audit
* Actual fix for bug 931608
* Support non-UTC timestamps in changes-since filter
* Add additional information to servers output
* Adding traceback to async faults
* Pulls the main components out of deallocate
* Add JSONFormatter
* Allow file logging config
* LOG.exception does not take an exc_info keyword
* InstanceNotFound exceptions for terminate_intance now Log warning instead of throwing exeptions
* bug 933620: Error during ComputeManager._poll_bandwidth_usage
* Make database downgrade works
* Run ovs-ofctl as root
* 077_convert_to_utf8: Convert *all* FK tables early
* Fix bug 933147 Security group trigger notifications
* Fixes nova-volume support for multiple luns
* Normalize odd date formats
* Remove all uniqueness constraints in migration 76
* Add RPC serialization checking, fix exposed problems
* Don't send a SQLAlchemy model over rpc
* Adds back e2fsck exit code checking
* Syncs vncviewer mouse cursor when connected to Windows VMs
* Backslash continuations (nova.tests)
* The security_group name should be an XML attribute
* Core modifications for future zones service
* Remove instance_get stubs from server action tests
* removed unused method and added another test
* Enables hairpin_mode for virtual bridge ports, allowing NAT reflection
* Removed zones from api and distributed scheduler
* Fix bug 929427
* Tests for a melange_ipam_lib, who is missing tests
* Create a flag for force_to_raw for images
* Resolve bug/927714 -- get instance names from db
* Fix API extensions documentation, bug 931516
* misc networking fixes
* Print friendly message if no floating IPs exist
* Catch httplib.HTTPException as well
* Expand Quantum Manager Unit Tests + Associated Fixes
* bw_usage takes a MAC address now
* Adding tests for NovaException printing
* fix a syntax error in libvirt.attach_volume() with lxc
* Prevent Duplicate VLAN IDs
* tests: fix LdapDNS to allow running test_network in isolation
* Fix the description of the --vnc_enabled option
* Different exit code in new versions of iscsiadm
* improve injection diagnostics when nbd unavailable. Bug 755854
* remove unused nwfilter methods and tests
* LOG.exception only works while in an exception handler
* _() works best with string literals
* Remove unnecessary constructors for exceptions
* Don't allow EC2 removal of security group in use
* improve stale libvirt images handling fix. Bug 801412
* Added resize support for Libvirt/KVM
* Update migration 076 so it supports PostgreSQL
* Replace ApiError with new exceptions
* Simple way of returning per-server security groups
* Declare deprecated auth flag before its used
* e2fsck needs -y
* Standardize logging delaration and use
* Changing nova-manage error message
* Fix WADL/PDF docs referenced in describedby links
* bug 931604: improve how xenapi RRD records are retrieved
* Resolve bug/931794 -- add uuid to fake
* Use new style instance logging in compute manager
* clean pyc files before running unit tests
* Adding logging for 500 errors
* typo fix
* run_tests.sh fix
* get_user behavior in ldapdriver
* Fsck disk before removing journal
* Don't query database with an empty list for IN clause
* Use stubs in libvirt/utils get_fs_info test
* Adding (-x | --stop) option back to runner.py
* Remove duplicate variable
* Fixing a unicode related metadata bug
* bug 931356: nova-manage prints libvirt related warnings if libvirt isn't installed
* Make melange_port an integer
* remove a private duplicate function
* Changes for supporting fast cloning on Xenserver. Implements blueprint fast-cloning-for-xenserver 1. use_cow_images flag is reused for xenserver to check if copy on write images should be used. 2. image-id is used to tag an image which has already been streamed from glance. 3. If cow is true, when an instance of an image is created for the first time on a given xenserver, the image is streamed from glance and copy on write disk is created for the instance. 4. For subsequent instance creation requests (of the same image), a copy on write disk is created from the base image that is already present on the host. 5. If cow is false, when an instance of an image is created for the first time on a host, the image is streamed from glance and its copy is made to create a virtual disk for the instance. 6. For subsequent instance creation requests, a copy of disk is made for creating the disk for the instance. 7. Snapshot creation code was updated to handle cow=true. Now there can be upto 3 disks in the chain. The base disk needs to be uploaded too. 8. Also added a cache_images flag. Depending on whether the flag is turned on on not, images will be cached on the host
* Completes fix for LP #928910 - libvirt performance
* Add some more comments to _get_my_ip()
* remove unused and buggy function from S3ImageService
* Fix minor typo in runner.py
* Remove relative imports from scheduler/filters
* Converting db tables to utf8
* remove all instance_type db lookups from network
* Remedies LP Bug #928910 - Use libvirt lookupByName() to check existence
* Force imageRef to be a string
* Retry on network failure for melange GET requests
* Handle network api failures more gracefully
* Automatic confirmation of resizes on libvirt
* Fix exception by passing timeout as None
* Extend glance retries to show() as well
* Disable ConfigParser interpolation (lp#930270)
* fix FlatNetworkTestCase.test_get_instance_nw_info
* remove unused and buggy function from baremetal proxy
* Remove unused compute_service from images controller
* Backslash continuations (nova.virt.baremetal)
* fixed bug 928749
* Log instance id consistently inside the firewall code
* Remove the last of the gflags shim layer
* Fix disk_config typo
* Pass instance to log messages
* Fix logging in xenapi vmops
* Ensures that hostId's are unique
* Fix confirm_resize policy handling
* optimize libvirt image cache usage
* bug 929428: pep8 validation on all xapi plugins
* Move translations to babel locations
* Get rid of distutils.extra
* Backslash continuations (network, scheduler)
* Remove unnecessary use of LoopingCall in nova/virt/xenapi/vm_utils.py
* Stop using LoopingCall in nova.virt.xenapi_conn:wait_for_task()
* Handle refactoring of libvirt image caching
* linux_net: Also ignore shell error 2 from ip addr
* Consistently update instance in nova/compute/manager.py
* Use named logger when available
* Fix deprecated warning
* Add support for LXC volumes
* Added ability to load specific extensions
* Add flag to include link local in port security
* Allow e2fsck to exit with 1
* Removes constraints from instance and volume types
* Handle service failures during finish_resize gracefully
* Set port security for all allocated ips
* Move connection pool back into impl_kombu/qpid
* pep8 check on api-paste.ini when using devstack
* Allows test_virt_drivers to work when run alone
* Add an alias to the ServerStartStop extension
* tests.integrated fails with devstack
* Backslash continuations (nova.virt)
* Require newer versions of SA and SA-Migrate
* Optimizes ec2 keystone usage and handles errors
* Makes sure killfilter doesn't raise ValueError
* Fixes volume snapshotting issues and tests
* Backslash continuations (misc.)
* nova-rootwrap: wait() for return code before exit
* Fix bug 921814 changes handling of adminPass in API
* Send image properties to Glance
* Check return code instead of output for iscsiadm
* Make swap default to vdb if there is no ephemeral
* Handle --flagfile by converting to .ini style
* Update cfg from openstack-common
* Fix xvpvncproxy error in nova-all (lp#928489)
* Update MANIFEST.in to account for moved schemas
* Remove ajaxterm from Nova
* Adding the request id to response headers. Again
* Update migration to work when data already exists
* Fix support for --flagfile argument
* Implements blueprint heterogeneous-tilera-architecture-support
* Add nova/tests/policy.json to tarball
* Fix quantum client filters
* Store the correct tenant_id/project_id
* dont show blank endpoint headers
* Pass in project_id in ext. authorizer
* Fix _poll_bandwidth_usage if no network on vif
* Fix nova.virt.firewall debugging message to use UUID
* Fix debugging log message to print instance UUID
* mkfs takes vfat, not fat32
* Pass partition into libvirt file injection
* bug 924266: connection_type and firewall_driver flags mismatch
* bug 927507: fix quantum manager get_port_by_attachment
* Fix broken flag in test_imagecache
* Don't write a dns directive if there are no dns records in /etc/network/interfaces
* Imported Translations from Launchpad
* Backslash continuations (nova.db)
* Add initiator to initialize_connection
* Allows nova to read files as root
* Re-run nova-manage under sudo if unable to read conffile
* Fix status transition when reverting resize
* Adds flags for href prefixes
* X_USER is deprecated in favor of X_USER_ID
* Move cfg to nova.openstack.common
* Use Keystone Extension Syntax for EC2 Creds
* Remove duplicate instances_path option
* Delete swap VDI if not used
* Raise ApiError in response to InstanceTypeNotFound
* Rename inst in _create_image, and pass instance to log msgs
* Fix bug #924093
* Make sure tenant_id is populated
* Fix for bug 883310
* Increased coverage of nova/auth/dbdriver.py to 100%. Fixes 828609
* Make crypto use absolute imports
* Remove duplicate logging_debug_format option
* blueprint nova-image-cache-management phase1
* Set rescue instance hostnames appropriately
* Throw an user error on creating duplicate keypairs Fixes bug 902162
* Fixes uuid lookup in virtual interfaces extension
* Add comments to injected keys and network config
* Remove hard coded m1.tiny behavior
* Fix disassociation of fixed IPs when using FlatManager
* Provides flag override for vlan interface
* remove auto fsck feature from file injection. Bug 826794
* DRYing up Volume/Compute APIRouters
* Excise M2Crypto!
* Add missing dev. Fixes LP: #925607
* Capture bandwidth usage data before resize
* Get rid of DeprecationWarning during db migration
* Don't block forever for rpc.(multi)call response
* Optionally disable file locking
* Avoid weird test error when mox is missing
* fix stale libvirt images on download failure. Bug 801412
* cleanup test case to use integers not strings
* Respect availability_zone parameter in nova api
* Fix admin password skip check
* Add support for pluggable l3 backends
* Improve dom0 and template VM avoidance
* Remove Hyper-V support
* Fix logging to log correct filename and line numbers
* Support custom routes for extensions
* Make parsing of usage stats from XS more robust
* lockfile.FileLock already appends .lock
* Ties quantum, melange, and nova network model
* Make sure multiple calls to _get_session() aren't nested
* bug 921087: i18n-key and local-storage hard-coded in xenapi
* optimize libvirt raw image handling. Bug 924970
* Boto 2.2.x failes. Capping pip-requires at 2.1.1
* fixed bug 920856
* Expand policies for admin_actions extension
* Correct checking existence of security group rule
* Optionally pass a instance uuid to log methods
* remove unsupported ec2 extensions
* Fix VPN ping packet length
* Use single call in ExtendedStatus extension
* Add mkswap to rootwrap
* Use "display_name" in "nova-manage vm list"
* Fix broken devref docs
* Allow for auditing of API calls
* Use os.path.basename() instead of string splitting
* Remove utils.runthis()
* Empty connection pool after test_kombu
* Clear out RPC connection pool before exit
* Be more explicit about emptying connection pool
* fixes melange ipam lib
* bug 923798: On XenServer the DomU firewall driver fails with NotImplementedError
* Return instancesSet in TerminateInstances ec2 api
* Fix multinode libvirt volume attachment lp #922232
* Bug #923865: (xenapi driver)instance creation fails if no guest agent is avaiable for admin password configuration
* Implementation of new Nova Volume driver for SolidFire ISCSI SAN
* Handle kepair delete when not found
* Add 'all_tenants' filter to GET /servers
* Use name filter in GlanceImageService show_by_name
* Raise 400 if bad kepair data is provided
* Support file injection on boot w/ Libvirt
* Refactor away the flags.DEFINE_* helpers
* Instances to be created with a bookmark link
* fix `nova-manage image convert` exception
* Added validation of name when creating a new keypair
* Ignore case in policy role checks
* Remove session arg from sm_backend_conf_update
* Remove session arguments from db.api
* Add a note explaining why unhandled exceptions shouldn't be returned to users
* Remove fetching of networks that weren't created via nova-manage
* uses the instance uuid in libvirt by introducing a new variable 'uuid' for the used template instead of using a random uuid in libvirt
* Fixing a rebuild race condition bug
* Fixes bug 914418
* Remove LazySerializationMiddleware
* Bug #921730: plugins/xenserver/xenapi/etc/xapi.d/plugins/objectstore no longer in use
* Adding live migration server actions
* bug 921931: fix Quantum Manager VM launch race condition
* Fix authorization checks for simple_usage.show
* Simplify somewhat complicated reduce() into sum()
* Ignore connection_type when no instances exist
* Add authorization checks to flavormanage extension
* rootwrap: Fix KillFilter matching
* Fix uptime calculation in simple_usage
* Fixing rebuilds on libvirt, seriously
* Don't pass filter_properites to managers
* Fixing rebuilds on libvirt
* Fix bug 921715 - 'nova x509-create-cert' fails
* Return 403 instead of 401 when policies reject
* blueprint host-aggregates: OSAPI extensions
* blueprint host-aggregates: OSAPI/virt integration, via nova.compute.api
* Fixes bug 921265 - i'nova-manage flavor create|list'
* Remove unused flags.Help*Flag
* Convert vmwareapi code to UNIX style line endings
* Blueprint xenapi-provider-firewall and Bug #915403
* Adds extension for retrieving certificates
* Add os-start/os-stop server actions to OSAPI
* Create nova cert worker for x509 support
* Bug #916312: nova-manage network modify --network flag is inconsistent
* Remove unused nova/api/mapper.py
* Add nova.exception.InvalidRPCConnectionReuse
* Add support for Qpid to nova.rpc
* Add HACKING compliance testing to run_test.sh
* Remove admin_only ext attr in favor of authz
* usage: Fix time filtering
* Add an API extension for creating+deleting flavors
* extensions: Allow registering actions for create + delete
* Explicitly encode string to utf8 before passing to ldap
* Make a bunch of dcs into single-entry lists
* Abstract out _exact_match_filter()
* Adds a bandwidth filter DB call
* KVM and XEN Disk Management Parity
* Tweak api-paste.ini to prepare for a devstack change
* Remove deprecated serialization code
* Add affinity filters updated to use scheduler_hints and have non-douchey names
* Do not output admin_password in debug logs
* Handle error in associate floating IP (bug 845507)
* Brings back keystone middleware
* Remove sensitive info from rpc logging
* Error out instance on set password failure
* Fixed limiting for flavors
* Adds availability zone filter
* Fixes nova-manage fixed list
* API version check cleanups
* ComputeNode Capacity support
* blueprint host-aggregates: maintenance operations to host OSAPI exts
* Add a specific filter for kill commands
* Fix environment passing in DnsmasqFilter
* Cleanups for rootwrap module
* Fix 'nova-manage config list'
* Add context and request spec to filter_properties
* Allow compute manager prep_resize to accept kwargs
* Adds isolated hosts filter
* Make start_instance cast directly to compute host
* Refactor compute api messaging calls to compute manager
* Refactor test_scheduler into unit tests
* Forgot to update chance scheduler for ignore_hosts change
* Add SchedulerHints compute extension
* Add floating IP support to Quantum Manager
* Support filter based on CPU core (over)allocation
* bug 917397
* Add option to force hosts to scheduler
* Change the logic for deleting a record dns_domains
* Handle FlavorNotFound on server list w/ filter
* ERROR out instance if unrescue fails
* Fix xenapi rescue without swap
* Pull out ram_filter into a separate filter
* pass filter_properties into scheduling requests for run_instance
* Fixes bug #919390 - Block Migration fails when keystone is un use
* Fix nova-manage floating list (fixes bug 918804)
* Imported Translations from Launchpad
* scheduler host_manager needs service for filters
* Allow Quantum Manager to run in "Flat" mode
* aws/ec2 api validation
* Fix for bug 918502
* Remove deprecated extension code
* Validating image id for rebuild
* More cleanup of Imports to match HACKING
* chmod nova-logspool
* nova/network: pass network_uuid to linuxnet_interface_driver and vif driver
* Clean up crypto.py
* Fix missing imports and bad call caught by pyflakes
* Clarify error messages for admin passwords
* Log uuid when instances fail to spawn
* Removed references to FLAGS.floating_ip_dns_domains
* Removed some vestigial default args from DNS drivers
* Allow config of vncserver_proxyclient_address
* Rename 'zone' to 'domain.'
* disk_config extension now uses OS prefix
* Do not write passwords to verbose logs. bug 916167
* Automatically clean up DNS when a floating IP is deallocated
* Fix disassociating of auto assigned floating ips
* Cleanup Imports to match HACKING guidelines
* Added an LDAP/PowerDNS driver
* Add dns domain manipulation to nova
* fixes bug lp914962
* Fixed bug 912701
* Fix bug #917615
* Separate scheduler host management
* Set instance_ref property when creating snapshots
* Implements blueprint vnc-console-cleanup
* Rebuild/Resize support for disk-config
* Allow instances in 'BUILD' state to be deleted
* Stop allowing blank image names on snapshot/backup
* Only update if there are networks to update
* Drop FK constraint if it exists in migration 064
* Fix an error that prevents message from getting substituted
* blueprint host-aggregates
* Add missing scripts to setup.py (lp#917676)
* Fixes bug 917128
* Clean up generate fingerprint
* Add policy checking to nova.network.api.API
* Add default policy rule
* Super is not so super
* Fixed the log line
* Add tests for volume list and detail through new volume api, and fix error that the tests caught
* Typofix for impl_kombu
* Refactoring logging _log function
* Update some extensions (1)
* DECLARE osapi_compute_listen_port for auth manager
* Increase robustness of image filtering by server
* Update some extensions (2)
* Implement BP untie-nova-network-models
* Add ipv4 and ipv6 validation
* greenlet version inconsistency
* Add policy checks to Volume.API
* Remove unused extension decorator require_admin
* Fix volume api typo
* Convert nova.volume.api.API to use volume objects
* Remove a whole bunch of unused imports
* have all quota errors return an http 413
* This import is not used
* Refactor request and action extensions
* Prefixing the request id with 'req-' to decrease confusion when looking at logs
* Fixing a bug that was causing the logging to display the context info for the wrong user. bug: 915608
* Modify the fake ldap driver to fix compatibility
* Create an instance DNS record based on instance UUID
* Implements blueprint separate-nova-volumeapi
* Implement more complete kombu reconnecting
* First implementation of bp/live-migration-resource-calc
* Remove 'status' from default snapshot properties
* Clean up disk_format mapping in xenapi.vm_utils
* Remove skipping of 2 tests
* Make authz failures use proper response code
* Remove compute.api.API.add_network_to_project
* Adds test for local.py
* Fix policy import in nova.compute.api
* Remove network_api from Servers Controller
* minor fix in comment
* Updates linux_net to ignore some shell errors
* Add policy checks to Compute.API
* Ensure nova is compatible with WebOb 1.2+
* improve handling of the img_handlers config list
* Unbreak start instance and fixes bug 905270
* catch InstanceInvalidState in more places
* Fix some cfg test case naming conflicts
* Remove 'location' from GlanceImageService
* Makes common/cfg.py raise AttributeError
* Call to instance_info_cache_delete to use uuid
* Bug #914907: register_models in db/sqlalchemy/models.py references non-existent ExportDevice
* Update logging in compute manager to use uuids
* Do not overwrite project_id from request params
* Add optional revision field to version number
* Imported Translations from Launchpad
* nova-manage floating ip fixes
* Add a modify function to the floating ip dns api
* Adding the request id to response headers
* Add @utils.deprecated()
* Blueprint xenapi-security-groups
* Fix call to compute_api.resize from _migrate
* Fix metadata mapping in s3._s3_parse_manifest
* Fix libguestfs operation with specified partitions
* fix reboot_instance typo
* Fix bad test cases in smoketest
* fix bug 914049: private key in log
* Don't overwrite local context on elevated
* Bug 885267: Fix GET /servers during instance delete
* Adds support for floating ip pools
* Adds simple policy engine support
* Refactors utils.load_cached_file
* Serialization, deserialization, and response code decorators
* Isolate certain images on certain hosts
* Workaround bug 852095 without importing mox
* Bug #894683: nova.service does not handle attribute specific exceptions and client hangs
* Bug #912858: test_authors_up_to_date does not deal with capitalized names properly
* Adds workaround check for mox in to_primitive
* preload cache table and keep it up to date
* Use instance_properties in resize
* Ensure tests are python 2.6 compatible
* Return 409s instead of 500s when deleting certain instances
* Update HACKING.rst
* Tell users what is about to be installed via sudo
* Fix LP912092
* Remove small unneeded code from impl_kombu
* Add missing space between XML attributes
* Fix except format to match HACKING
* Set VLAN MTU size when creating the vlan interface
* Add instance_name field to console detail command which will give the caller the necessary information to actually connect
* Fix spelling of variable
* Remove install_requires processing
* Send event notifications for suspend and resume
* Call mkfs with the correct order of arguments
* Fix bug 901899
* Fix typo in nova/rootwrap/compute.py. Fixes LP: #911880
* Make quantum_use_dhcp falsifiable
* Fixing name not defined
* PEP8 type comparison cleanup
* Add cloudpipe/vpn api to openstack api contrib
* Every string does not need to be internationalized
* Adds running_deleted_instance_reaper task
* libvirt: implements boot from ISO images
* Unused db.api cleanup
* use name gateway_v6 instead of gateway6
* PEP8 remove direct type comparisons
* Install a good version of pip in the venv
* Bug #910045: UnboundLocalError when failing to get metrics from XenAPI hosts
* re-raising exceptions fix
* use dhcp_lease_time for dnsmasq. Fix bug 894218
* Clean up pylint errors in top-level files
* Ensure generated passwords meet minimum complexity
* Fixing novaclient_converter NameError
* Bug 820059: bin/nova-manage.py VpnCommands.spawn calls non-existant method VpnCommands._vpn_for - fixed
* Bug 751229: Floating address range fixed
* Brings some more files up to HACKING standards
* Ensure queue is declared durable so messages aren't dropped
* Create notification queues as durable
* Adding index to instances project_id column
* Add an API for associating floating IPs with DNS entries
* 'except:' to 'except Exception:' as per HACKING
* Adds EC2 ImportKeyPair API support
* Take the availability zone from the instance if available
* Update glance Xen plugin w/ purge props header
* Converting zones into true extension
* Convering /users to admin extension
* Add a DECLARE for dhcp_doamin flag to metadata handler
* Support local target for Solaris, use 'safe' command-line processing
* Add 'os-networks' extension
* Converting accounts resource to admin extension
* Add exit_code, stdout, stderr etc to ProcessExecutionException
* Fixes LP bug #907898
* Switch extension namespace
* Refactor Xen Vif drivers. Fixes LP907850
* Remove code in migration 064 to drop an fkey that does not exist. Fixes LP bug #907878
* Help clarify rpc API with docs and a bit of code
* Use SQLAlchemy to drop foreign key in DB migrate
* Move createBackup server action into extension
* Bug#898257 support handling images with libguestfs
* Bug#898257 abstract out disk image access methods
* Move 'actions' subresource into extension
* Make os-server-diagnostics extension admin-only
* Remove unneeded broken test case
* Fix spelling typos in comments
* Allow accessIPv4 and accessIPv6 on rebuild action
* Move 'diagnostics' subresource to admin extension
* Cleaning up imports in compute and virt
* Cleaning up imports in nova.api
* Make reroute_compute use functools.wraps. Fixes LP bug #906945
* Removing extra code from servers controller
* Generate instance faults when instance errors
* Clarify NoValidHost messages
* Fix one last bug in os-console-output extension
* Fix os-console-output extension integration
* Set Location header in server create and rebuild actions
* Consistently use REBUILDING vm_state
* Improve the minidns tests to handle zone matching
* Remove unused FLAGS.block_size
* Make UUID format checking more correct
* Set min_ram and min_disk on snapshot
* Add support for port security to QuantumManager
* Add a console output action to servers
* Creating mechanism that loads Admin API extensions
* Document return type from utils.execute()
* Renamed the instance_dns_driver to dns_driver for more general use
* Specify -t rsa when calling ssh-keygen
* create_export and ensure_export should pass up the return value, to update the database
* Imported Translations from Launchpad
* avoid error and trace on dom.vcpus() in lxc
* Properly passes arg to run_iscsiadm to fix logout
* Makes disassociate by timeout work with multi-host
* Call get_instance_nw_info with elevated context, as documented in nova/network/manager.py
* Adds missing joinedload for vif loading
* missing comments about extensions to ec2
* Pull resource extensions into APIRouter
* IPAM drivers aren't homogenous bug 903230
* use env to find 'false'. Fix for OS X
* Fix scheduler error handler
* Starting work on exposing service functionality
* Bugfix for lp904932
* Ensure fkey is dropped before removing instance_id
* Fixes bug 723235
* nova.virt.libvirt.firewall: set static methods
* Expose Asynchronous Fault entity in the OSAPI
* Fix nova-manage flags declaration
* Remove useless flags declaration
* Remove useless input_chain flags
* Make XenAPI agent configuration synchronous
* Switch disk_config extension to use one DB query
* Update utils.execute so that check_exit_code handles booleans. Fixes LP bug #904560
* Rename libvirt_uri to uri
* Make libvirt_uri a property
* Making pep8 output less verbose
* Refactors handling of detach volume
* Fixes bug 887402
* Bug 902626
* Make various methods static
* Pass additional information from nova to Quantum
* Refactor vm_state and task_state checking
* Updates OVS rules applied to IPv4 VIFs
* Follow-on to I665f402f to convert rxtx_quota to rxtx_factor in nova-manage and a couple of tests
* Make sure the rxtx_cap is used to set qos info
* Fix some errors found by pychecker
* Fix tgtadm off by one error. Fixes bug #871278
* Sanitize EC2 manifests and image tarballs
* floating-ip: return UUID of instance rather than ID
* Renaming instance_actions.instance_id column to instance_uuid. blueprint: internal-uuids
* Fix for bug 902175
* fixed typos. removed an unused import
* Vm state management and error states
* Added support for creating nova volume snapshots using OS API
* Fix error when subnet doesn't have a cidr set
* bug 899767: fix vif-plugging with live migration
* Fixing snapshot failure task_state
* Imported Translations from Launchpad
* Moves find config to utils because it is useful
* fixed_ips by vif does not raise
* Add templates for selected resource extensions
* Fix network forwarding rule initialization in QuantumManager
* _check_image_size returns are consistent
* Fixed the perms on the linux test case file so that nose will run it
* Add preparation for asynchronous instance faults
* Add templates for selected resource extensions
* Use more informative message when violating quota
* Log it when we get a lock
* removing TODO as we support Windows+XenServer and have no plans to support quiesce or VSS at the moment
* Adds network model and network info cache
* Rename .nova-venv to .venv
* revert using git for novaclient
* Port nova.flags to cfg
* Make cfg work on python 2.6
* Relax novaclient and remove redis dependency
* Relax dependency on boto 1.9b and nova-adminclient
* Make QuantumManager no longer depend on the projects table
* Imported Translations from Launchpad
* Fix for bug 901459
* Updated the test runner module with a sys.path insert so that tests run in and outside a virtual environment
* Add ability to see deleted and active records
* Set instance['host'] to the original host value on revert resize
* Fix race condition in XenAPI when using <object>.get_all
* Clean up snapshot metadata
* Handle the 'instance' half of blueprint public-and-private-dns
* Refactors periodic tasks to use a decorator
* Add new cfg module
* Remove extra_context support in Flags
* A more secure root-wrapper alternative
* Remove bzr related code in tests/test_misc
* Change cloudServersFault to computeFault
* Update associate_floating_ip to use instance objs
* vm_state:=error on driver exceptions during resize
* Use system M2Crypto package on Oneiric, bug 892271
* Update compute manager so that finish_revert_resize runs on the source compute host. Fixes bug #900849
* First steps towards consolidating testing infrastructure
* Remove some remnants of ChangeLog and vcsversion.py generation
* Pass '-r' option to 'collie cluster status'
* Remove remnants of babel i18n infrastructure
* Fixes a typo preventing attaching RBD volumes
* Remove autogenerated pot file
* Make admin_password keyword in compute manager run_instance method match what we send in the compute API. Fixes bug #900591
* remove duplicate netaddr in nova/utils
* cleanup: remove .bzrignore
* add index to instance_uuid column in instances
* Add missing documentation for shared folder issue with unit tests and Python lock file
* Updated nova-manage to work with uuid images Fixes bug 899299
* Add availabity_zone to the refresh list
* Document nova-tarball Jenkins job
* Adds extension documentation for some but not all extensions
* Add templates for selected resource extensions
* EC2 rescue/unrescue is broken, bug 899225
* Better exception handling during run_instance
* Implement resize down for XenAPI
* Fix for EC2 API part of bug 897164
* Remove some unused imports from db
* Replacing instance id's in in xenapi.vmops and the xen plugin with instance uuids. The only references to instance id's left are calls to the wait_for_task() method. I will address that in another branch. blueprint: internal-uuids
* Convert get_lock in compute to use uuids
* Fix to correctly report memory on Linux 3.X
* Replace more cases of instance ids with uuids
* Make run_instance only support instance uuids
* Updates simple scheduler to allow strict availability_zone scheduling
* Remove VIF<->Network FK dependancy
* Adds missing image_meta to rescue's spawn() calls
* Bug #898290: iSCSI volume backend treats FLAGS.host as a hostname
* split rxtx_factor into network and instance_type
* Fixing get_info method implementations in virt drivers to accept instance_name instead of instance_id. The abstract class virt.ComputeDriver defines get_info as: def get_info(self, instance_name). blueprint: internal-uuids
* Fixes bug 767947
* Remove unused ec2.action_args
* Fix typo: priviledges -> privileges
* Bug #896997: nova-vncproxy's flash socket policy port is not configurable
* Convert compute manager delete methods to objects
* Removing line dos line endings in vmwareapi_conn.py
* reboot & rebuild to use uuids in compute manager
* Fix for bug 887712
* Add NAT/gateway support to QuantumManager
* Fix QuantumManager update_dhcp calls
* Fix RPC responses to allow None response correctly
* Use uuids for compute manager agent update
* power_on/power_off in compute manager to use uuids
* Use uuids for file injection
* removed logic of throwing exception if no floating ip
* Adding an install_requires to the setup call. Now you can pip install nova on a naked machine
* Removing obsolete bzr-related clauses in setup.py
* Makes rpc_allocate_fixed_ip return properly
* Templatize extension handling
* start/stop in compute manager to use uuids
* Updating {add,remove}_fixed_ip_from_instance in compute.api and compute.manager to use instance uuid instead of instance id. blueprint internal-uuids
* Use instance uuids for consoles and diagnostics
* Fixes bug 888649
* Fix Bug #891718
* Bug #897091: "nova actions" fails with HTTP 400 / TypeError if a server action has been performed
* Bug #897054: stack crashes with AttributeError on e.reason if the server returns an error
* Refactor a few things inside the xenapi unit tests
* New docs: unit tests, Launchpad, Gerrit, Jenkins
* Fix trivial fourth quote in docstring
* Fix deprecation warnings
* Fix for bug 894431
* Remove boot-from-volume unreachable code path (#894172)
* reset/inject network info in compute to use uuid
* Updating set_admin_password in compute.api and compute.manager to use instance uuids instead of instance ids. Blueprint internal-uuids
* rescue/unrescue in compute manager to use uuids
* Updated development environment docs
* Call df with -k instead of -B1
* Make fakelibvirt python2.6 compatible
* Clean up compute api
* Updating attach/detach in compute.api and compute.manager to use instance uuid instead of instance id. blueprint internal-uuids
* Change compute API.update() to take object+params
* Use XMLDictSerializer for resource extensions
* Updating {add,remove}_security_group in compute.api to use instance uuids instead of instance ids. blueprint internal-uuids
* Extend test_virt_driver to also test libvirt driver
* poll_rebooting_instances passes an instance now
* Revert "Fixes bug 757033"
* Put instances in ERROR state when scheduler fails
* Converted README to RST format
* Workaround xenstore race conditions
* Fix a minor memory leak
* Implement schedule_prep_resize()
* Fixes bug 886263
* snapshot/backup in compute manager to use uuids
* Fixes bug 757033
* Converting tests to use v2
* lock/unlock in compute manager to use uuids
* suspend/resume in compute manager to use uuids
* Refactor metadata code out of ec2/cloud.py
* pause/unpause in compute manager to use uuids
* Creating new v2 namespace in nova.api.openstack
* Add a "libvirt_disk_prefix" flag to libvirt driver
* Added RST docs on how to use gettext
* Refactoring/cleanup of some view builders
* Convert remaining calls to use instance objects
* Make run instances respect availability zone
* Replacing disk config extension to match spec
* Makes sure gateways forward properly
* Convert security_group calls to use instance objs
* Remove hostname update() logic in compute.API
* Fixes bug 890206
* Follow hostname RFCs
* Reference Ron Pedde's cleanup script for DevStack
* Remove contrib/nova.sh and other stale docs
* Separate metadata api into its own service
* Add logging, error handling to the xenstore lib
* Converting lock/unlock to use instance objects
* Deepcopy optparse defaults to avoid re-appending multistrings (#890489)
* install_venv: apply eventlet patch correctly with python 2.7 (#890461)
* Fix multistring flags default handling (#890489)
* Fixing image create in S3ImageService
* Defining volumes table to allow FK constraint
* Converting network methods to use instance objects
* Handle null ramdisk/kernel in euca-describe-images
* Bind engine to metadata in migration 054
* Adding downgrade for migration 57 plus test
* Log the URL to an image_ref and not just the ID
* Converting attach_volume to use instance object
* Converting rescue/unrescue to use instance objects
* Converting inject_file to use instance objects
* Bug #888719: openvswitch-nova runs after firstboot scripts
* Bug #888730: vmwareapi suds debug logging very verbose
* Converting consoles calls to use instance objects
* Converting fixed ip calls to use instance objects
* Convert pause/unpause, sus/res to use instance obj
* fix rebuild sha1 not string error
* Verify security group parameters
* Converting set password to use instance objects
* Converting snapshot/backup to use instance objects
* Refactor of QuotaError
* Fix a notification bug when creating instances
* Converting metadata calls to use instance objects
* nova-manage: exit with status 1 if an image registration fails
* Converting start and stop to use instance objects
* Converting delete to use instance objects
* Capture exceptions happening in API layer
* Removed some old cruft
* Add more error handling to glance xenapi plugin
* Fixes bug 871877
* Replace libvirt driver's use of libxml2 with ElementTree
* Extend fake image service to let it hold image data
* Bug #887805 Error during report_driver_status(): 'LibvirtConnection' object has no attribute '_host_state'
* More spelling fixes inside of nova
* Fixes LP878319
* Fix exception reraising in volume manager
* Adding Chuck Short to .mailmap
* Undefine libvirt saved instances
* Split compute api/manager tests within module
* Workaround for eventlet bug with unit tests in RHEL6.1
* Apply M2Crypto fix for all Fedora-based distributions
* Fix failing libvirt test (bug 888250)
* Spelling fixes in nova/api comments
* Get MAC addresses from Melange
* Refactor logging_error into utils
* Converting rebuild to use instance objects
* Converting resize to use instance objects
* Converting reboot to use instance objects
* Reducing the number of compute calls to Glance

essex-1
-------

* Remove duplicate method (2)
* Move tests for extensions to contrib directory
* Remove duplicate method
* Remove debugging print
* Adds extended status information via the Admin API to the servers calls
* Wait until the instance is booted before setting VCPU_params
* changes logging reference in zone_manager.py
* Exception cleanup in scheduler
* Fixing create_vbd call per VolumeHelper refactoring
* Switch glance XenAPI plugin to use urllib2
* Blueprint lasterror
* Move failed instances to error state
* Adding task_states.REBOOTING_HARD
* Set task state to UPDATING_PASSWORD when needed
* Clean up docstrings for faults.Fault and it's usage
* Fix typo in docstring
* Add DHCP support to the QuantumManager and break apart dhcp/gateway
* Change network delete to delete by uuid or cidr
* Bug #886353: Faults raised by OpenStack API Resource handlers fail to be reported properly
* Define faults.Fault.__str__
* Speed up tests a further 35 seconds
* Removing duplicate kernel/ramdisk check in OSAPI
* Remove unnecessary image list in OSAPI
* Add auto-reloading JSON config file support to scheduler
* Change floating-snat to float-snat
* Allows non-admin users to use simple scheduler
* Skip libvirt tests when libvirt not present
* Correcting libvirt tests that were failing
* Fix for launchpad bug #882568
* Gracefully handle Xen resize failure
* Don't update database before resize
* fix bug 816630
* Set nova-manage to executable Fixes LP885778
* Fixing immediate delete after boot on Libvirt
* exception.KeypairNotFound usage correction
* Add local storage of context for logging
* Reserve memory/disk for dom0/host OS
* Speed up tests yet another 45 seconds
* APIs should not wait on scheduler for builds in single zone deployment
* Added some documentation to db.api module docstring
* Updated rst docs to include threading model
* Adds documentation for Xen Storage Manager
* Xen Storage Manager Volume Driver
* Drop extra XML tests and remove _json suffix from names
* Fix empty group_id to be considered invalid
* Stop nova-ajax-console-proxy configuring its own logging
* Bug 884863: nova logs everything to syslog twice
* Log the exception when we get one
* Use fat32 for Windows, linux-swap for Linux swap partitions
* Fix KeyError when passed unknown format of time
* flatten distributed scheduler
* Bug #884534: nova-ajax-console-proxy crashes on shutdown
* Bug 884527: ajax_console_proxy_port needs to be an integer
* Too much information is returned from POST /servers
* Disable SQLite synchronous mode during tests
* Creating uuid -> id mapping for S3 Image Service
* Fix 'begining' typo in system usage data bug 884307
* Fixes lp883279
* Log original dropped exception when a new exception occurs
* Fix lp:861160 -- newly created network has no uuid
* Bug #884018: "stack help" prints stacktrace if it cannot connect to the server
* Optional --no-site-packages in venv
* fixes bug 883233. Added to Authors fix typo in scheduler/driver.py assert_compute_node_has_enough_memory
* Updated NoAuth to account for requests ending in /
* Retry failed SQL connections (LP #876663)
* Removed autogenerated API .rst files
* Fix to a documentation generation script
* Added code to libvirt backend to report state info
* Adding bulk create fixed ips. The true issue here is the creation of IPs in the DB that are not currently used(we are building the entire block). This fix is just a bandaid, but it does cut ~25 seconds off of the quantum tests on my laptop
* Fix overzealous use of faults.Fault() wrapper
* Revert how APIs get IP address info for instances
* Support server uuids with security groups
* Support using server uuids when accessing consoles
* Adding support for retrying glance image downloads
* Fix deletion of instances without fixed ips
* Speed up test suite by 20 seconds
* Removed callback concept on VM driver methods:
* Fix file injection for OSAPI rebuilds. Fixes 881649
* Replaces all references to nova.db.api with nova.db
* venv: update distribute as well as pip
* Fix undefined glance_host in get_glance_client
* Fix concurrency of XenAPI sessions
* Server metadata must support server uuids
* Add .gitreview config file for gerrit
* Convert instancetype.flavorid to string
* Make sure networks returned from get_instance_nw_info have a label
* Use UUIDs instead of IDs for OSAPI servers
* Improve the liveness checking for services
* Refactoring of extensions
* Moves a-zone scheduling into simple scheduler
* Adds ext4 and reiserfs to _mount_filesystem()
* Remove nova dependency on vconfig on Linux
* Upgrade pip in the venv when we build it
* Fixes bug 872459
* Repartition and resize disk when marked as managed
* Remove dead DB API call
* Only log instance actions once if instance action logging is enabled (now disabled by default)
* Start switching from gflags to optparse
* Don't leak exceptions out to users
* Fix EC2 test_cloud timing issues
* Redirects requests from /v#.# to /v#.#/
* Chain up to superclass tearDown in ServerActionsTest
* Updated RST docs: bzr/launchpad -> git/github
* Refactoring nova.tests.api.openstack.test_flavors
* Refactoring image and server metadata api tests
* Refactoring nova.tests.api.openstack.test_servers
* Refactoring nova.tests.api.openstack.test_images
* Utility script that makes enforcing PEP8 within git's pre-commit hook as easy as possible
* Add XML templates
* Remove OSAPI v1.0
* Remove unused flag_overrides from TestCase
* Cancel any clean_reboot tasks before issuing the hard_reboot
* Makes snapshots work for amis. Fixes bug 873156
* Xenapi driver can now generate swap from instance_type
* Adds the ability to automatically issue a hard reboot to instances that have been stuck in a 'rebooting' state for longer than a specified window
* Remove redundant, dead code
* Added vcpu_weight to models
* Updated links in the README that were out of date
* Add INPUT chain rule for EC2 metadata requests (lp:856385)
* Allow the user to choose either ietadm or tgtadm (lp:819997)
* Remove VolumeDriver.sync_exec method (lp:819997)
* Adds more usage data to Nova's usage notifications
* Fixes bug 862637 -- make instance_name_template more flexible
* Update EC2 get_metadata calls to search 'deleted': False. Fixes nova smoke_tests!!!
* Use new ip addr del syntax
* Updating HACKING to make split up imports into three blocks
* Remove RateLimitingMiddlewareTest
* Remove AoE, Clean up volume code
* Adds vcpu_weight column to instance_types table and uses this value when building XenServer instances
* Further changes to the cleaner
* Remove duplicated functions
* Reference orphaned_instance instead of instance
* Continue to the next iteration of the loop if an instance is not found
* Explicit errors on confirm/revertResize failures
* Include original exception in ClassNotFound exception
* Enable admin access to EC2 API server
* Make sure unknown extensions return 404
* Handle pidfile exception for dnsmasq
* Stop returning correct password on api calls
* Restructure host filtering to be easier to use
* Add support for header version parameter to specify API version
* Set error state on spawn error + integration test
* Allow db schema downgrades
* moved floating ip db access and sanity checking from network api into network manager added floating ip get by fixed address added fixed_ip_get moved floating ip testing from osapi into the network tests where they belong
* Adds a script that can automatically delete orphaned VDIs. Also had to move some flags around to avoid circular imports
* Improve access check on images
* Updating image progress to be more granular. Before, the image progress had only 2 states, 0 and 100. Now it can be 0, 25, 50 or 100
* Deallocate ip if build fails
* Ensure non-default FLAGS.logfile_mode is properly converted to an octet
* Moving admin actions to extension
* Fixes bug 862633 -- OS api consoles create() broken
* Adds the tenant id to the create images response Location header Fixes bug 862672
* Fixes bug 862658 -- ec2 metadata issue getting IPs
* Added ==1.0.4 version specifier to kombu in pip-requires to ensure tests pass in a clean venv
* bug lp845714
* install_venv: pip install M2Crypto doesn't work on Fedora
* install_venv: add support for distro specific code
* install_venv: remove versioned M2Crypto dependency
* install_venv: don't use --no-site-packages with virtualenv
* install_venv: pass the --upgrade argument to pip install
* install_venv: refactor out pip_install helper
* Replace socat with netcat
* api.ec2.admin unit tests
* Fixes Bug #861293 nova.auth.signer.Signer now honors the SignatureMethod parameter for SHA1 when creating signatures
* Enforce snapshot cleanup
* bug 861310
* Change 'recurse_zones' to 'local_zone_only'
* Fixes euca-describe-instances failing or not showing IPs
* Fixes a test failure in master
* Fixed bug lp850602. Adding backing file copy operation on kvm block migration
* Add nova-all to run all services
* Snapshots/backups can no longer happen simultaneously. Tests included
* Accept message as sole argument to NovaException
* Use latest version of SQLAlchemy
* Fix 047 migration with SQLAlchemy 0.7.2
* Beef up nova/api/direct.py tests
* Signer no longer fails if hashlib.sha256 is not available. test_signer unit test added
* Make snapshots private by default
* use git config's review.username for rfc.sh
* Raise InsufficientFreeMemory
* Adding run_test.sh artifacts to .gitignore
* Make sure options is set before checking managed_disk setting. Fixes bug 860520
* compute_api create*() and schedulers refactoring
* Removed db_pool complexities from nova.db.sqlalchemy.session. Fixes bug 838581
* Ensure minRam and minDisk are always integers
* Call endheaders when auth_token is None. Fixes bug 856721
* Catch ImageNotFound on image delete in OSAPI
* Fix the grantee group loading for source groups
* Add next links to images requests
* put fully qualified domain name in local-hostname
* Removing old code that snuck back in
* Makes sure to recreate gateway for moved ip
* Fix some minor issues due to premature merge of original code
* * Rework osapi to use network API not FK backref * Fixes lp854585
* Allow tenant networks to be shared with domain 0
* Use ovs-vsctl iface-to-br to look up the bridge associated with the given VIF. This avoids assuming that vifX.Y is attached to xenbrY, which is untrue in the general case
* Made jenkins email pruning more resilient
* Fixing bug 857712
* Adds disk config
* Adding xml schema validation for /versions resource
* Fix bug 856664 overLimit errors now return 413
* Don't use GitPython for authors check
* Fix outstanding pep8 errors for a clean trunk
* Add minDisk and minRam to OSAPI image details
* Fix rfc.sh's check for the project
* Add rfc.sh to help with gerrit workflow
* This patch adds flavor filtering, specifically the ability to flavor on minRam, minDisk, or both, per the 1.1 OSAPI spec
* Add next links for server lists in OSAPI 1.1. This adds servers_links to the json responses, and an extra atom:link element to the servers node in the xml response
* Update exception.wrap_exception so that all exceptions (not just Error and NovaException types) get logged correctly
* Merging trunk
* Adding OSAPI tests for flavor filtering
* This patch adds instance progress which is used by the OpenStack API to indicate how far along the current executing action is (BUILD/REBUILD, MIGRATION/RESIZE)
* Merging trunk
* Fixes lp:855115 -- issue with disassociating floating ips
* Renumbering instance progress migration
* Fixing tests
* Keystone support in Nova across Zones
* trunk merge fixup
* Fix keys in ec2 conversion to make sure not to use unicode
* Adds an 'alternate' link to image views per 3.10 and 3.11 of http://docs.openstack.org/cactus/openstack-compute/developer/openstack-compute-api-1.1/content/LinksReferences.html
* Typo
* Fixing tests
* Fixing tests
* make sure kwargs are strings and not unicode
* Merging trunk
* Adding flavor filtering
* Instance deletions in Openstack are immediate. This can cause data to be lost accidentally
* Makes sure ips are moved on the bridge for nodes running dnsmasq so that the gateway ip is always first
* pep8
* add tests and fix bug when no ip was set
* fix diverged branch
* migration conflict fixed
* clean up based on cerberus review
* clean up based on cerberus review
* Remove keystone middlewares
* fix moving of ips on flatdhcp bridge
* Merged trunk
* merged trunk
* update floating ips tests
* floating ip could have no project and we should allow access
* actions on floating IPs in other projects for non-admins should not be allowed
* floating_ip_get_by_address should check user's project_id
* Pep8 fixes
* Merging trunk
* Refactoring instance_type_get_all
* remove keystone url flag
* merge trunk, fix conflicts
* remove keystone
* Include 'type' in XML output
* Minor cleanup
* Added another unit test
* Fixed unit tests with some minor refactoring
* Fix the display of swap units in nova manage
* Refactored alternate link generation
* pep8 fixes
* Added function to construct a glance URL and unit test
* merge from trunk
* convert images that are not 'raw' to 'raw' during caching to node
* show swap in Mb in nova manage
* Address Soren's comments: * clean up temp files if an ImageUnacceptable is going to be raised Note, a qemu-img execution error will not clean up the image, but I think thats reasonable. We leave the image on disk so the user can easily investigate. * Change final 2 arguments to fetch_to_raw to not start with an _ * use 'env' utility to change environment variables LC_ALL and LANG so that qemu-img output parsing is not locale dependent. Note, I considered the following, but found using 'env' more readable out, err = utils.execute('sh', '-c', 'export LC_ALL=C LANG=C && exec "$@"', 'qemu-img', 'info', path)
* Add iptables filter rules for dnsmasq (lp:844935)
* create disk.local the same way ephemerals are created (LP: #851145)
* merge with trunk r1601
* fix call to gettext
* Fixed --uuid network command in nova-manage to desc to "uuid" instead of "net_uuid"
* removes warning set forth in d3 for deprecated setting of bridge automagically
* Update migration 047 to dynamically lookup the name of the instance_id fkey before dropping it. We can't hard code the name of the fkey since we didn't name it explicitly on create
* added to authors cuz trey said I cant patch otherwise!
* Fixed --uuid network command in nova-manage to desc to "uuid" instead of "net_uuid"
* merged with trunk
* Update migration 047 to dynamically lookup the name of the instance_id fkey before dropping it. We can't hard code the name of the fkey since we didn't name it explicitly on create
* oops, add project_id and 'servers' to next links
* Fixes migration for Mysql to drop the FK on the right table
* Reverted some changes to instance_get_all_by_filters() that was added in rev 1594. An additional argument for filtering on instance uuids is not needed, as you can add 'uuid: uuid_list' into the filters dictionary. Just needed to add 'uuid' as an exact_match_filter. This restores the filtering to do a single DB query
* fix syntax error in exception, remove "Dangerous!" comment
* merged trunk and resolved conflict
* run the alter on the right table
* fix unrelated pep8 issue in trunk
* use dictionary format for exception message
* fix a test where list order was assumed
* Removed the extra code added to support filtering instances by instance uuids. Instead, added 'uuid' to the list of exact_filter_match names. Updated the caller to add 'uuid: uuid_list' to the filters dictionary, instead of passing it in as another argument. Updated the ID to UUID mapping code to return a dictionary, which allows the caller to be more efficient... It removes an extra loop there. A couple of typo fixes
* Reworked the export command to be nova-manage shell export --filename=somefile
* Adds the ability to automatically confirm resizes after the `resize_confirm_window` (0/disabled by default)
* use '_(' for exception messages
* PEP8 cleanup
* convert images that are not 'raw' to 'raw' during caching to node
* now raising instead of setting bridge to br100 and warning as was noted
* * Remove the foreign key and backrefs tying vif<->instance * Update instance filtering to pass ip related filters to the network manager * move/update tests
* Adds an optional flag to force dhcp releases on instance termination. This allows ips to be reused without having to wait for the lease to timeout
* remove urllib import
* Fixing case where OSAPI server create would return 500 on malformed body
* Fix the issue with the new dnsmasq where it tries and fails to bind to ipv6 addresses
* Merging trunk
* Renaming progress migration to 47
* merge with trunk
* Added unit test
* Corrected the status in DB call
* don't try to listen on ipv6 addresses, or new dnsmasq goes boom
* make our own function instead of using urllib.urlencode since we apparently don't suppor urlencoded strings yet
* Merged trunk
* remove unused import
* merge the sknurt
* remove the polymorph
* Fix typo in comment
* Fixes the handling of snapshotting in libvirt driver to actually use the proper image type instead of using raw for everything. Also cleans up an unneeded flag. Based on doude's initial work
* merge with trunk
* removing extra newline
* catching AttributeError and adding tests
* Remove vestigial db call for fixed_ips
* Fixes the user credentials for installing a config-drive from imageRef
* Some Linux systems can also be slow to start the guest agent. This branch extends the windows agent timeout to apply to all systems
* remove extra line
* get the interface using the network and instance
* flag typo
* add an optional flag to force dhcp release using dnsmasq-utils
* Fix user_id, project_id reference for config_drive with imageRefs
* Fix a bug that would make spawning new instances fail if no port/protocol is given (for rules granting access for other security groups)
* When swap is specified as block device mapping, its size becomes 0 wrongly. This patch make it set to correct size according to instance_type
* Fix pep8 issues
* fixed grant user, added stdout support
* This changes the interpretation of 'swap' for an instance-type to be in MB rather than GB
* Fixing list prepend
* Merging trunk
* create disk.local the same way ephemerals are created (LP: #851145)
* Fix failing test
* Authorize to start a LXC instance withour, key, network file to inject or metadata
* Update the v1.0 rescue admin action and the v1.1 rescue extension to generate 'adminPass'. Fixes an issue where rescue commands were broken on XenServer. lp#838518
* pep8
* merge the trunks
* update tests to return fake_nw_info that is valid for the pre_live_migrate
* make sure to raise since the tests require it
* Pep8 Fix
* Update test_volumes to use FLAGS.password_length
* Zero out the progress when beginning a resize
* Adding migration progress
* Only log migration info if they exist
* remove getting fixed_ips directly from the db
* removed unused import
* Fixes libvirt rescue to use the same strategy as xen. Use a new copy of the base image as the rescue image. It leaves the original rescue image flags in, so a hand picked rescue image can still be used if desired
* Fixing tests, PEP8 failures
* fix permissions
* Add a FakeVirDomainSnapshot and return it from snapshotCreateXML. Fixes libvirt snapshot tests
* merge the trunks
* Merged trunk
* I am using iputils-arping package to send arping command. You will need to install this package on the network nodes using apt-get command apt-get install iputils-arping
* Removed sudo from the arguments
* Add a FakeVirDomainSnapshot and return it from snapshotCreateXML. Fixes libvirt snapshot tests
* merge from trunk
* Make sure grantee_group is eagerly loaded
* Merged trunk
* compute/api: swap size issue
* Update exception.wrap_exception so that all exceptions (not just Error and NovaException types) get logged correctly
* Removes the on-disk internal libvirt snapshot after it has been uploaded to glance
* cleaned up
* remove debugging
* Merging trunk
* Allowing resizes to the same machine
* trunk merge
* updates Exception.NoMoreFixedIps to subclass NovaException instead of Error
* NoMoreFixedIps now subclasses NovaException instead of Error
* merge trunk
* was trying to create the FK when Should have been dropping
* pep8
* well since sqlalchemy-migrate and sqlalchemy can't agree on what the FK is called, we fall back on just manually dropping it
* tests working again
* the table is the table for the reason its a table
* uhh dialect doesn't exist, beavis
* update comment
* if no public-key is given (--key), do not show public-keys in metadata service
* it merges the trunk; or else it gets the conflicts again
* exceptions properly passed around now
* merge with trunk at revno 1573
* add the fake_network Manager to prevent rpc calls
* This makes the OS api extension for booting from volumes work. The _get_view_builder method was replaced in the parent class, but the BootFromVolume controller was not updated to use the new method
* remove undedded imports and skips
* pep8 fixes
* Added a unit test
* pass-through all other parameters in next links as well
* update for the id->uuid flip
* Merged trunk
* Adding flavor extra data extension
* Merged trunk
* fix test
* revert last change
* Added virt-level support for polling unconfirmed resizes
* build the query with the query builder
* Removing toprettyxml from OSAPI xml serialization in favor of toxml
* use uuids everywhere possible
* make sure to use the uuid
* update db api for split filterings searches
* update tests
* delete the internal libvirt snapshot after it is saved to glance
* cleanup prints in tests
* cleanup prints in tests
* Add a simple test for the OS boot from volume api
* get rid of debugs
* Merged from trunk and resolved conflicts
* Execute arping command using run_as_root=True instead of sudo
* Return three rules for describe_security_groups if a rule refers to a foreign group, but does not specify protocol/port
* pep8 issues
* added xml support for servers_list in response with tests
* Merged trunk
* added servers_links in v1.1 with tests
* added build_list to servers controllers and view builder and kept all old tests passing
* The 1.1 API specifies that two vendor content types are allowed in addition to the standard JSON and XML content types
* pep8
* tests are back
* PEP8 fix
* Adding progress
* In the unlikely case of an instance losing a host, make sure we still delete the instance when a forceDelete is done
* 0 for the instance id is False ;)
* Cleanup state management to use vm_state instead of task_state Add schedule_delete() method so delete() actually does what it says it does
* merge trunk
* write out xml for rescue
* fix up the filtering so it does not return duplicates if both the network and the db filters match
* fix rescue to use the base image, reset firewall rules, and accept network_info
* make sure to pass in the context
* move the FakeNetworkManager into fake_network
* Fix issue where floating ips don't get recreated when a network host reboots
* ip tests were moved to networking
* add tests
* fix typo
* allow matching on fixed_ip without regex and don't break so all results are reported
* add case where vif may not have an instance_id associated with it
* fix typo
* Initial pass at automatically confirming resizes after a given window
* Use the correct method to get a builder
* merge trunks
* pep8
* move ip filtering over to the network side
* fix pep8 whitespace error
* add necessary fields to flavor.rng schema
* get all the vifs
* get all the vifs
* make sure we are grabbing out just the ids
* flavor_elem.setAttribute -> flavor_elem.set, flavor -> flavor_dict
* minor changes to credentials for the correct format
* Don't report the wrong content type if a mapped type doesn't exist
* add stubs for future tests that need to be written
* Test both content types for JSON and XML
* Remove unnecessary vendor content types now that they are mapped to standard content types automatically
* Add copyright
* Map vendor content types to their standard content type before serializing or deserializing. This is so we don't have to litter the code with both types when they are treated identically
* exporting auth to keystone (users, projects/tenants, roles, credentials)
* make xml-api tests pass
* update variable name after merge: flavor_node -> flavor_elem
* resolve conflicts / merge with trunk revno 1569
* Fixes an issue where 'invalid literal for int' would occur when listing images after making a v1.1 server snapshot (with a UUID)
* fixed tests
* removing toprettyxml
* add attributes to xml api
* Remove debugging
* Update test_libvirt so that flags and fakes are used instead of mocks for utils.import_class and utils.import_object. Fixes #lp849329
* fix the test so that it fakes out the network
* fix white space for pep8
* fix test_extensions test to know of new extension FlavorExtraData
* add extension description for FlavorExtraData
* Adding migration for instance progress
* Make tests pass
* no need for the instance at all or compute
* bump the migration
* remove unused import, make call to network api to get vifs for the instance
* merge the trunk
* skip a bunch of tests for the moment since we will need to rework them
* remove the vif joins, some dead code, and the ability to take in some instances for filtering
* allow passing in of instances already
* run the instances filter through the network api first, then through the db
* add get_vifs_by_instance and stub get_instance_ids_by_ip_filter
* change vifs to rpc call and add instance ids by ip
* Multi-NIC support for vmwareapi virt driver in nova. Does injection of Multi-NIC information to instances with Operating system flavors Ubuntu, Windows and RHEL. vmwareapi virt driver now relies on calls to network manager instead of nova db calls for network configuration information of instance. Re-oranized VMWareVlanBridgeDriver and added session parmeter to methods to use existing session. Also removed session creation code as session comes as argument. Added check for flat_inject flag before attempting an inject operation
* last of the api.openstack.test_images merge fixes
* pep8 fixes
* trunk merge
* makes sure floating addresses are associated with host on associate so they come back
* Deprecate aoe in preperation for removal in essex
* Only allow up to 15 chars for a Windows hostname
* pep8
* deprecate aoe
* Fix instance rebooting (lp847604) by correcting a malformed cast in compute.api and an incorrect method signature in the libvirt driver
* Fix mismerge
* make tests pass
* This patch teaches virt/libvirt how to format filesystem on ephemeral device depending on os_type so that the behaviour matches with EC2's. Such behaviour isn't explicitly described in the documentation, but it is confirmed by checking realy EC2 instances. This patch introduces options virt_mkfs as multistring. Its format is --virt_mkfs=<os_type>=<mkfs command> When creating ephemeral device, format it according to the option depending on os_type. This addresses the bugs, https://bugs.launchpad.net/nova/+bug/827598 https://bugs.launchpad.net/nova/+bug/828357
* Test new vendor content types as well
* Only allow up to 15 chars for a Windows hostname
* Split accept tests to better match the name of the test
* Remove debugging print
* Inject hostname to xenstore upon creation
* Update test_libvirt so that flags and fakes are used instead of mocks for utils.import_class and utils.import_object. Fixes #lp849329
* interpret 'swap' to be in MB, not in GB
* Actually test expected matches received
* Test new content-types
* This branch changes XML Serializers and their tests to use lxml.etree instead of minidom
* add additional data to flavor's ViewBuilder
* Inject hostname to xenstore upon creation
* drop the virtual_interfaces key back to instances
* - remove translation of non-recognized attributes to user metadata, now just ignored - ensure all keys are defined in image dictionaries, defaulting to None if glance client doesn't provide one - remove BaseImageService - reorganize some GlanceImageService tests
* And again
* Update MANIFEST.in to match directory moves from rev1559
* we're back
* Update MANIFEST.in to match directory moves from rev1559
* Moving tests/test_cloud.py to tests/api/ec2/test_cloud.py. They are EC2-specific tests, so this makes sense
* Same as last time
* Made tests version version links more robust
* PEP8 cleanup
* PEP8 cleanup
* PEP8 cleanups
* zone manager tests working
* fixing import
* working on getting tests back
* relocating ec2 tests
* merging trunk; resolving conflicts
* Correctly map image statuses from Glance to OSAPI v1.1
* pep8 fixes in nova/db/sqlalchemy/api.py and nova/virt/disk.py
* Add support for vendor content types
* pep8 fixes
* merging trunk; resolving conflicts
* Update GlanceClient, GlanceImageService, and Glance Xen plugin to work with Glance keystone
* Fix typo (woops)
* pep8 fix
* Some arches dont have dmidecode, check to see if libvirt is capable of running rather getInfo of the arch its running on
* merging parent branch lp:~rackspace-titan/nova/glance-client-keystone
* adding tests for deleted and pending_delete statuses
* Fixes rogue usage of sudo that crept in
* fixups
* remove unused dep
* add test for method sig
* parent merge
* migration move
* bug fixes
* merging trunk
* Fixes shutdown of lxc containers
* Make quoting consistent
* Fix rogue usage of 'sudo' bypassing the run_as_root=True method
* trunk merge
* region name
* tweaks
* fix for lp847604 to unbreak instance rebooting
* use 'qemu-image resize' rather than 'truncate' to grow image files
* When vpn=true in allocate ip, it attempts to allocate the ip that is reserved in the network. Unfortunately fixed_ip_associate attempts to ignore reserved ips. This fix allows to filter reserved ip address only when vpn=True
* Do not require --bridge_interface for FlatDHCPManager (lp:844944)
* Makes nova-vncproxy listen for requests on the queue like it did before the bin files were refactored
* Update GlanceClient, GlanceImageService, and Glance Xen plugin to work with Glance keystone
* api/ec2/ebs: make metadata returns correct swap and ephemeral0
* api/ec2: make get_metadata() return correct mappings
* virt/libvirt: format ephemeral device and add fs label when formating ext3 fs
* Fix spelling mistake
* Stock zones follows a fill-first methodology—the current zone is filled with instances before other zones are considered. This adds a flag to nova to select a spread-first methodology. The implementation is simply adding a random.shuffle() prior to sorting the list of potential compute hosts by weights
* Pass reboot_type (either HARD or SOFT) to the virt layers from the API
* merging trunk
* fixing image status mapping
* don't need random in abstract_scheduler.py anymore..
* pull-up from trunk; move spread_first into base_scheduler.py
* trunk merge
* adding auth tokens to child zone calls
* Add comment to document why random.shuffle() works
* Merged trunk
* Make whitespace consistent
* Use triple quotes for docstrings to be consistent
* Remove the unnecessary sudo from qemu-img as it is unneeded and doesn't work with our current packaging
* Remove chanes_since and key_name from basic server entity
* Merged trunk
* remove extra line for pep8
* remove unnecessary qemu-img flag, use base image type by default
* shorten comment to < 79 chars
* merged rbp
* remove sudo from qemu-img commands
* adds a fake_network module to tests to generate sensible network info for tests. It does not require using the db
* Adding a can_read_deleted filter back to db.api.instance_get_all_by_filters that was removed in a recent merge
* removing key_name and config_drive from non-detailed server entity
* Authorize to start a LXC instance withour, key, network file to inject or metadata
* Open Essex (switch version to 2012.1)
* Last Diablo translations for Nova
* Open Essex (switch version to 2012.1)
* Last Diablo translations
* pep 8
* Fixing security groups stuff
* put key into meta-data, not top level 'data'
* metadata key is 'public-keys', not 'keys'
* fix for lp844364: fix check for fixed_ip association in os-floating-ips
* if no public-key is given (--key), do not show public-keys in metadata service
* NetworkManager's add_fixed_ip_to_instance calls _allocate_fixed_ips without vpn or requested_networks parameters. If vpn or requested_networks is not provided to the _allocate_fixed_ips method, it throws an exception. This issue is fixed now
* Merged trunk
* First pass at adding reboot_type to reboot codepath
* child zone queries working with keystone now
* Added docstring to explain usage of reserved keyword argument
* One more bug fix to make zones work in trunk. Basic problem is that in novaclient using the 1.0 OSAPI, servers.create() takes an ipgroups argument, but when using the 1.1 OSAPI, it doesn't, which means booting instances in child zones won't work with OSAPI v1.0. This fix works around that by using keyword arguments for all the arguments after the flavor, and dropping the unused ipgroups argument
* Fixes the reroute_compute decorator in the scheduler API so that it properly:
* make check for fixed_ip association more defensive
* Fix lp:844155
* Changing a behavior of update_dhcp() to write out dhcp options file. This option file make dnsmasq offer a default gateway to only NICs of VM belonging to a network that the first NIC of VM belongs to. So, first NIC of VM must be connected to a network that a correct default gateway exists in. By means of this, VM will not get incorrect default gateways
* merged trunk
* merging trunk
* merging trunk
* merged trunk
* Make weigh_hosts() return a host per instance, instead of just a list of hosts
* converting fix to just address ec2; updating test
* Do not attempt to mount the swap VDI for file injection
* Add a NOTE()
* Merged trunk
* Use .get instead
* Do not attempt to mount the swap VDI for file injection
* pull-up from trunk
* pull-up from trunk
* pull-up from trunk
* adding can_read_deleted back to db api
* Clean up shutdown of lxc containers
* Cleanup some more comments
* Cleanup some comments
* fixes vncproxy service listening on rabbit
* added tests for failure cases talking with zones
* This code contains contains a new NetworkManager class that can leverage Quantum + Melange
* comment fix
* typo trying to raise InstanceNotFound when all zones returned nothing
* create a new exception ZoneRequestError to use for returning errors when zone requests couldn't complete
* pep8 fix for tests/api/openstack/test_servers.py which is an issue in trunk
* catch exceptions from novaclient when talking to child zones. store them and re-raise if no other child zones return any results. If no exceptions are raised but no results are returned, raise a NotFound exception
* added test to cover case where no local hosts are available but child hosts are
* remove the short circuit in abstract scheduler when no local hosts are available
* fix for lp844364: improve check for fixed_ip association
* Ensure restore and forceDelete don't do anything unless the server is waiting to be reclaimed
* actually shuffle the weighted_hosts list..
* Check task_state for queued delete
* spread-first strategy
* Make sure instance is deleted before allowing restore or forceDelete
* Add local hostname to fix Authors test
* delete_instance_interval -> reclaim_instance_interval
* PEP8 cleanup
* Restart compute with a lower periodic_interval to make test run faster
* merge trunk
* properly handle the id resetters
* removed vestige
* pull-up from trunk
* fix a couple of typos in the added unit test
* modified unit tests, set use_single_default_gateway flag to True whereever needed instead of setting it in the init method
* exclude net tag from host_dhcp if use_single_default_gateway flag is set to false
* forgot _id
* had used wrong variable
* Fixes a case where if a VIF is returned with a NULL network it might not be able to be deleted. Added test case for that fix
* Fix for LP Bug #837867
* weigh_hosts() needs to return a list of hosts for the instances, not just a list of hosts
* Merged trunk
* Set flat_injected to False by default
* changed the fixed_ip_generator
* PEP8 cleanup
* Wait longer for all agents, not just Windows
* merged trunk
* updated floating_ip generation
* Tests for deferred delete, restore and forceDelete
* An AMI image without ramdisk image should start
* Added use_single_default_gateway to switch from multiple default gateways to single default gateway
* Fixed unit test
* reverting change to GlanceImageService._is_image_available
* At present, the os servers.detail api does not return server.user_id or server.tenant_id. This is problematic, since the servers.detail api defaults to returning all servers for all users of a tenant, which makes it impossible to tell which user is associated with which server
* reverting xenapi change
* Micro-fix; "exception" was misspelled as "exceptions"
* Fix a misspelling of "exception"
* revert changes to display description
* merged trunk
* novaclient v1_0 has an ipgroups argument, but novaclient v1_1 doesn't
* Set flat_injected to False by default
* Fixes an issue where 'invalid literal for int' would occur when listing images after making a v1.1 server snapshot (with a UUID)
* further cleanup
* Default to 0 seconds (off)
* PEP8 cleanups
* Include new extension
* Implement deferred delete of instances
* trunk merge
* cleaning up tests
* zone name not overwritten
* Update the v1.0 rescue admin action and the v1.1 rescue extension to generate 'adminPass'. Fixes an issue where rescue commands were broken on XenServer. lp#838518
* fix a mistaking of dataset and expected values on small test
* fix a mistaking of deletion in ensure_floating_forward
* revert codes for db
* correct a method to collect instances from db add interface data to test
* added me to Authors
* meeging trunk
* format for pep8
* format for pep8
* implement unit test for linux_net
* Adjust test_api to account to multiple rules getting returned for a single set rule
* Clean up security groups after use
* Make a security group rule that references another security group return ipPermission for each of tcp, udp, and icmp
* Multi-NIC support for vmwareapi virt driver in nova. Does injection of Multi-NIC information to instances with Operating system flavors Ubuntu, Windows and RHEL. vmwareapi virt driver now relies on calls to network manager instead of nova db calls for network configuration information of instance. Ensure if port group is properly associated with vlan_interface specified in case of VLAN networking for instances. Re-oranized VMWareVlanBridgeDriver and added session parmeter to methods to use existing session. Also removed session creation code as session comes as argument. Added check for flat_inject flag before attempting an inject operation. Removed stale code from vmwareapi stubs. Also updated some comments to be more meaningful. Did pep8 and pylint checks. Tried to improve pylint score for newly added lines of code
* Fix bug #835919 that output a option file for dnsmasq not to offer a default gateway on second vif
* Accidentally added instance to security group twice in the test. Fixed
* Minor cleanup
* Fixing xml serialization of limits resource
* correct floating ip id to increment in fake_network
* Add iptables filter rules for dnsmasq
* Merged trunk
* Change non E ascii characte
* Launchpad automatic translations update
* Instance record is not inserted in db if the security group passed to the RunInstances API doesn't exists
* Added unit tests to check instance record is not inserted in db when security groups passed to the instances are not existing
* removed unneeded import
* rick nits
* alex meade issues
* Added list of security groups to the newly added extension (Createserverext) for the Create Server and Get Server detail responses
* default description to name
* use 'qemu-image resize' rather than 'truncate' to grow image files
* remove extra description stuff
* fix pep8 violation
* feedback from jk0's review, including removing a lot of spaces from docstrings
* revert description changes, use metadata['description'] if it is set to populate field in db
* merged trunk
* change db migrate script again to match other similar scripts
* Fix for LP Bug #839269
* move networks declarations within upgrade/downgrade methods
* more review cleanup
* remove import of 'fake' from nova manager, now that we've moved that to test_quantum.py
* Fixes a small bug which causes filters to not work at all. Also reworks a bit of exception handling to allow the exception related to the bug to propagate up
* Email error again. Tired
* Email error
* Fixed review comments
* Add documentation comment
* pull-up from trunk
* Forgot to handle return value
* Add tests for flags 'snapshot_image_format'
* Update snapshot image metada 'disk_format'
* Add flag 'snapshot_image_format' to select the disk format of the snapshot image generated with the libvirt driver
* missing migration
* Email contact error
* Update Authors file
* Merged trunk
* Correct tests associated
* Fix protocol-less security groups
* Adding feedparser to pip-requires
* Removing xml functions that are no longer called
* Launchpad automatic translations update
* Glance can now perform its own authentication/authorization checks when we're using keystone
* import filters in scheduler/host_filter.py so default_host_filter gets added to FLAGS; rework SchedulerManager() to only catch missing 'schedule_<method>' attribute and report other missing attributes
* move content of quantum/fake.py to test_quantum.py in unit testing class (most original content has been removed anyway)
* melange testing cleanup, localization cleanup
* remove references to MelangeIPAMTest, as they cannot be used yet
* Deleted debug messages
* Resolved conflicts and fixed pep8 errors
* Fix a few references to state_description that slipped through
* added unit tests and cleanup of import statements
* renamed fake_network_info.py
* trunk merge
* moved cidr_v6 back
* Probably shouldn't leave that commented out
* Added test for NULL network
* Fixed lp835242
* Fixes for minor network manager issues centered around deleting/accessing instances which don't have network information set
* remove extra references to state_description
* pull-up from trunk
* merge unit test from Chris MacGown
* Adds test for image.glance.GlanceImageService._is_image_available
* - implements changes-since for servers resource - default sort is now created_at desc for instances
* undo change in setting q_tenant_id in quantum_manager.create_network
* additional review cleanup
* docstring cleanup
* merging trunk
* Fixes NotFound exceptions to show the proper instance id in the ec2 api
* typo
* more review cleanup
* another commit from brad
* add specific exceptions for quantum client. Fix doc-strings in client.py
* merge brad's changes that address most review feedback
* fix for lp838583 - fixes bug in os-floating-ips view code that prevents instance_id from being returned for associated addresses
* Accept keypair when you launch a new server. These properties would be stored along with the other server properties in the database (like they are currently for ec2 api)
* Launchpad automatic translations update
* merge trunk, fix tests
* fix for lp838583 - return instance_id for associated floating_ips, add test
* removing unnecessary imports
* remove BaseImageService
* pep8
* move GlanceImageService tests to proper module; remove translation of non-standard image attributes to properties; ensure all image properties are available, defaulting to None if not provided
* merge trunk
* Add comment for an uncommon failure case that we need to fix
* Fix for LP Bug #838466
* Correctly yield images from glance client through image service
* Simple usage extension for nova. Uses db to calculate tenant_usage for specified time periods
* Fix for LP Bug #838251
* merge trunk, fix conflict
* Validates that user-data is b64 encoded
* Updated VersionsAtomSerializer.index to use lxml.etree to generate atom feed
* remove extra test
* merged trunk
* Fixed and improved the way instance "states" are set. Instead of relying on solely the power_state of a VM, there are now explicitly defined VM states and VM task states which respectively define the current state of the VM and the task which is currently being performed by the VM
* Updating test for <choices> xml to use lxml
* expect key_name attribute in 1.1
* change to use _get_key_name to retrieve the key
* Implements lp:798876 which is 'switch carrot to kombu'. Leaves carrot as the default for now... decision will be made later to switch the default to kombu after further testing. There's a lot of code duplication between carrot and kombu, but I left it that way in preparation for ripping carrot out later and to keep minimal changes to carrot
* Disassociated previously associated floating ips when calling network_api.associate_floating_ip. Also guard against double-association in the network.manager
* adding support for limiting in image service; updating tests with fixture ids and marker support
* trunk merge
* merging trunk
* fix keypairs stubs
* add explicit message for NoMoreFloatingIps exception
* fix for chris behrens' comment - move tenant_id => project_id mapping to compute.api.get_all
* moved key_name per review
* zone_add fixed to support zone name
* kludge for kombu 1.1.3 memory transport bug
* merged trunk
* Removed extraneous import and s/vm_state.STOP/vm_states.STOPPED/
* Merged trunk
* Code cleanup
* Use feedparser to parse the generated atom feeds in the tests for the versions resource
* add test to verify 400 response when out of addresses
* switched default to kombu per vishy
* use kombu.connection.BrokerConnection vs kombu.connection.Connection so that older versions of kombu (1.0.4) work as well as newer
* fix FloatingIpAlreadyInUse to use correct string pattern, convert ApiErrors to 400 responses
* Fix for LP Bug #782364
* Fix for LP Bug #782364
* more logging info to help identify bad payloads
* Removed test_parallel_builds in the XenAPI tests due to it frequently hanging indefinitely
* logging change when rpc pool creates new connection
* pep8 fix
* make default carrot again and delay the import in rpc/__init__.py
* Removed debug messages
* Fix for LP Bug #837534
* add kombu to pip-requires and contrib/nova.sh
* restore old way FLAGS.rpc_backend worked.. no short name support for consistency
* fix remaining tests
* Update RequestContext so that it correctly sets self.is_admin from the roles array. Additionally add a bit of code to ignore case as well
* pep8, fix fakes
* fix a bunch of direct usages of db in compute api
* make two functions instead of fast flag and add compute api commands instead of hitting db directly
* fixing bug
* fixing short-ciruit condition
* yielding all the images
* merged trunk
* changing default sort to created_at
* The exception 'RamdiskNotFoundForImage' is no longer used
* With OS API, if the property 'ramdisk_id' isn't set on the AMI image, Nova can not instantiate it. With EC2 API, the AMI image can be instantiate
* adding an assert
* Use getCapabilities rather than getInfo() since some versions of libvirt dont provide dmi information
* supporting changes-since
* Fix a bad merge on my part, this fixes rebuilds\!
* disassociate floating ips before re-associating, and prevent re-association of already associated floating ips in manager
* Update RequestContext so that it correctly sets self.is_admin from the roles array. Additionally add a bit of code to ignore case as well
* Merged trunk
* remove unneeded connection= in carrot Consumer init
* pep8 fix for test_rpc_common.py
* fix ajax console proxy for new create_consumer method
* doc string cleanup
* created nova/tests/test_rpc_common.py which contains a rpc test base class so we can share tests between the rpc implementations
* ditched rpc.create_consumer(conn) interface... instead you now do conn.create_consumer(.
* Update the EC2 ToToken middleware to use eventlet.green.httplib instead of httplib2. Fixes issues where the JSON request body wasn't getting sent to Keystone
* remove brackets from mailmap entry
* access db directly in networkmanagers's delete_network method, so stubbed test call works correctly
* more logging info to help identify bad payloads
* In the XenAPI simulator, set VM.domid, when creating the instance initially, and when starting the VM
* remove 'uuid' param for nova-manage network delete that I had add previously
* add alias to mailmap
* update file name for db migrate script after merge (again)
* update file name for db migrate script after merge
* merged trunk
* Fixes this bug by removing the test. The test has no asserts and seems to be raising more problems than it could solve
* Removed test_parallel_builds
* Merged trunk
* Increased migration number
* Fixes lp:813864 by removing the broken assert. The assert was a check for isinstance of 'int' that should have been 'long'. But it doesn't appear this assert really belongs, anyway
* Merged trunk
* Adds assertIn and assertNotIn support to TestCase for compatibility with python 2.6 This is a very minimal addition which doesn't require unittest2
* support the extra optional arguments for msg to assertIn and assertNotIn
* removed broken assert for abstract_scheduler
* pep8 fixes
* fix for assertIn and assertNotIn use which was added in python 2.7. this makes things work on 2.6 still
* merge trunk
* restore fixed_ip_associate_pool in nova/db/sqlalchemy.py to its original form before this branch. Figured out how to make unit tests pass without requiring that this function changes
* remove unused rpc connections in test_cloud and test_adminapi
* carrot consumer thread fix
* add carrot/kombu tests... small thread fix for kombu
* add doc-strings for all major modules
* remove fake IPAM lib, since qmanager must now access nova DB directly
* Update the EC2 ToToken middleware to use eventlet.green.httplib instead of httplib2. Fixes issues where the JSON request body wasn't getting sent to Keystone
* fix nova/tests/test_test.py
* fix nova-ajax-console-proxy
* fix test_rpc and kombu stuff
* always set network_id in virtual_interfaces table, otherwise API commands that show IP addresses get confused
* start to rework some consumer stuff
* update melange ipam lib to use network uuid, not bridge
* fix issue with setting 'Active' caused by Quantum API changes. Other misc fixes
* Bug #835952: pep8 failures do not cause the tests to fail
* Start domid's at 1, not 0, to avoid any confusion with dom0
* use 'uuid' field in networks table rather than 'bridge'. Specify project_id when creating instance in unit test
* Bug #835964: pep8 violations in IPv6 code
* In the XenAPI simulator, set VM.domid, when creating the instance initially, and when starting the VM
* Bug #835952: pep8 failures do not cause the tests to fail
* Bug #835964: pep8 violations in IPv6 code
* Virtual Storage Array (VSA) feature. - new Virtual Storage Array (VSA) objects / OS API extensions / APIs / CLIs - new schedulers for selecting nodes with particular volume capabilities - new special volume driver - report volume capabilities - some fixes for volume types
* fix FALGS typo
* changes a few double quotes to be single, as the rest in the vicinity are
* Default rabbit max_retries to forever Modify carrot code to handle retry backoffs and obey max_retries = forever Fix some kombu issues from cut-n-paste Service should make sure to close the RPC connection
* Updated VersionsXMLSerializer and corresponding tests to use lxml
* v1.0 of server create injects first users keypair
* add tests to verify NotFound exceptions are wrapped with the proper ids
* use db layer for aggregation
* merged trunk
* flag for kombu connection backoff on retries
* more fixes
* more work done to restore original rpc interfaces
* merge changes from brad due to recent quantum API changes
* Minor changes based on recent quantum changes
* start of kombu implementation, keeping the same RPC interfaces
* doubles quotes to single
* changed format string in nova-manage
* removed self.test ip and _setup_networking from libvirt
* updated libvirt test
* merge trunk
* stubbed some stuff in test_libvirt
* removed create_volumes, added log & doc comment about experimental code
* reverted CA files
* couple of pep8s
* Tiny tweaks to the migration script
* updated fake values
* updated fake values
* Merged trunk and fixed conflicts
* updated fake values
* updated fake values
* forgot )
* update libvirt tests
* Update compute API and manager so that the image_ref is set before spawning the rebuilt instance. Fixes issue where rebuild didn't actually change the image_id
* added debug prints for scheduler
* update libvirt
* updated instance type fake model
* added vcpus to instance flavor test model
* added memory_mb to instance flavor test model
* forgot test print statements
* misplaced comma..
* Update compute API and manager so that the image_ref is set before spawning the rebuilt instance. Fixes issue where rebuild didn't actually change the image_id
* Add brad to Authors file
* replace accidental deletion in nova-mange
* rearrange imports
* fix for quantum api changes, change nova-mange to have quantum_list command
* merge brad's fixes
* add priority for static networks
* driver: added vsa_id parameter for SN call
* merged with rev.1499
* cosmetic cleanup
* Updated server and image XML serializers to take advantage of the addresses and metadata serializers
* VSA code redesign. Drive types completely replaced by Volume types
* merged trunk
* Just a couple of small changes I needed to get the migrations working with SQLAlchemy 0.7.x on Fedora 16
* Minor fixes
* check log file's mode prior to calling chmod
* The fix for run_iscsiadm in rev 1489 changed the call to use a tuple because values were being passed as tuples. Unfortunately a few calls to the method were still passing strings
* Add a set of generic tests for the virt drivers. Update a bit of documentation to match reality
* updated LimitsXMLSerializer to use etree and supply the xml declaration
* merge underlying fix for testing
* merged trunk
* updated additional limits test
* pep8
* pass all commands to run_iscsiadm as a tuple
* altered fake network model
* Updated limits serialization tests to use etree and added limits schema
* Test fixup after last review feedback commit
* Fix glance image authorization check now that glance can do authorization checks on its own; use correct image service when looking for ramdisk, etc.; fix a couple of PEP8 errors
* forget a return
* review feedback
* Fixed integrated.test_xml to be more robust
* typo
* fixed a couple of syntax errors
* Add bug reference
* updated tests
* updated libvirt tests to use fake_network_info
* Bumped migration number
* Merged trunk
* Review feedback
* pep8
* DRYed up code by moving _to_xml into XMLDictSerializer
* updated addresses serializer to use etree instead of minidom
* Added addresses schema
* updated addresses xml serialization tests to use etree instead of minidom
* Updated ServerXMLSerializer to use etree instead of minidom
* added unit tests to instance_types for rainy day paths
* Reverted two mistakes when looking over full diff
* Updated MetadataXMLSerializer to use etree instead of minidom
* Added: - volume metadata - volume types - volume types extra_specs
* Added schemas Updated metadata tests to use etree instead of minidom
* Servers with metadata will now boot on xenserver with flat_injected==False
* moved import up
* Verify resize needs to be set
* changing comment
* fixing bug
* merged trunk
* Updated ImagesXMLSerializer to use etree instead of minidom
* Set error state when migration prep fails
* Removed invalid test
* Removed RESIZE-CONFIRM hack
* Set state to RESIZING during resizing..
* Merged trunk
* Another attempt at fixing hanging test
* Once a network is associated with project, I can’t delete this network with ‘nova-manage network delete’. As you know, I can delete network by scrubbing the project with ‘nova-manage project scrub’. However it is too much. The cause of this problem is there is no modify command of network attribute
* Update paste config so that EC2 admin API defaults to noauth
* merged with volume types (based on rev.1490). no code rework yet
* merged with volume_types. no code refactoring yet
* merged with nova 1490
* added new tables to list of DBs in migration.py
* removes french spellings to satisfy american developers
* added virtio flag; associate address for VSA; cosmetic changes. Prior to volume_types merge
* stub_instance fix from merge conflict
* moved import to the top
* fixing inappropriate rubyism in test code
* Added fix for parallel build test
* Fixed silly ordering issue which was causing tons of test failures
* merged trunk
* change snapshot msg too
* forgot to add new extension to test_extensions
* Add me to Authors
* added Openstack APIs for volume types & extradata
* Add comments for associate/dissociate logic
* Updated ImageXMLSerialization tests to use etree instead of minidom Fixed incorrect server entity ids in tests
* Merged from trunk
* Add names to placeholders of formatting
* The notifiers API was changed to take a list of notifiers. Some people might want to use more than one notifier so hopefully this will be accepted into trunk
* use dict.get for user_id, project_id, and display_description in servers view as suggested by ed leaf, so that not all tests require these fields
* Updated flavors xml serialization to use lxml instead of minidom
* merge trunk, fix tests
* fix more tests
* Removed unused imports
* Updated FlavorsXMLSerialization tests to use etree and validation instead of minidom
* Merged from trunk
* split test_modify() into specific unit tests
* Added DELETED status to OSAPI just in case
* Fixes iscsiadm commands to run properly
* Fixed issue where we were setting the state to DELETED before it's actually deleted
* merged with rev.1488
* Merged trunk and fixed conflicts
* added volume type search by extra_spec
* Fix for trying rebuilds when instance is not active
* Fixed rebuild naming issue and reverted other fix which didn't fix anythin
* Attempt to fix issue when deleting an instance when it's still in BUILD
* Fix default hostname generator so that it won't use underscores, and use minus signs instead
* merged with 1487
* pep8 compliant
* Merged from trunk
* - rebuilds are functional again - OSAPI v1.1 rebuild will accept adminPass or generate a new one, returning it in a server entity - OSAPI v1.0 will generate a new password, but it doesn't communicate it back to the user
* Fix flag override in unit test
* merged with rev.1485
* add rainy day test to to_global fixed to_global to catch correct error from incorrect mac addresses
* Let's be more elegant
* similar to lp828614: add rainy day test and fix exception error catch to AddrFormatError
* check log file mode prior to chmod
* added unit tests for version.py
* Merged trunk
* Fix for migrations
* Conversion to SQLAlchemy-style
* dict formatting
* Commit without test data in migration
* Commit with test data in migration
* Do not require --bridge_interface for FlatDHCPManager
* Fix quotas migration failure
* Fix flavorid migration failure
* fixed indentation
* adding xml serialization and handling instance not found
* removing extraneous imports
* pep8
* Thou shalt not use underscores in hostnames
* Catch exception for instances that aren't there
* pep8 fixes
* Couple of fixes to the review feedback changes
* Launchpad automatic translations update
* Address code review feedback from Rick and Matt
* removing print statement
* added volume metadata APIs (OS & volume layers), search volume by metadata & other
* Update paste config so that EC2 admin API defaults to noauth
* cleanup
* updating tests
* fix iscsi adm command
* Fix pep8
* Merged from trunk
* added volume_types APIs
* Fix not found exceptions to properly use ec2_ips for not found
* Stub out the DB in unit test. Fix 'nova-manage network modify' to use db.network_update()
* rebuilds are functional again
* Adds a use_deprecated_auth flag to make sure creds generated using nova-manage commands will work with noauth
* Merged from upstream
* Fixed some pep8 and pylint issues
* Forgot to set the flag for the test
* I added notifications decorator for each API call using monkey_patching. By this merge, users can get API call notification from any modules
* Fixes bug that causes 400 status code when an instance wasn't attached to a network
* fix for rc generation using noauth
* Fixed doc string
* Merged from upstream
* Switched list_notifier to log an exception each time notify is called, for each notification driver that failed to import
* updating tests
* merging trunk
* Fixed some docstring Added default publisher_id flagw
* Removed blank line
* Merged with trunk
* Fixed typo and docstring and example class name
* Updated migration number
* Move use_ipv6 into flags. Its used in multiple places (network manager and the OSAPI) and should be defined at the top level
* Merged trunk
* PEP8 fixes
* 'use the ipv6' -- 'use ipv6'
* Move use_ipv6 into flags. Its used in multiple places (network manager and the OSAPI) and should be defined at the top level
* Refresh translations
* This branch does the final tear out of AuthManager from the main code. The NoAuth middlewares (active by default) allow a user to specify any user and project id through headers (os_api) or access key (ec2_api)
* Implements first-pass of config-drive that adds a vfat format drive to a vm when config_drive is True (or an image id)
* Launchpad automatic translations update
* pulling all qmanager changes into a branch based on trunk, as they were previously stacked on top of melange
* Moved migration and fixed tests from upstream
* Merged trunk
* Added the fixes suggested by Eric Windisch from cloudscaling..
* removing unnecessary tthing
* merge trunk, resolve conflicts, fix tests
* unindented per review, added a note about auth v2
* Our goal is to add optional parameter to the Create server OS 1.0 and 1.1 API to achieve following objectives:-
* fixing exception logging
* Fixes bug 831627 where nova-manage does not exit when given a non-existent network address
* Move documentation from nova.virt.fake into nova.virt.driver
* initial cut on volume type APIs
* fix pep8 issue
* Change parameters of 'nova-manage network modify'. Move common test codes into private method
* Merged from trunk,resolved conflicts and fixed broken unit tests due to changes in the extensions which now include ProjectMapper
* xml deserialization, and test fixes
* syntax
* update test_network test_get_instance_nw_info()
* remove extra spaces
* Fixed conflict with branch
* merged trunk
* The FixedIpCommandsTestCase in test_nova_manage previously accessed the database. This branch stubs out the database for these tests, lowering their run time from 104 secs -> .02 secs total
* some readability fixes per ja feedback
* fix comment
* Update a few doc strings. Address a few pep8 issues. Add nova.tests.utils which provides a couple of handy methods for testing stuff
* Make snapshot raise InstanceNotRunning when the instance isn't running
* change NoAuth to actually use a tenant and user
* Added Test Code, doc string, and fixed pip-requiresw
* Merged trunk
* Ensure that reserve and unreserve exit when an address is not found
* Simple usage extension for nova. Uses db to calculate tenant_usage for specified time periods
* Stubbed out the database in order to improve tests
* logging as exception rather than error
* Merged from upstream
* Changed list_notifier to call sys.exit if a notification driver could not be found
* merged trunk
* implemented tenant ids to be included in request uris
* Add a generic set of tests for hypervisor drivers
* Upstream merge
* Added ability to detect import errors in list_notifier if one or more drivers could not be loaded
* Fix pep8
* delete debug code
* Fixes for a number of tests
* Use 'vm_state' instead of 'state' in instance filters query
* Merged with Dan to fix some EC2 cases
* Add 'nova-manage network modify' command
* Fixes/updates to make test_cloud pass
* Fix scheduler and integrated tests
* Update migration number
* Merged with Dan
* Merged task_state -> task_states and fixed test_servers test
* Update virt/fake to correct power state issue
* fix test_servers tests
* update test_security_group tests that have been added
* Merged trunk
* Renamed task_state to task_states..
* Ec2 API updates
* merge with trunk
* Fixing merge conflicts
* Launchpad automatic translations update
* Adds accessIPv4 and accessIPv6 to servers requests and responses as per the current spec
* adding import
* Fixes utils.to_primitive (again) to handle modules, builtins and whatever other crap might be hiding in an object
* fixing bug lp:830817
* added test for bad project_id ... although it may not be used
* added exception catch and test for bad project_id
* added exception catch for bad prefix and matching test
* added exception catch and test for bad prefix
* comment strings
* added unit tests for versions.py
* Added OS APIs to associate/disassociate security groups to/from instances
* add/remove security groups to/from the servers as server actions
* lp:828610
* removed leftover netaddr import
* added rainy day test for ipv6 tests. fixed ipv6.to_global to trap correct exception
* Merged from trunk
* pep8
* improve test coverage for instance types / flavors
* Launchpad automatic translations update
* Assorted fixes to os-floating-ips to make it play nicely with an in-progress novaclient implementation, as well as some changes to make it more consistent with other os rest apis. Changes include:
* finished fake network info, removed testing shims
* updated a maths
* updated a maths
* Merged trunk
* Lots of modifications surrounding the OSAPI to remove any mention of dealing with power states and exclusively using vm_states and task_state modules. Currently there are still a number of tests failing, but this is a stopping place for today
* who cares
* added return
* Merged from trunk and fixed review comments
* fixed formatting string
* typo
* typo
* typo
* typo
* typo
* typo
* added fake network info
* Fixed review comments
* Fixed typo
* better handle malformed input, and add associated tests
* Fixed typo
* initial committ
* Fixed NoneType returned bugw
* merged trunk
* Updated accessIPv4 and accessIPv6 to always be in a servers response
* Fixed mistake on mergew
* tweak to comment
* Merged with trunkw
* a few tweaks - remove unused member functions, add comment
* incorporate feedback from brian waldon and brian lamar. Move associate/disassociate to server actions
* merge from trunk
* pep8
* Finished changing ServerXMLSerializationTest to use XML validation and lxml
* Added monkey patching notification code function w
* Updated test_show in ServerXMLSerializationTest to use XML validation
* vm_state --> vm_states
* Next round of prep for keystone integration
* merge from trunk
* Removes the incorrect hard-coded filter path
* Revert irrelevant changes that accidentally crept into this patch :(
* add tenant_id to api. without tenant_id, admins can't tell which servers belong to which tenants when retrieving lists
* Merged from trunk
* Fixes primitive with builtins, modules, etc
* fix test_virtual interfaces for tenant_id stuff
* fix test_rescue tests for tenant_id changes
* Fix unit test for the change of 'nova-manage network list' format
* Add copyright notices
* merged trunk
* Define FLAGS.default_local_format. By default it's None, to match current expected _create_local
* Fix config_drive migration, per Matt Dietz
* updated migration number
* merge with trunk
* Bump migration number
* pep8
* Start improving documentation
* Added uuid column in virtual_interfaces table, and an OpenStack extension API for virtual interfaces to expose these IDs. Also set this UUID as one of the external IDs in the OVS vif driver
* Move documentation from nova.virt.fake to nova.virt.driver
* add key_name/data support to server stub
* add user_id and description. without user_id, there is no way for a tenant to tell which user created the server. description should be added for ec2 parity
* merge
* Bugfix for lp 828429. Its still not clear to me exactly how this code path is actually invoked when nova is used, so I'm looking for input on whether we should be adding a test case for this, removing the code as unused, etc. Thanks
* remove security groups, improve exception handling, add tests
* Merged trunk
* merged trunk
* Currently, rescue/unrescue is only available over the admin API. Non-admin tenants also need to be able to access this functionality. This patch adds rescue functionality over an API extension
* Makes all of the binary services launch using the same strategy. * Removes helper methods from utils for loading flags and logging * Changes service.serve to use Launcher * Changes service.wait to actually wait for all the services to exit * Changes nova-api to explicitly load flags and logging and use service.serve * Fixes the annoying IOError when /etc/nova/nova.conf doesn't exist
* tests pass
* Fixes issue where ServersXMLSerializer was missing a method for update actions
* follow same pattern as userdata (not metadata apporach)
* rename the test method
* Updated docs for the recent scheduler class changes
* Passes empty string instead of None to MySQLdb driver if the DB password isn't set
* merged trunk
* added volume metadata. Fixed test_volume_types_extra_specs
* declare the use_forwarded_for flag
* merge trunk
* Fixes lp828207
* Added unit test
* allow specification of key pair/security group info via metadata
* Fixed bug in which DescribeInstances was returning deleted instances. Added tests for pertinent api methods
* Accept binary user_data in radix-64 format when you launch a new server using OSAPI. This user_data would be stored along with the other server properties in the database. Once the VM instance boots you can query for the user-data to do any custom installation of applications/servers or do some specific job like setting up networking route table
* added unittests for volume_extra_data
* Removed extra parameter from the call to _provision_resource_locally()
* resolve conflicts after upstream merge
* Change the call name
* Cleanup the '_base' directory in libvirt tests
* Oops
* Review feedback
* Added 'update' method to ServersXMLSerializer
* Added more unit testcases for userdata functionality
* Remove instances.admin_pass column
* merged trunk
* Merged with trunk
* typo
* updated PUT to severs/id to handle accessIPv4 and accessIPv6
* DB password should be an empty string for MySQLdb
* first cut on types & extra-data (only DB work, no tests)
* merge from trunk
* Better docstring for _unrescue()
* Review feedback
* Need to pass the action
* Updated the distributed scheduler docs with the latest changes to the classes
* Syntax error
* Moved compute calls to their own handler
* Remove old comment
* Don't send 'injected_files' and 'admin_pass' to db.update
* fix docstrings in new api bins
* one more
* fix typo
* remove signal handling and clean up service.serve
* add separate api binaries
* more cleanup of binaries per review
* Changed the filter specified in _ask_scheduler_to_create_instance() to None, since the value isn't used when creating an instance
* Minor housecleaning
* Fix to return 413 for over limit exceptions with instances, metadata and personality
* Refactored a little and updated unit test
* minor cleanup
* dhcpbridge: add better error if NETWORK_ID is not set, convert locals() to static dict
* Added the fix for the missing parameter for the call to create_db_entry_for_new_instance()
* Updated a number of items to pave the way for new states
* Corrected the hardcoded filter path. Also simplified the filter matching code in host_filter.py
* Added rescue mode extension
* Fixed issue where accessIP was added in none detail responses
* Updated ServersXMLSerializer to allow accessIPv4 and accessIPv6 in XML responses
* Merged trunk
* Added accessIPv4 and accessIPv6 to servers view builder Updated compute api to handle accessIPv4 and 6
* Fixed several logical errors in the scheduling process. Renamed the 'ZoneAwareScheduler' to 'AbstractScheduler', since the zone-specific designation is no longer relevant. Created a BaseScheduler class that has basic filter_hosts() and weigh_hosts() capabilities. Moved the filters out of one large file and into a 'filters' subdirectory of nova/scheduler
* Merged trunk
* Adds the enabled status of a host when XenServer reports its host's capabilities. This allows the scheduler to ignore hosts whose enabled is False when considering where to place a new instance
* merge trunk and fix unit test errors
* in dhcpbridge, only grab network id from env if needed
* bug #828429: remove references to interface in nova-dhcpbridge
* pep8
* remove extra reference in pipelib
* clean up fake auth from server actions test
* fix integration tests
* make admin context the default, clean up pipelib
* merged trunk
* Merged with trunk and fixed broken testcases
* merged with nova-1450
* nova-manage VSA print & forced update_cap changes; fixed bug with report capabilities; added IP address to VSA APIs; added instances to APIs
* Make all services use the same launching strategy
* Updated compute manager/API to use vm/task states. Updated vm/task states to cover a few more cases I encountered
* Updated server create XML deserializer to account for accessIPv4 and accessIPv6
* Added the host 'enabled' status to the host_data returned by the plugin
* Added accessip to models pep8
* Added migration for accessIPv4 and accessIPv6
* Fixed broken unit testcases
* Initial instance states migration
* pep8 fix
* fix some naming inconsistencies, make associate/disassociate PUTs
* Add NetworkCommandsTestCase into unit test of nova-manage
* very minor cleanup
* Undo an unecessary change
* Merged trunk
* Pep8 fixes
* Split set state into vm, task, and power state functions
* Add modules for task and vm states
* Updated tests to correctly use the tenant id
* DB object was being casted to dict() in API code. This did not work as intended and logic has been updated to reflect a more accurate way of getting information out of DB objects
* merge from trunk
* Cleaned up the extension metadata API data
* Updated get_updated time
* Cleaned up the file
* Fixed vif test to match the JSON key change
* Added XML support and changed JSON output keys
* Added virtual interfaces API test
* Removed serverId from the response
* Merged trunk
* Merged Dan's branch to add VIF uuid to VIF drivers for Quantum
* Removed a change from faults.py that was not required."
* Changed return code to 413 for metadata, personality and instance quota issues
* Append the project_id to the SERVER-MANAGEMENT-URL header for v1.1 requests. Also, ensure that the project_id is correctly parsed from the request
* add new vif uuid for OVS vifplug for libvirt + xenserver
* Remove instances.admin_pass column
* merge trunk
* all tests passing
* fix unit tests
* Resolved conflicts and merged with trunk
* Added uuid for networks and made changes to the Create server API format to accept network as uuid instead of id
* I'm taking Thierry at his word that I should merge early and merge often :)
* Fixes issue with exceptions getting eaten in image/s3.py if there is a failure during register. The variables referenced with locals() were actually out of scope
* Allow local_gb size to be 0. libvirt uses local_gb as a secondary drive, but XenServer uses it as the root partition's size. Now we support both
* Merged trunk
* merge from trunk
* make project_id authorization work properly, with test
* Use netaddr's subnet features to calculate subnets
* make delete more consistant
* Review feedback
* Updated note
* Allow local_gb to be 0; PEP8 fixes
* Updated ViewBuilderV10 as per feedback
* * Added search instance by metadata. * instance_get_all_by_filters should filter deleted
* This branch implements a nova api extension which allows you to manage and update tenant/project quotas
* test improvements per peer review
* fixing pep8 issue
* defaults now is referred to using a tenant
* fixing up the show quotas tests, and extension
* making get project quotas require context which has access to the project/tenant)
* fixing pep8 issues again
* fixing spacing issues
* cleaning up a few things from pyflakes
* fixing pep8 errors
* refactoring tests to not use authmanager, and now returning 403 when non admin user tries to update quotas
* removed index, and separated out defaults into its own action
* merging test_extensions.py
* another trunk merge
* another trunk merge... a new change made it into nova before the code was merged
* Cleanup the '_base' directory in libvirt tests
* Small bug fix...don't cast DB objects to dicts
* merge from trunk
* Updated the EC2 metadata controller so that it returns the correct value for instance-type metadata
* Fix test_metadata tests
* merge the trunk
* Merged with upstream
* Added list_notifier, a driver for the notifer api which calls a list of other drivers
* merge with trunk
* Refactored the HostFilterScheduler and LeastCostScheduler classes so that they can be combined into a single class that can do both host filtering and host weighting, allowing subclasses to override those processes as needed. Also renamed the ZoneAwareScheduler to AbstractScheduler, for two reasons: one, the 'zone-aware' designation was necessary when the zone code was being developed; now that it is part of nova, it is not an important distinction. Second, the 'Abstract' part clearly indicates that this is a class that is not designed to be used directly, but rather as the basis for specific scheduler subclasses
* cosmetic change in test_extensions. Avoids constant merge conflicts between proposals with new extensions
* Validate the size of VHD files in OVF containers
* Include vif UUID in the network info dictionary
* Added uuid to allocate_mac_address
* Fixed the naming of the extension
* redux of floating ip api
* Merged trunk
* Merged trunk
* log the full exception so we don't lose traceback through eventlet
* fix error logging in s3.py
* pep8 cleanup
* Merged trunk
* Removed newly added userdatarequesthandler for OS API, there is no need to add this handler since the existing Ec2 API metadatarequesthandler does the same job
* got tests passing with logic changes
* pep8
* pep8
* add note
* have the tests call create_networks directly
* allow for finding a network that fits the size, also format string correctly
* adding sqlalchemi api tests for test_instance_get_all_by_filter to ensure doesn't return deleted instances
* added cloud unit test for describe_instances to ensure doesn't return deleted instances
* return the created networks
* pep8 fix
* merge trunk
* Adding kvm-block-migration feature
* i hate these exceptions where it should just return an empty list
* fix typo where I forgot a comma
* merge trunk, remove _validate_cidrs and replace functionality with a double for loop
* fix bug which DescribeInstances in EC2 api was returning deleted instances
* We don't have source for open-wrt in the source tree, so we shouldn't use the images. Since the images are only there for uploading smoketests, They are now replaced with random images
* Make response structure for list floating ips conform with rest of openstack api
* put tenant_id back in places where it was
* This branch allows the standard inclusion of a body param which most http clients will send along with a POST request
* Libvirt has some autogenerated network info that is breaking ha network
* making body default to none
* pep8 fix
* Adding standard inclusion of a body param which most http clients will send along with a POST request
* Fixed merging issue
* Merged with trunk
* Updated rate limiting tests to use tenants
* Corrected names in TODO/FIXME
* remove openwrt image
* Fix the tests when libvirt actually exists
* Merged trunk
* Add durable flag for rabbit queues
* Fixed merge conflict
* merged trunk
* Merged trunk
* Dryed up contructors
* make list response for floating ip match other apis
* fix missing 'run_as_root' from bad merge
* Added ability too boot VM from install ISO. System detects an image of type iso. Images is streamed to a VDI and mounted to the VM. Blank disk allocated to VM based on instance type
* Add source-group filtering
* added logic to make the creation of networks (IPv4 only) validation a bit smarter: - detects if the cidr is already in use - detects if any existing smaller networks are within the range of requested cidr(s) - detects if splitting a supernet into # of num_networks && network_size will fit - detects if requested cidr(s) are within range of already existing supernet (larger cidr)
* fix InvalidPortRange exception shows up in euca2ools instead of UnknownError when euca-authorize is specified w/ invalid port #
* Changes requests with an invalid server action to return an HTTP 400 instead of a 501
* Currently OS API doesn't accept availability zone parameter so there is no way to instruct scheduler (SimpleScheduler) to launch VM instance on specific host of specified zone
* typo fix
* Fix v1.1 /servers/<id> PUT request to match API documentation by returning 200 code and the server data in the body
* Allow different schedulers for compute and volume
* have NetworkManager generate MAC address and pass it to the driver for plugging. Sets the stage for being able to do duplicate checks on those MACs as well
* make sure security groups come back on restart of nova-compute
* fix all of the tests
* rename project_net to same_net
* use dhcp server instead of gateway for filter exception
* get rid of network_info hack and pass it everywhere
* fix issue introduced in merge
* merge trunk, fix conflict frim dprince's branch to remove hostname from bin/nova-dhcpbridge
* merge in trunk, resolving conflicts with ttx's branch to switch from using sudo to run_as_root=True
* remerge trunk
* Added durable option for nova rabbit queues added queueu delete script for admin/debug purposes
* Added add securitygroup to instance and remove securitygroup from instance functionality
* Fix ugly little violations before someone says anything
* Merged trunk
* Updated logging
* end of day
* Check uncompressed VHD size
* reworked test_extensions code to avoid constant merge conflicts with newly added ext
* nova-manage: fixed instance type in vsa creation
* Stub out instance_get as well so we can show the results of the name change
* removed VSA/drive_type code from EC2 cloud. changed nova-manage not to use cloud APIs
* Merged with trunk and fixed broken unit testcases
* merged rev1418 and fixed code so that less than 1G image can be migrated
* Created the filters directory in nova/scheduler
* removed admincontext middleware
* updates from review
* merge from trunk
* fix merges from trunk
* Nuke hostname from nova-dhcpbridge. We don't use it
* merge the trunk
* need to actually assign the v4 network
* Fixes to the OSAPI floating API extension DELETE. Updated to use correct args for self.disassociate (don't sweep exceptions which should cause test cases to fail under the rug). Additionally updated to pass network_api.release_floating_ip the address instead of a dict
* Merged trunk
* Fixed unit tests
* only run if the subnet and cidr exist
* only run if the subnet and cidr exist
* merge from trunk
* make sure network_size gets set
* merge from trunk
* don't require ipv4
* forgot the closing paren
* use subnet iteration from netaddr for subnet calculation
* Fix a typo that causes ami images to launch with a kernel as ramdisk when using xen
* Fixing a 500 error when -1 is supplied for flavorRef on server create
* rewriting parsing
* fix typo that causes ami instances to launch with a kernal as ramdisk
* Merged trunk
* Allows for a tunable number of SQL connections to be maintained between services and the SQL server using new configuration flags. Only applies when using the MySQLdb dialect in SQLAlchemy
* Merged trunk
* Fixes pep8 issues in test_keypairs.py
* Merged trunk
* start of day
* Fixes to the OSAPI floating API extension DELETE. Updated to use correct args for self.disassociate (don't sweep exceptions which should cause test cases to fail under the rug). Additionally updated to pass network_api.release_floating_ip the address instead of a dict
* API needs virtual_interfaces.instance joined when pulling instances from the DB. Updated instance_get_all() to match instance_get_all_by_filters() even though the former is only used by nova-manage now. (The latter is used by the API)
* remove extra log statements
* join virtual_interfaces.instance for DB queries for instances. updates instance_get_all to match instance_get_all_by_filters
* remove accidentally duplicated flag
* merged trunk
* add keystone middlewares for ec2 api
* Merged with trunk
* added userdata entry in the api paste ini
* Initial version
* Accidentally added inject_files to merge
* Support for management of security groups in OS API as a new extension
* Updates to libvirt, write metadata, net, and key to the config drive
* prefixed with os- for the newly added extensions
* Merged with trunk
* Author added
* allow scheduling topics to multiple drivers
* Check compressed image size and PEP8 cleanup
* v1.1 API also requires the server be returned in the body
* capabilities fix, run_as_root fix
* lp824780: fixed typo in update_service_capabilities
* fix pep8
* spacing fixes
* fixed pep8 issue
* merge from trunk
* fixed v1.0 stuff with X-Auth-Project-Id header, and fixed broken integrated tests
* merged with 1416
* fixing id parsing
* moved vsa_id to metadata. Added search my meta
* Refactored the scheduler classes without changing functionality. Removed all 'zone-aware' naming references, as these were only useful during the zone development process. Also fixed some PEP8 problems in trunk code
* Added search instance by metadata. get_all_by_filters should filter deleted
* got rid of tenant_id everywhere, got rid of X-Auth-Project-Id header support (not in the spec), and updated tests
* Silly fixes
* v1.0 and v1.1 API differs for PUT, so split them out Update tests to match API
* Removed postgres, bug in current ubuntu package which won't allow it to work easily. Will add a bug in LP
* minor cleanup
* Added availability zone support to the Create Server API
* Make PUT /servers/<id> follow the API specs and return a 200 status
* More logging
* removed extra paren
* Logging for SQLAlchemy type
* merged trunk
* Fixed per HACKING
* * Removes rogue direct usage of subprocess module by proper utils.execute calls * Adds a run_as_root parameter to utils.execute, that prefixes your command with FLAG.root_helper (which defaults to 'sudo') * Turns all sudo calls into run_as_root=True calls * Update fakes accordingly * Replaces usage of "sudo -E" and "addl_env" parameter into passing environment in the command (allows it to be compatible with alternative sudo_helpers) * Additionally, forces close_fds=True on all utils.execute calls, since it's a more secure default
* Remove doublequotes from env variable setting since they are literally passed
* Changed bad server actions requests to raise an HTTP 400
* removed typos, end of line chars
* Fixed broken unit testcases
* Support for postgresql
* merge from trunk
* tenant_id -> project_id
* Adding keypair support to the openstack contribute api
* elif and FLAG feedback
* Removed un-needed log line
* Make sure to not use MySQLdb if you don't have it
* get last extension-based tests to pass
* Allows multiple MySQL connections to be maintained using eventlet's db_pool
* Removed verbose debugging output when capabilities are reported. This was clogging up the logs with kbytes of useless data, preventing actual helpful information from being retrieved easily
* Removed verbose debugging output when capabilities are reported
* Updated extensions to use the TenantMapper
* fix pep8 issues
* Fixed metadata PUT routing
* These fixes are the result of trolling the pylint violations here
* Pass py_modules=[] to setup to avoid installing run_tests.py as a top-level module
* Add bug reference
* Pass py_modules=[] to setup to avoid installing run_tests.py as a top-level module
* fix servers test issues and add a test
* added project_id for flavors requests links
* added project_id for images requests
* merge trunk
* fix so that the exception shows up in euca2ools instead of UnknownError
* Dropped vsa_id from instances
* import formatting - thx
* List security groups project wise for admin users same as other users
* Merged with trunk
* merge with nova-1411. fixed
* pep8 fix
* use correct variable name
* adding project_id to flavor, server, and image links for /servers requests
* Merged with trunk
* tests pass
* merge from trunk
* merged with nova-1411
* This branch makes sure to detach fixed ips when their associated floating ip is deallocated from a project/tenant
* adding other emails to mailmap
* add Keypairs to test_extensions
* adding myself to authors
* This adds the servers search capabilities defined in the OS API v1.1 spec.. and more for admins
* Be more tolerant of agent failures. It is often the case there is only a problem with the agent, not with the instance, so don't claim it failed to boot so quickly
* Updated the EC2 metadata controller so that it returns the correct value for instance-type metadata
* added tests - list doesn't pass due to unicode issues
* initial port
* merged trunk
* Be more tolerant of agent failures. The instance still booted (most likely) so don't treat it like it didn't
* Updated extensions to expect tenant ids Updated extensions tests to use tenant ids
* Update the OSAPI v1.1 server 'createImage' and 'createBackup' actions to limit the number of image metadata items based on the configured quota.allowed_metadata_items that is set
* Fix pep8 error
* fixing one pep8 failure
* I think this restores the functionality ..
* Adds missing nova/api/openstack/schemas to tarball
* Instance metadata now functionally works (completely to spec) through OSAPI
* updated v1.1 flavors tests to use tenant id
* making usage of 'delete' argument more clear
* Fix the two pep8 issues that sneaked in while the test was disabled
* Fix remaining two pep8 violations
* Updated TenantMapper to handle resources with parent resources
* updating tests; fixing create output; review fixes
* OSAPI v1.1 POST /servers now returns a 202 rather than a 200
* Include missing nova/api/openstack/schemas
* Rename sudo_helper FLAG into root_helper
* Minor fix to reduce diff
* Initial validation for ec2 security groups name
* Remove old commented line
* Command args can be a tuple, convert them to list
* Fix usage of sudo -E and addl_env in dnsmasq/radvd calls, remove addl_env support, fix fake_execute allowed kwargs
* Use close_fds by default since it's good for you
* Fix ajaxterm's use of shell=True, prevent vmops.py from running its own version of utils.execute
* With this branch, boot-from-volume can be marked as completed in some sense. The remaining is minor if any and will be addressed as bug fixes
* Update the curl command in the __public_instance_is_accessible function of test_netadmin to return an error code which we can then check for and handle properly. This should allow calling functions to properly retry and timeout if an actual test failure happens
* updating more test cases
* changing server create response to 202
* Added xml schema validation for extensions resources. Added corresponding xml schemas. Added lxml dep, which is needed for doing xml schema validation
* Fixing a bug in nova.utils.novadir()
* Adds the ability to read/write to a local xenhost config. No changes to the nova codebase; this will be used only by admin tools that have yet to be created
* fixed conditional because jk0 is very picky :)
* Fixed typo found in review
* removing log lines
* added --purge optparse for flavor delete
* making server metadata work functionally
* cleaning up instance metadata api code
* Updated servers tests to use tenant id
* Set image progress to 100 if the image is active
* Cleaned up merge messes
* Merged trunk
* cleaned up unneeded line
* nova.exception.wrap_exception will re-raise some exceptions, but in the process of possibly notifying that an exception has occurred, it may clobber the current exception information. nova.utils.to_primitive in particular (used by the notifier code) will catch and handle an exception clobbering the current exception being handled in wrap_exception. Eventually when using the bare 'raise', it will attempt to raise None resulting a completely different and unhelpful exception
* remove obsolete script from setup.py
* assert that vmops.revert_migration is called
* Import sys as well
* Resolve conflicts and fixed broken unit testcases
* This branch adds additional capability to the hosts API extension. The new options allow an admin to reboot or shutdown a host. I also added code to hide this extension if the --allow-admin-api is False, as regular users should have no access to host API calls
* adding forgotten import for logging
* Adds OS API 1.1 support
* Updated test_images to use tenant ids
* Don't do anything with tenant_id for now
* Review fixes
* fixed wrong syntax
* Assign tenant id in nova.context
* another trunk merge
* Merged trunk
* Merged trunk
* Cleaned up some old code added by the last merge
* Fixed some typos from the last refactoring
* Moved the restriction on host startup to the xenapi layer.:
* Remove nova/tests/network, which was accidentally included in commit
* upper() is even better
* merged with 1383
* Updated with code changes on LP
* Merged trunk
* Save exception and re-raise that instead of depending on thread local exception that may have been clobbered by intermediate processing
* Adding __init__.py files
* Adds ability to disable snapshots in the Openstack API
* Sync trunk
* Set image progress to 100 if the image is active
* Sync trunk
* Update the curl command in the __public_instance_is_accessible function of test_netadmin to return an error code which we can then check for and handle properly. This should allow calling functions to properly retry and timout if an actual test failure happens
* ZoneAwareScheduler classes couldn't build local instances due to an additional argument ('image') being added to compute_api.create_db_entry_for_new_instance() at some point
* simplified test cases further, thanks to trunk changes
* Added possibility to mark fixed ip like reserved and unreserved
* Update the OSAPI v1.1 server 'createImage' and 'createBackup' actions to limit the number of image metadata items based on the configured quota.allowed_metadata_items that is set
* Pep8 fix
* zone_aware_scheduler classes couldn't build instances due to a change to compute api's create_db_entry_for_new_instance call. now passing image argument down to the scheduler and through to the call. updated a existing test to cover this
* Adding check to stub method
* moving try/except block, and changing syntax of except statement
* Fixes broken image_convert. The context being passed to glance image service was not a real context
* Using decorator for snapshots enabled check
* Disable flag for V1 Openstack API
* adding logging to exception in delete method
* Pass a real context object into image service calls
* Adding flag around image-create for v1.0
* Refactored code to reduce lines of code and changed method signature
* If ip is deallocated from project, but attached to a fixed ip, it is now detached
* Glance Image Service now understands how to use glance client to paginate through images
* Allow actions queries by UUID and PEP8 fixes
* Fixed localization review comment
* Allow actions queries by UUID and PEP8 fixes
* Fixed review comments
* fixing filters get
* fixed per peer review
* fixed per peer review
* re-enabling sort_key/sort_dir and fixing filters line
* Make sure mapping['dns'] is formatted correctly before injecting via template into images. mapping['dns'] is retrieved from the network manager via info['dns'], which is a list constructed of multiple DNS servers
* Add a generic image service test and run it against the fake image service
* Implemented @test.skip_unless and @test.skip_if functionality in nova/test.py
* merged with 1382
* Updates v1.1 servers/id/action requests to comply with the 1.1 spec
* fix typo
* Moving from assertDictEqual to assertDictMatch
* merging trunk
* merging trunk
* Add exception logging for instance IDs in the __public_instance_is_accessible smoke test function. This should help troubleshoot an intermittent failure
* adding --fixes
* glance image service pagination
* Pass tenant ids through on on requests
* methods renamed
* Add exception logging for instance IDs in the __public_instance_is_accessible smoke test function. This should help troubleshoot an intermittent failure
* Removed most direct sudo calls, make them use run_as_root=True instead
* pep8 violations sneaking into trunk?
* pep8 violations sneaking into trunk?
* trunk merge
* Fixes lp821144
* Make disk_format and container_format optional for libvirt's snapshot implementation
* pep8
* fixed up zones controller to properly work with 1.1
* Add generic image service tests
* Add run_as_root parameter to utils.execute, uses new sudo_helper FLAG to prefix command
* Remove spurious direct use of subprocess
* Added virtual interfaces REST API extension controller
* Trunk contained PEP8 errors. Fixed
* Trunk merge
* fix mismerge
* Added migration to add uuid to virtual interfaces. Added uuid column to models
* merged trunk
* merged with nova trunk
* Launchpad automatic translations update
* fixed pep8 issue
* utilized functools.wraps
* added missing tests
* tests and merge with trunk
* removed redundant logic
* merged trunk
* For nova-manage network create cmd, added warning when size of subnet(s) being created are larger than FLAG.network_size, in attempt to alleviate confusion. For example, currently when 'nova-manage network create foo 192.168.0.0/16', the result is that it creates a 192.168.0.0/24 instead without any indication to why
* Remove instances of the "diaper pattern"
* Read response to reset the connection state-machine for the next request/response cycle
* Added explanations to exceptions and cleaned up reboot types
* fix pep8 issues
* fixed bug , when logic searched for next avail cidr it would return cidrs that were out of range of original requested cidr block. added test for it
* Adding missing module xmlutil
* fixed bug, wasn't detecting smaller subnet conflict properly added test for it
* Properly format mapping['dns'] before handing off to template for injection (Fixes LP Bug #821203)
* Read response to reset HTTPConnection state machine
* removed unnecessary context from test I had left there from prior
* move ensure_vlan_bridge,ensure_bridge,ensure_vlan to the bridge/vlan specific vif-plugging driver
* re-integrated my changes after merging trunk. fixed some pep8 issues. sorting the list of cidrs to create, so that it will create x.x.0.0 with a lower 'id' than x.x.1.0 (as an example). <- was causing libvirtd test to fail
* Revert migration now finishes
* The OSAPI v1.0 image create POST request should store the instance_id as a Glance property
* There was a recent change to how we should flip FLAGS in tests, but not all tests were fixed. This covers the rest of them. I also added a method to test.UnitTest so that FLAGS.verbose can be set. This removes the need for flags to be imported from a lot of tests
* Bad method call
* Forgot the instance_id parameter in the finish call
* Merged in the power action changes
* Removed test show() method
* Fixed rescue/unrescue since the swap changes landed in trunk. Minor refactoring (renaming callback to _callback since it's not used here)
* Updates to the XenServer glance plugin so that it obtains the set of existing headers and sends them along with the request to PUT a snapshotted image into glance
* Added admin-only decorator
* This updates nova-ajax-console-proxy to correctly use the new syntax introduced last week by Zed Shaw <zedshaw@zedshaw.com>
* Merged trunk
* Changed all references to 'power state' to 'power action' as requested by review
* Added missing tests for server actions Updated reboot to verify the reboot type is HARD or SOFT Fixed case of having an empty flavorref on resize
* Added more informative docstring
* Added XML serialization for server actions
* Removed debugging code
* Updated create image server action to respect 1.1
* Fixes lp819397
* Fixed rescue unit tests
* Nuke hostname. We don't use it
* Split serverXMLDeserializers into v1.0 and v1.1
* another merge
* Removed temporary debugging raise
* Merged trunk
* modify _setup_network for flatDHCP as well
* Merged trunk
* Added xenhost config get/setting
* fix syntax error
* Fixed rescue and unrescue
* remove storing original flags verbosity
* remove set_flags_verbosity.. it's not needed
* Merged trunk
* OS v1.1 is now the default into novarc
* added NOVA_VERSION to novarc
* remove unused reference to exception object
* Add a test for empty dns list in network_info
* Fix comments
* uses 2.6.0 novaclient (OS API 1.1 support)
* Fix to nova-ajax-console-proxy to use the new syntax
* Update the OS API servers metadata resource to match the current v1.1 specification - move /servers/<id>/meta to /servers/<id>/metadata - add PUT /servers/<id>/metadata
* fix pep8 issues that are in trunk
* test_host_filter setUp needs to call its super
* fix up new test_server_actions.py file for flags verbosity change
* merged trunk
* fixing typo
* Sync with latest tests
* The logic for confirming and reverting resizes was flipped. As a result, reverting a resize would end up deleting the source (instead of the destination) instance, and confirming would end up deleting the destination (instead of the source) instance
* Found a case where an UnboundLocalError would be raised in xenapi_conn.py's wait_for_task() method. This fixes the problem by moving the definition of the unbound name outside of the conditional
* Moves code restarting instances after compute node reboot from libvirt driver to compute manager; makes start_guests_on_host_boot flag global
* Moved server actions tests to their own test file. Updated stubbing and how flags are set to be in line with how they're supposed to be set in tests
* merging trunk
* add test for spawning a xenapi instance with an empty dns list
* Nova uses instance_type_id and flavor_id interchangeably when they almost always different values. This can often lead to an instance changing instance_type during migration because the values passed around internally are wrong. This branch changes nova to use instance_type_id internally and flavor_id in the API. This will hopefully avoid confusion in the future
* The OSAPI v1.0 image create POST request should store the instance_id as a Glance property
* Linked to bug
* Changed the definition of the 'action' dict to always occur
* Updates to the XenServer glance plugin so that it obtains the set of existing headers and sends them along with the request to PUT a snapshotted image into glance
* Fixed rescue and unrescue
* Added in tests that verify tests are skipped appropriately
* Merged trunk
* Merged dietz' branch
* Update HACKING: - Make imports more explicit - Add some dict/list formatting guidelines - Add some long method signature/call guidelines - Add explanation of i18n
* Pep8 cleanup
* Defaults `dns` to '' if not present, just as we do with the other network info data
* Removes extraneous bodies from certain actions in the OSAPI servers controller
* Revert should be sent to destination node and confirm should be sent to source node
* Conditionals were not actually runing the tests when they were supposed to. Renamed example testcases
* fix pylint W0102 errors
* Remove whitespaces from name and description before creating security group
* Remove instances of the "diaper pattern"
* Fixes lp819397
* Initial version
* Load instance_types in downgrade method too
* Fix trailing whitespace (PEP8)
* fix test_cloud FLAGS setting
* dist scheduler flag setting fixes
* fix scheduler tests that set FLAGS
* fix more tests that use FLAGS setting
* all subclasses of ComputeDriver should fully implement the interface of the destroy method
* align multi-line string
* fix test_s3 FLAGS uses
* switch FLAGS.* = in tests to self.flags(...) remove unused cases of FLAGS from tests modified test.TestCase's flags() to allow multiple overrides added missing license to test_rpc_amqp.py
* follow convention when raising exceptions
* pep8 fixes
* use an existing exception
* use correct exception name
* fix duplicate function name
* fix undefined variable error
* fix potential runtime exception
* remove unused imports
* remove bit-rotted code
* more cleanup of API tests regarding FLAGS
* fix use of FLAGS in openstack API servers tests to use the new way
* Removes extraneous body argument from server controller methods
* Merged trunk
* Merged trunk
* Default dns to '' if not present
* replaced raise Exception with self.fail()
* Removed dependancy on os.getenv. Test cases now raise Exception if they are not properly skipped
* PEP8 issue
* whoops, got a little comma crazy
* Merged trunk and fixed conflicts to make tests pass
* fumigate non-pep8 code
* Use flavorid only at the API level and use instance_type_id internally
* Yet another conflict resolved
* forgot to remove comment
* updated to work w/ changes after merged trunk fixing var renaming. the logic which forces default to FLAGS.network_size if requested cidr was larger, was also applying to requested cidrs smaller than FLAGS.network_size. Requested cidrs smaller than FLAGS.network_size should be ignored and not overriden
* merged from trunk
* merged from trunk
* merge trunk
* Launchpad automatic translations update
* Resolved pep8 errors
* renaming test_skip_unless_env_foo_exists()
* merging trunk
* Removed trailing whitespace that somehow made it into trunk
* Merged trunk
* Removed duplicate methods created by previous merge
* Fixes lp819523
* Fix for bug #798298
* fix for lp816713: In instance creation, when nova-api is passed imageRefs generated by itself, strip the url down to an id so that default glance connection params are used
* Added check for --allow-admin-api to the host API extension code
* Another unittest
* Merged trunk
* Add support for 300 Multiple Choice responses when no version identifier is used in the URI (or no version header is present)
* Merged trunk
* Glance has been updated for integration with keystone. That means that nova needs to forward the user's credentials (the auth token) when it uses the glance API. This patch, combined with a forth-coming patch for nova_auth_token.py in keystone, establishes that for nova itself and for xenapi; other hypervisors will need to set up the appropriate hooks for their use of glance
* Added changes from mini server
* raise correct error
* Minor test fixes
* fix failing tests
* fix pep8 complaints
* merge from trunk
* Fixed a missing space
* Bad merge res
* merge the trunk
* fix missing method call and add failing test
* Removed duplicate xattr from pip-requires
* Fixed merge issues
* Merged trunk
* merged trunk
* remove unused parameter
* Merged trunk
* Merged from lab
* fix pylint errors
* fix pylint errors
* merge from trunk
* Moves image creation from POST /images to POST /servers/<id>/action
* Fixed several typos
* Changed migration to be an admin only method and updated the tests
* - Remove Twisted dependency from pip-requires - Remove Twisted patch from tools/install_venv.py - Remove eventlet patch from tools/install_venv.py - Remove tools/eventlet-patch - Remove nova/twistd.py - Remove nova/tests/test_twistd.py - Remove bin/nova-instancemonitor - Remove nova/compute/monitor.py - Add xattr to pip-requires until glance setup.py installs it correctly - Remove references to removed files from docs/translations/code
* Fix an error in fetch_image()
* Get instance by UUID instead of id
* Merged trunk
* Added the powerstate changes to the plugin
* pull-up from trunk/fix merge conflict
* fixing typo
* refactored tests
* pull-up from trunk
* Removing the xenapi_image_service flag in favor of image_service
* cleanup
* Merged trunk
* abstraction of xml deserialization
* fixing method naming problem
* removing compute monitor
* merge from trunk
* code was checking for key in sqlalchemy instance and will ignore if value is None, but wasn't working if floating_ip was a non-sqlalchemy dict obj. Therefore, updated the error checking to work in both caes
* While we currently trap JSON encoding exceptions and bail out, for error notification it's more important that *some* form of the message gets out. So, we take complex notification payloads and convert them to something we know can be expressed in JSON
* Better error handling for resizing
* Adds the auth token to nova's RequestContext. This will allow for delegation, i.e., use of a nova user's credentials when accessing other services such as glance, or perhaps for zones
* merged trunk rev1348
* Launchpad automatic translations update
* added some tests for network create & moved the ipv6 logic back into the function
* merged with nova trunk
* Added host shutdown/reboot conditioning
* avoid explicit type checking, per brian waldon's comment
* Added @test.skip_unless and @test.skip_if functionality. Also created nova/tests/test_skip_examples.py to show the skip cases usage
* fix LinuxBridgeInterfaceDriver
* merge trunk, resolve conflict in net/manater.py in favor of vif-plug
* initial commit of vif-plugging for network-service interfaces
* Merged trunk
* pep8 fixes
* Controller -> self
* Added option for rebooting or shutting down a host
* removed redundant logic
* merged from trunk
* adding a function with logic to make the creation of networks validation a bit smarter: - detects if the cidr is already in use - when specifying a supernet to be split into smaller subnets via num_networks && network_size, ensures none of the returned subnets are in use by either a subnet of the same size and range, nor a SMALLER size within the same range. - detects if splitting a supernet into # of num_networks && network_size will fit - detects if the supernet/cidr specified is conflicting with a network cidr that currently exists that may be a larger supernet already encompassing the specified cidr. "
* Carry auth_token in nova's RequestContext
* merge with trunk, resolve conflicts
* Revert hasattr() check on 'set_auth_token' for clients
* it makes the pep8, or else it gets the vim again
* merge from trunk
* Fixes this issue that I may have introduced
* Update compute tests to use new exceptions
* Resync to trunk
* Remove copy/paste error
* Launchpad automatic translations update
* Launchpad automatic translations update
* Fixed review comments: Put parsing logic of network information in create_instance_helper module and refactored unit testcases as per the changed code
* pep8
* wow, someone whent all crazy with exceptions, why not just return an empty list?
* Only call set_auth_token() on the glance client if there's one available
* Make unit tests pass
* merging
* only attempt to get a fixed_up from a v4 subnet if there is a v4 subnet
* FlavorNotFound already existed, no need to create another exception
* Created exceptions for accepting in OSAPI, and handled them appropriately
* only create fixed_ips if we have an ipv4 range
* Revert to using context; to avoid conflict, we import context module as nova_context; add context to rescue
* You see what happens Danny when you forget to close the parenthesis
* Merged with trunk
* Merged trunk
* allow the manager to try to do the right thing
* allow getting by the cidr_v6
* the netmask is implied by the cidr, so use that to display the v6 subnet
* either v4 or v6 is required
* merging trunk
* pull-up from trunk and conflict resolution
* merge trunk
* stwart the switch to just fixed_range
* typo
* Round 1 of changes for keystone integration. * Modified request context to allow it to hold all of the relevant data from the auth component. * Pulled out access to AuthManager from as many places as possible * Massive cleanup of unit tests * Made the openstack api fakes use fake Authentication by default
* require either v4 or v6
* pull-up from trunk
* Fix various errors discovered by pylint and pyflakes
* fixing underline
* removing extra verbage
* merged trunk
* This change creates a minimalist API abstraction for the nova/rpc.py code so that it's possible to use other queue mechanisms besides Rabbit and/or AMQP, and even use other drivers for AMQP rather than Rabbit. The change is intended to give the least amount of interference with the rest of the code, fixes several bugs in the tests, and works with the current branch. I also have a small demo driver+server for using 0MQ which I'll submit after this patch is merged
* removing dict() comment
* adding more on return_type in docstrings
* Fixes issue with OSAPI passing compute API a flavorid instead of an instance identifier. Added tests
* made the whole instance handling thing optional
* Reorganize the code to satisfy review comments
* pull-up from trunk; fix problem obscuring context module with context param; fix conflicts and no-longer-skipped tests
* remove unused import
* --Stolen from https://code.launchpad.net/~cerberus/nova/lp809909/+merge/68602
* removing 'Defining Methods' paragraph
* rewording
* Use the util.import_object to import a module
* rewording
* one last change
* upgrades
* expanding
* merged trunk and fix time call
* updating HACKING
* Fixing lxml version requirement
* Oops, I wasn't actually being compatible with the spec here
* bumping novaclient version
* Fixes lp:818050
* Updated resize to call compute API with instance_type identifiers instead of flavor identifiers. Updated tests
* fix run_tests.sh
* merge trunk
* Fixed changes missed in merge
* fix more spacing issues, and removed self link from versions template data
* merged trunk
* added instance support to to_primitive and tests
* merged trunk and fixed post_live_migratioin_at_destination to get nw_info
* Removing unnecessary imports
* Added xml schema validation for extensions resources. Added corresponding xml schemas. Added lxml dep, which is needed for doing xml schema validation
* remove extra log statement
* api/ec2: rename CloudController._get_instance_mapping into _format_instance_mapping
* fixed typo
* merge with trunk
* fixed pep8 issues and removed unnecessary factory function
* returned vsa_manager, nova-manage arg and print changes
* Added the config values to the return of the host_data method
* Adds XML serialization for servers responses that match the current v1.1 spec
* Added methods to read/write values to a config file on the XenServer host
* fix pep8 errors
* minor cleanup
* Removed unused Duplicate catch
* Fix to_dict() and elevated() to preserve auth_token; revert an accidental change from context.get_admin_context() to simply context
* Fixes bug 816604, which is the problem that timeformat in server responses for updated and created are incorrect. This fix just converts the datetime into the correct format
* merging trunk
* pep8
* moving server backup to /servers/<id>/action instead of POST /images
* Simplified test cases
* Rewrite ImageType enumeration to be more pythonic
* refactoring and make self links correct (not hard coded)
* Fix tests for checking pylint errors
* Use utils.utcnow. Use True instead of literal 1
* Some tests for resolved pylint errors
* simplify if statement
* merge trunk
* use wsgi XMLNS/ATOM vars
* Updated deserialization of POST /servers in the OSAPI to match the latest v1.1 spec
* Removed unused Duplicate catch
* pull-up from trunk
* Catch DBError for duplicate projects
* Catch DBError for duplicate projects
* Make network_info truly optional
* trunk infected with non-pep8 code
* unicode instead of str()
* Add a flag to set the default file mode of logs
* merge trunk
* make payload json serializable
* moved test
* Removed v1_1 from individual tests
* merge from trunk
* merge to trunk
* more commented code removed
* some minor cosmetic work. addressed some dead code section
* merged with nova-1336
* prior to nova-1336 merge
* remove authman from images/s3.py and replace with flags
* fix tests broken in the merge
* merged trunk
* fix undeclared name error
* fix undeclared name error
* fix undeclared name error
* fix undeclared name errors
* remove unused assignment which causes undeclared name error
* fix undefined variable errors
* fix call to nonexistant method to_global_ipv6. Add myself to authors file
* Make network_info truly optional
* updates handling of arguments in nova-manage network create. updates a few of the arguments to nova-manage and related help. updates nova-manage to raise proper exceptions
* forgot a line
* fixed create_networks ipv6 management
* Fail silently
* typo
* --bridge defaults to br100 but with a deprecation warning and to be removed in d4
* Reverting to original code
* use ATOM_XMLNS everywhere
* merge trunk
* added unit testcase to increase code coverage
* stub out VERSIONS for the tests
* put run_tests.sh back to how it was
* Fixed conflict
* Fail silently
* Merged with trunk and fixed broken unit test cases
* Fix the skipped tests in vmwareapi and misc spots. The vmware networking stuff is stubbed out, so the tests can be improved there by fixing the fakes
* pep8 issue
* refactoring MetadataXMLDeserializer in wsgi/common
* move viewbuilder and serializer tests into their own test cases
* Fix all of the skipped libvirt tests
* fix typo
* merged trunk
* Fixes typo in attach volume
* utilize _create_link_nodes base class function
* default the paramater to None, not sure why it was required to begin with
* pass None in for nw_info
* added test for accept header of atom+xml on 300 responses to make sure it defaults back to json, and reworked some of the logic to make how this happens clearer
* Drop FK before dropping instance_id column
* moved rest of build logic into builder
* Drop FK before dropping instance_id column
* Removed FK import
* Delete FK before dropping instance_id column
* oops! moved ipv6 block back into the for loop in network manager create_networks
* update everything to use global VERSIONS
* merged trunk
* change local variable name
* updated handling of v6 in network manager create_networks to it can receive None for v6 args
* added ipv6 requirements to nova-manage network create. changed --network to --fixed_range_v4
* remove unexpected parameter
* fixed xmlns issue
* updated the bridge arg requirements based on manager
* this change will require that local urls be input with a properly constructed local url: http://localhost/v1.1/images/[id]. Such urls are translated to ids at the api layer. Previously, any url ending with and int was ok
* make atom+xml accept header be ignored on 300 responses in the VersionsRequestDeserializer
* Removed superfluous parameter
* Use auth_token to set x-auth-token header in glance requests
* Fixed the virt driver base
* Some work on testing. Two cases related to lp816713 have some coverage already: using an id as an imageRef (test_create_instance_v1_1_local_href), and using a nova href as a url (test_create_instance_v1_1)
* Remove xenapi_inject_image flag
* Add a flag to set the default file mode of logs
* fixed issue with factory for Versions Resource
* Fix context argument in a test; add TODOs
* improved the code per peer review
* Add context argument a lot more places and make unit tests work
* fix hidden breakage in test
* Remove xenapi_inject_image flag
* removed unused import
* pep8
* pep8
* updated nova-manage create network. better help, handling of required args, and exceptions. Also updated FLAG flat_network_bridge to default to None
* Re-enables and fixes test_cloud tests that broke from multi_nic
* Fix for boto2
* Re-enables and fixes test_cloud tests that broke from multi_nic
* add invalid device test and make sure NovaExceptions don't get wrapped
* merge from trunk
* pep8
* pep8
* updating common metadata xml serializer tests
* Cleaned up test_servers
* Moved server/actions tests to test_server_actions.py
* updating servers metadata resource
* pull-up from trunk
* Address merge review concerns
* Makes security group rules with the newer version of the ec2 api and correctly supports boto 2.0
* merging parent branch servers-xml-serialization
* updating tests
* updated serializer tests for multi choice
* pep8 cleanup
* multi choice XML responses with tests
* merged recent trunk
* merge with trunk
* Cherry-pick of tr3buchet's fix for add_fixed_ip_to_instance
* Resolved conflicts with trunk
* fix typo in attach_volume
* fix the last of them
* fake plug for vif driver
* couple more fixes
* cleanup network create
* code was checking for key in sqlalchemy instance but if floating_ip is a non-sqlalchemy dict instance instead, value=None will cause NoneType exception
* fix more tests
* fix the first round of missing data
* fix the skipped tests in vmwareapi xenapi and quota
* Add myself to authors
* Implements a simplified messaging abstraction with the least amount of impact to the code base
* fix for lp816713: In instance creation, when nova-api is passed imageRefs generated by itself, strip the url down to an id so that default glance connection params are used
* cloud tests all passing again
* added multi_choice test just to hit another resource
* pep8 fixes
* initial working 300 multiple choice stuff
* cherry-pick tr3buchet's fix for milestone branch
* cleanup
* pep8
* pep8
* First pass at converting this stuff--pass context down into vmops. Still need to fix unit tests and actually use auth_token from the context..
* pep8 and simplify rule refresh logic
* pep8
* merging parent branch lp:~rackspace-titan/nova/osapi-create-server
* adding xml deserialization for createImage action
* remove some logging, remove extra if
* compute now appends self.host to the call to add an additional fixed ip to an instance
* Update security gropu rules to properly support new format and boto 2.0
* Updated test stubs to contain the correct data Updated created and updated in responses to use correct time format
* pep8 compliance
* VSA volume creation/deletion changes
* moved v1.1 image creation from /images to /servers/<id>/action
* fixed per peer review
* passing host from the compute manager for add_fixed_ip_to_instance()
* adding assert to check for progress attribute
* removing extra function
* Remove debugging code
* cleanup
* fixed minor issues
* reverting tests to use imageRef, flavorRef
* updating imageRef and flavorRef parsing
* Updates to the compute API and manager so that rebuild, reboot, snapshots, and password resets work with the most recent versions of novaclient
* merging trunk; resolving conflicts
* Add OpenStack API support for block_device_mapping
* queries in the models.Instance context need to reference the table by name (fixed_ips) however queries in the models.FloatingIp context alias the tables out properly and return the data as fixed_ip (which is why you need to reference it by fixed_ip in that context)
* added warning when size of subnet(s) being created are larger than FLAG.network_size in attempt to alleviate confusion. For example, currently when 'nova-manage network create foo 192.168.0.0/16', the result is that it creates a 192.168.0.0/24 instead without any indication to why
* xml deserialization works now
* merged from trunk
* merged trunk
* merging trunk
* pull-up from trunk
* got rid of print
* got rid of more xml string comparisons
* atom test updates
* got rid of some prints
* got rid of string comparisons in serializer tests
* removing objectstore and image_service flag checking
* Updates /servers requests to follow the v1.1 spec. Except for implementation of uuids replacing ids and access ips both of which are not yet implemented. Also, does not include serialized xml responses
* fixed detail xml and json tests that got broken
* updated atom tests
* Updated ServerXMLSerializer to utilize the IPXMLSerializer
* merged trunk
* merge from trunk
* fix pep8 issues
* fix issue with failing test
* merged trunk
* I'm sorry, for my fail with rebasing. Any way previous branch grew to many other futures, so I supersede it. 1. Used optparse for parsing arg string 2. Added decorator for describe method params 3. Added option for assigning network to certain project. 4. Added field to "network list" for showing which project owns network
* Moved the VIF network connectivity logic('ensure_bridge' and 'ensure_vlan_bridge') from the network managers to the virt layer. In addition, VIF driver class is added to allow customized VIF configurations for various types of VIFs and underlying network technologies
* merge with trunk, resolve conflicts
* fix pep8
* Launchpad automatic translations update
* removing rogue print
* removing xenapi_image_service flag
* adding to authors
* fixing merge conflict
* merge from trunk
* initial stuff to get away from string comparisons for XML, and use ElementTree
* merged with 1320
* volume name change. some cleanup
* - Updates /images/<id>/meta and /images/<id>/meta/<key> to respect the latest specification - Renames ../meta to ../metadata - Adds PUT on ../metadata to set entire container (controller action is called update_all)
* Adds proper xml serialization for /servers/<id>/ips and /servers/<id>/ips/<network_name>
* some cleanup. VSA flag status changes. returned some files
* Pass on auth_token
* Warn user instead of ignoring
* Added ensuring filter rules for all VMs
* atom and xml_detail working, with tests
* Adds the -c|--coverage flag to run_tests.sh to generate a local code coverage report
* Estetic fix
* Fix boot from volume failure for network block devices
* Bug #796813: vmwareapi does not support distributed vswitch
* modified to conform to latest AWS EC2 API spec for authorize & revoke ingress params using the IpPermissions data structure, which nests lists of CIDR blocks (IpRanges) as well as lists of Group data
* Fixes faults to use xml serializers based on api version. This fixed bug 814228
* Fixes a typo in rescue instance in ec2 api. This is mnaser's fix, I just added a test to verify the change
* Fixes bug 797250 where a create server request with the body '{"name":"server1"}' results in a HTTP 500 instead of HTTP 422
* adding xml serialization for /servers/<id>/ips and /servers/<id>/ips/<network>
* add a simple broken test to verify the bug
* Fixed old libvirt semantics, added resume_guests_state_on_host_boot flag
* xml version detail working with tests
* adding testing to solidify handling of None in wsgi serialization
* Added check to make sure there is a server entity in the create server request
* Fixed some typos in log lines
* removed prints, got versions detail tests passing, still need to do xml/atom
* reverting some wsgi-related changes
* merged trunk
* removed print lines
* This fixes the xml serialization of the /extensions and /extensions/foo resources. Add an ExtensionsXMLSerializer class and corresponding unit tests
* added 1.0 detail test, added VersionRequestDeserializer to support Versions actions properly, started 300/multiple choice work
* fix for reviews
* Fixed bad test Fixed using wrong variable
* Moved the exception handling of unplugging VIF from virt driver to VIF driver. Added better comments. Added OpenStack copyrights to libivrt vifs.py
* pep8 + spelling fixes
* Floating IP DB tests
* Updated Faults controller to choose an xml serializer based on api version found in the request url
* removing unnecessary assignments
* Hotfix
* Some estetic refactoring
* Fixing PEP8 compliance issues
* adding --fixes
* fixing typos
* add decorator for 'dns' params
* merge with trunk, resolve conflicts
* pep8
* Fixed logging
* Fixed id
* Fixed init_host context name
* Removed driver-specific autostart code
* fix 'version' command
* Add bug reference
* Use admin context when fetching instances
* Use subscript rather than attribute
* Make IP allocation test work again
* Adjust and re-enable relevant unit tests
* some file attrib changes
* some cosmetic changes. Prior to merge proposal
* Added test_serialize_extenstions to test ExtensionsXMLSerializer.index()
* tests: unit tests for describe instance attribute
* tests: an unit test for nova.compute.api.API._ephemeral_size()
* tests: unit tests for nova.virt.libvirt.connection._volume_in_mapping()
* tests/glance: unit tests for glance serializer
* tests: unit tests for nova.virt
* tests: unit tests for nova.block_device
* db/api: fix network_get_by_cidr()
* image/glance: teach glance block device mapping
* tests/test_cloud:test_modify_image: make it pass
* nova/tests/test_compute.py: make test_compute.test_update_block_device_mapping happy
* test_metadata: make test_metadata pass
* test_compute: make test_compute pass
* test_libvirt: fix up for local_gb
* virt/libvirt: teach libvirt driver swap/ephemeral device
* virt/libvirt: teach libvirt driver root device name
* compute/api: pass down ephemeral device info
* compute/manager, virt: pass down root device name/swap/ephemeral to virt driver
* ec2/get_metadata: teach block device mapping to get_metadata()
* api/ec2: implement describe_instance_attribute()
* db/api: block_device_mapping_update_or_create()
* block_device: introduce helper function to check swap or ephemeral device
* ec2utils: factor generic helper function into generic place
* Launchpad automatic translations update
* Config-Drive happiness, minus smoketest
* merged with latest nova-1308
* more unittest changes
* Last patch broke libvirt mapping of network info. This fixes it
* Fixes an issue with out of order operations in setup_network for vlan mode in new ha-net code
* Merged with 1306 + fix for dns change
* update netutils in libvirt to match the 2 dns setup
* merge
* merge with 1305
* make sure dhcp_server is available in vlan mode
* Adds ability to set DNS entries on network create. Also allows 2 dns servers per network to be specified
* pep8-compliant. Prior to merge with 1305
* Reverted volume driver part
* pep cleanup
* remove auth manager from instance helper
* docstring update
* pass in the right argument
* pull out auth manager from db
* merge trunk
* default to None in the method signature
* merged trunk
* remove some more stubouts and fakes
* clean up fake auth manager in other places
* same as: https://code.launchpad.net/~tr3buchet/nova/lp812489/+merge/68448 fixes: https://bugs.launchpad.net/nova/+bug/812489 but in a slightly different context
* pep8
* updating images metadata resource
* ...and this is me snapping back into reality removing all trace of ipsets. Go me
* fixed networks not defined error when creating instances when no networks exist
* fix test_access
* This is me being all cocky, thinking I'll make it use ipsets..
* fix auth tests
* Add i18n for logging, changed create_bridge/vlan to should_create_bridge/vlan, changed unfilter_instance's keyword param to positional, and added Dan's alternate ID to .mailmap
* fix extensions tests
* merge trunk
* fix all tests
* pep8 fixes
* Updated the comments for VMWare VIF driver
* initial test for v1.1 detail request
* Moved restaring instances from livbirt driver to ComputeManager
* Added network_info to unfilter_instance to avoid exceptions when shutting down instances
* Removed unused exception object
* Fixed the missing quotes for 802.1Qbh in libvirt template
* add decorator for multi host option
* Merged Dan's branch
* Merged trunk
* use new 'create_vlan' field in XenAPIBridgeDriver
* merge with trunk, resolve conflicts
* remove IPy
* for libvirt OVS driver, do not make device if it exists already
* refactor xenapi vif plug to combine plug + get_vif_rec, tested and fixed XenAPIBridgeDriver
* Correctly add xml namespaces to extensions xml
* Added xml serialization for GET => /extensions. Added corresponding tests
* merge ryu's branch
* remove debugging
* fix a whole bunch of tests
* start removing references to AuthManager
* change context to maintain exact time, store roles, use ids instead of objects and use a uuid for request_id
* Resolved conflict with trunk
* Adds an XML serializer for limits and adds tests for the Limits view builder
* pep8
* add in the right number of fields
* pep8
* updated next-available to use utc time
* merge trunk
* rename in preperation for trunk merge
* only include dns entries if they are not None in the database
* Updated the compute API so that has_finished_migration uses instance_uuid. Fixes some regressions with 1295-1296
* only use the flag if it evaluates true
* Catch the FixedIpNotFoundForInstance exception when no fixed IP is mapped to instance
* Updated time-available to be correct format Fixed old tests to respect this
* This fixes issues with invalid flavorRef's being passed in returning a 500 instead of a 400, and adds tests to verify that two separate cases work
* merge from trunk
* Moving lp:~rackspace-titan/nova/extensions-xml-serialization to new branch based off of trunk. To remove dep on another branch
* Perform fault wrapping in the openstack WSGI controller. This allows us to just raise webob Exceptions in OS API controllers with the appropriate explanations set. This resolves some inconsistencies with exception raising and returning that would cause HTML output to occur when faults weren't being handled correctly
* pep8 and stuff
* Some code was recently added to glance to allow the is_public filter to be overridden. This allows us to get all images and filter properly on the nova side until keystone support is in glance. This fixes the issue with private images and snapshots disappearing from the image list
* pep8
* Merged with trunk which includes ha-net changes
* Updated the compute API so that has_finished_migration uses instance_uuid. Fixes some regressions with 1295-1296
* Updating the /images and /images/detail OSAPI v1.1 endpoints to match spec w/ regards to query params
* Ensure valid json/xml/atom responses for versions requests
* Update OSAPI v1.1 /flavors, /flavors/detail, and /flavors/<id> to return correct xml responses
* Renamed the virt driver resize methods to migration for marginally more understandable code
* allow 2 dns servers to be specified on network create
* allow 2 dns servers to be specified on network create
* Fixes lp813006
* Fixes lp808949 - "resize doesn't work with recent novaclient"
* minor fix
* Some broken tests from my other merge
* Fixed import issue
* added tests, updated pep8 fixes
* Changed test_live_migration_raises_exception to use mock for compte manager method
* fixed another issue with invalid flavor_id parsing, and added tests
* minor cleanup
* pep8 issue
* cleanup
* merge with trunk
* Fixed the localization unit test error in the vif driver logging
* cleanup tests and fix pep8 issues
* removed vif API extension
* Fixed Xenapi unit test error of test_rescue
* Slight indentation change
* Merged Dan Wendlandt's branch and fixed pep8 errors
* Added call to second coverage invocation
* Fixed an issue where was invoked before it was defined in the case of a venv
* - Add 'fixed_ipv6' property to VirtualInterface model - Expose ipv6 addresses in each network in OSAPI v1.1
* forgot to add xenapi/vif.py
* Perform fault wrapping in the openstack WSGI controller. This allows us to just raise webob Exceptions in OS API controllers with the appropriate explanations set. This resolves some inconsistencies with exception raising and returning that could cause HTML output to occur when an exception was raised
* Added LimitsXMLSerializer Added LimitsViewBuidlerV11Test test case
* Added create_vlan/bridge in network unit test
* Add OpenStack API support for block_device_mapping
* Changed the default of VIF driver
* Fixed PEP8 issues
* Combined bridige and vlan VIF driver to allow better transition for current Nova users
* Merged trunk
* Merged lp:~~danwent/nova/network-refactoring
* Adds HA networking (multi_host) option to networks
* CHanges based on feedback
* Older Windows agents are very picky about the data sent to it. It also requires the public key for the password exchange to be in a string format and not an integer
* adding flavors xml serialization
* added versions list atom test and it passes
* Set the status_int on fault wrapped exceptions. Fixes WSGI logging issues when faults are returned
* Fix plus passing tests
* remove debug prints
* merge ryu's branch
* update for ryu's naming changes, fix some bugs. tested with OVSDriver only so far
* Fixes bug #807764. Please disregard previous proposal with incorrect bug #
* Whoops
* Added LP bug num to TODO
* Split tests into 2
* Fix email address in Author
* Make sure reset_network() call happens after we've determined the agent is running
* pep8
* Merged trunk
* Added Dan Wendlandt to Authors, and fixed failing network unit tests
* merged trunk
* Made all but one test pass for libvirt
* Moved back allow_project_net_traffic to libvirt conn
* Set the status_int on fault wrapped exceptions. Fixes WSGI logging issues when faults are returned
* lp812489: better handling of periodic network host setup to prevent exception
* add smoketests to verify image listing
* default image to private on register
* correct broken logic for lxc and uml to avoid adding vnc arguments (LP: #812553)
* Stupid merge and fixed broken test
* Most of the XenServer plugin files need the execute bit set to run properly. However, they are inconsistent as it is, with one file having the execute bit set, but the another having it set when it is not needed
* Made the compute unit tests to pass
* Host fix
* Created _get_instance_nw_info method to clean up duplicate code
* initial changes for application/atom+xml for versions
* Update Authors file
* network api release_floating_ip method will now check to see if an instance is associated to it, prior to releasing
* merge from lp:~midokura/nova/network-refactoring-l2
* Corrects a bad model lookup in nova-manage
* correct indentation
* Fixes lp809587
* Fix permissions for plugins
* Ya! Apparently sleep helps me fix failing tests
* Some older windows agents will crash if the public key for the keyinit command is not a string
* added 'update' field to versions
* First attempt at vmware API VIF driver integration
* Removed unnecessary context parameter
* Merged get_configurations and plug of VIF drivers
* Moved ensure_vlan_bridge of vmware to VIF driver
* Added network_info parameter to all the appropriate places in virt layers and compute manager
* remove xenapi_net.py from network directory, as this functionality is now moved to virt layer
* first cut of xenserver vif-plugging, some minor tweaks to libvirt plugging
* Refactor device type checking
* Modified alias ^Cd minor fixes
* Merged with trunk
* Reverted to original code, after network binding to project code is in integration code for testing new extension will be added
* Fixed broken unit testcases after adding extension and minor code refactoring
* Added a new extension instead of directly making changes to OS V1.1. API
* have to use string 'none' and add a note
* tell glance to not filter out private images
* updated links to use proper atom:link per spec
* Renamed setup_vif_network to plug_vif
* Fixes lp813006 - inconsistent DB API naming
* move import network to the top
* Merged lp:~danwent/nova/network-refactoring-l2
* merged from trunk
* network api release_floating_ip method checks if an instance associated to the floating prior to releasing. added test
* Added detroy_vif_network
* Functionality fixed and new test passing
* Updates to the compute API and manager so that rebuild, reboot, snapshots, and password resets work with the most recent versions of novaclient
* better handling of periodic network host setup
* Merged trunk
* Removed blank lines
* Fix unchecked key reference to mappings['gateway6']. Fixes LP #807764
* add downgrade
* correct broken logic for lxc and uml to avoid adding vnc arguments (LP: #812553)
* Beginnings of the patch
* Fixed equality comparison bug in libvirt XML
* Fixed bad parameters to setup_vif_networks
* Zapped an extra newline
* Merged with trunk
* Add support for generating local code coverage report
* respecting use_ipv6 flag if set to False
* merged trunk
* merged trunk
* fixed reviewer's comment. 1. ctxt -> context, 2. erase unnecessary exception message from nova.sccheduler.driver
* cleanup
* merge of ovs L2 branch
* missed the vpn kwarg in rpc
* fix bad merge
* change migration number
* merged trunk
* This change adds the basic boot-from-volume support to the image service
* Fixed the broken tests again
* Merging from upstream
* Some missed instance_id casts
* pep8 cleanup
* adding --fixes
* adding fixed_ipv6 property to VirtualInterface model; exposing ipv6 in api
* VSA schedulers reorg
* Merged with trunk
* fix issues that were breaking vlan mode
* fixing bad lookup
* Updates to the XenServer agent plugin to fix file injection:
* Don't jsonify the inject_file response. It is already json
* localization changes. Removed vsa params from volume cloud API. Alex changes
* Added auth info to XML
* returncode is an integer
* - Fixed the conflift in vmops.py
* Check returncode in get_agent_features
* resolved pep8 issues
* merged from trunk
* Updated servers to choose XML serializer based on api version
* pep8
* updated servers to use ServerXMLSerializer
* added 'create' to server XML serializer
* added 'detail' to server XML serializer
* convert group_name to string, incase it's a long
* nova/api/ec2/cloud.py: Rearranged imports to be alphabetical as per HACKING
* pep8'd
* Extended test to check for error specific error code and test cover for bad chars
* Some basic validation for creating ec2 security groups. (LP: #715443)
* changed to avoid localization test failure
* Initial test case proving we have a bug of, ec2 security group name can exceed 255 chars
* added index to servers xml serializer
* Change _agent_has_method to _get_agent_features. Update the inject files function so that it calls _get_agent_features only once per injected file
* pep8
* Moved Metadata Serialization Test
* Added ServerXMLSerializer with working 'show' method Factored out MetadataXMLSerializer from images and servers into common
* added missing drive_types.py
* added missing instance_get_all_by_vsa
* merged with 1280
* VSA: first cut. merged with 1279
* Added some unit and integration tests for updating the server name via the openstack api
* renamed priv method arg_to_dict since it's not just used for revoke. modified to conform to latest AWS EC2 API spec for authorize & revoke ingress params using the IpPermissions data structure, which nests lists of CIDR blocks (IpRanges) as well as lists of Group data
* got rid of return_server_with_interfaces and added return_server_with_attributes
* Added ServerXMLSerializationTest
* take out print statements
* Ensures a bookmark link is returned in GET /images. Before, it was only returned in GET /images/detail
* One last nit
* Tests passing again
* put maxDiff in setUp
* remove get_uuid_from_href and tests
* stop using get_uuid_from_href for now
* Updated with some changes from manual testing
* Updates to the XenServer agent plugin to fix file injection:
* merging trunk
* use id in links instead of uuid
* pep8 fixes
* fix ServersViewBuilderV11Tests
* Adds greater configuration flexibility to rate limiting via api-paste.ini. In particular:
* return id and uuid for now
* merge with trunk
* Adds distributed scheduler and multinic docs to the Developer Reference page
* Added more view builder tests
* merged wills revisions
* Added ViewBuilderV11 tests Fixed bug with build detail
* fix issues with uuid and old tests
* - Present ip addresses in their actual networks, not just a static public/private - Floating ip addresses are grouped into the networks with their associated fixed ips - Add addresses attribute to server entities
* Update the agent plugin so that it gets 'b64_contents' from the args dict instead of 'b64_file' (which isn't what nova sends)
* Adding unit and integration tests for updating the server name via the 1.1 api
* merge with trunk, resolve conflicts
* remove argument help from docstrings + minor fix
* Fixes Bug #810149 that had an incomplete regex
* Existing Windows agent behaves differently than the Unix agents and require some workarounds to operate properly. Fixes are going into the Windows agent to make it behave better, but workarounds are needed for compatibility with existing installed base
* Add possibility to call commands without subcommands
* fix redundency
* Updated Authors
* Fixed remove_version_from_href Added tests
* mistakenly commited this code into my branch, reverting it to original from trunk
* Merged with trunk and fixed pep errors
* added integrated unit testcases and minor fixes
* First pass
* corrected catching NoNetworksDefined exception in host setup and getting networks for instance
* catching the correct exception
* Added ServersTestv1_1 test case Changed servers links to use uuid instead of id
* pep8
* Updated old tests
* add support to write to stdout rather than file if '-' is specified. see bug 810157
* merging trunk
* removed self links from flavors
* added commands
* exposing floating ips
* updated image entity for servers requests
* Update the agent plugin so that it gets 'b64_contents' from the args dict instead of 'b64_file' (which isn't what nova sends)
* Use assertRaises instead of try/except--stupid brain-o
* Added progress attribute to servers responses
* fixing bad merge
* pull-up from trunk, while we're at it
* Comment on parse_limits(); expand an exception message; add unit tests; fix a minor discovered bug
* adding bookmark to images index
* add updated and created to servers detail test, and make it work
* removing mox object instantiation from each test; renaming _param to filter_name
* add self to authors
* use 'with' so that close is called on file handle
* adding new query parameters
* support '-' to indicate stdout in nova-manage project 'environment' and 'zip'
* Improvements to nova-manage: 1. nova-manage network list now shows what belongs to what project, and what's the vlan id, simplifying management in case of several networks/projects 2. nova-manage server list [zone] - shows servers. Useful if you have many servers and want to list them in particular zone, instead of grep'ing nova-manage service list
* Minor fixes
* Merged with Trunk
* updated to support and check for flavor links in server detail response
* Updated responses for GET /images and GET /images/detail to respect the OSAPI v1.1 spec
* merge
* beginning server detail spec 1.1 fixup
* Augment rate limiting to allow greater flexibility through the api-paste.ini configuration
* merge from trunk
* added unit testcases for validating the requested networks
* Extends the exception.wrap_exception decorator to optionally send an update to the notification system in the event of a failure
* trunk merge
* merging trunk
* updating testing; simplifying instance-level code
* pep8
* adding test; casting instance to dict to prevent sqlalchemy errors
* merged branch lp:~rackspace-titan/nova/images-response-formatting
* Add multinic doc and distributed scheduler doc to developer guide front page
* merged trunk
* Don't pop 'vpn' on kwargs inside a loop in RPCAllocateFixedIP._allocate_fixed_ips (fixes KeyError)
* Added Mohammed Naser to Authors file
* merge with trunk
* fix reviewer's comment
* Starting part of multi-nic support in the guest. Adds the remove_fixed_ip code, but is incomplete as it needs the API extension that Vek is working on
* Don't pop 'vpn' on kwargs inside a loop in RPCAllocateFixedIP._allocate_fixed_ips (fixes KeyError's)
* added unit test cases and minor changes (localization fix and added fixed_ip validation)
* Made sure the network manager accepts kwargs for FlatManager
* Fix bug 809316. While attempting to launch cloudpipe instance via 'nova-manage vpn run' command, it comes up with IP from instances DHCP pool and not the second IP from the subnet, which break the forwarding rules that allow users to access the vpn. This is due 'allocate_fixed_ip' method in VlanManager doesn't receive 'vpn' as an argument from caller method and cloudpipe instances always considers as 'common' instances
* cleanup
* server create deserialization functional and tested
* added xml deserialization unit test cases and fixe some pep errors
* Updated some common.py functions to raise ValueErrors instead of HTTPBadRequests
* Renamed 'nova-manage server list' -> 'nova-manage host list' to differentiate physical hosts from VMs
* Allowed empty networks, handled RemoteError properly, implemented xml format for networks and fixed broken unit test cases
* minor cleanup
* Updated ImageXMLSerializer to serialize links in the server entity
* Updated images viewbuilder to return links in server entity
* updated images tests
* merged trunk
* pep8
* Updated remove_version_from_href to be more intelligent Added tests
* Fix PEP8 for 809316 bugfix
* Fix 809316 bug which prevent cloudpipe to get valid IP
* fix reviewer's comment
* stray debug
* pep8
* fixed marshalling problem to cast_compute..
* fixed all failed unit test cases
* This doesn't actually fix anything anymore, as the wsgi_refactor branch from Waldon took care of the issue. However, a couple rescue unit tests would have caught this originally, so I'm proposing this to include those
* fixes an issue where network host fails to start because a NoNetworksFound exception wasn't being handled correctly
* Bad test
* unknowingly made these changes, reverting to original
* catch raise for networks not found in network host and instance setup
* Merged with Trunk
* add optional parameter networks to the Create server OS API
* Changed broken perms
* Tests
* Made xen plugins rpm noarch
* Set the proper return code for server delete requests
* Making the xen plugins rpm to be noarch
* merging trunk
* Expanding OSAPI wsgi module to allow handling of headers and status codes
* Updates some of the extra scripts in contrib and tools to current versions
* updating code to implement tests
* merging parent wsgi-refactor
* allowing controllers to return Nonew
* adding headers serializer
* pep8
* minor refactoring
* minor tweaks
* Adds an extension which makes add_fixed_ip() available through an OpenStack extension
* Comment out these two asserts; Sandy will uncomment in his merge-prop
* Fix the bug 800759
* merging wsgi-refactor
* adding 204 response code
* pre trunk merge
* Missing Author updated
* Allows for ports in serverRef in image create through the openstack api
* Adds security groups to metadata server. Also adds some basic tests for metadata code
* fix comments
* fix conflict
* Added vif OS API extension to get started on it
* Moved 'setup_compute_network' logic into the virt layer
* Added myself to authors file
* Fixed two typos in rescue API command
* flaw in ec2 cloud api, _get_image method , if doing a search for aki-0000009, yet that image name doesn't exist, it strips off aki- and looks for any image_id 0000009 and if there was an image match that happens to be an ami instead of aki, it will go ahead and deregister the ami instead. That behavior is unintended, so added logic to ensure that the original request image_id matches the type of image being returned from database by matching against container_format attr
* Fixed up an incorrect key being used to check Zones
* merged trunk
* fix tests
* make sure that old networks get the same dhcp ip so we don't break existing deployments
* cleaned up on set network host to _setup_network and made networks allocate ips dynamically
* Make the instance migration calls available via the API
* Add a flag to disable ec2 or osapi
* Add a flag to disable ec2 or osapi
* refactor
* easing up content-type restrictions
* peer review fix - per vish: 'This method automatically converts unknown formats to ami, which is the same logic used to display unknown images in the ec2 api. This will allow you to properly deregister raw images, etc.'
* Updated resize docstring
* removing Content-Length requirement
* Add docstrings for multinic extension
* Add support for remove_fixed_ip()
* Merged trunk
* pull-up from trunk
* Added unit tests
* First take at migrations
* Fixes bug #805604 "Multiprocess nova-api does not handles SIGTERM correctly."
* image/fake: added teardown method
* Updated mailmap due to wrong address in commit message
* tests/test_cloud: make an unit test, test_create_image, happy
* nova/compute/api.py: fixed mismerge
* ec2 api _get_image method logic flaw that strips the hex16 digit off of the image name, and does a search against the db for it and ignores that it may not be the correct image, such as if doing a search for aki-0000009, yet that image name doesn't exist, it strips off aki- and looks for any image_id 0000009 and if there was an image match that happens to be an ami instead of aki, it will go ahead and deregister that. That behavior is unintended, so added logic to ensure that the original request image_id matches the type of image being returned from database by matching against container_format attr
* sqlalchemy/migrate: resolved version conflict
* merge with trunk
* pull-up from trunk
* unit test suite for the multinic extension
* pull-up from trunk
* Added server entity to images that only has id
* Merging issues
* Updated _create_link_nodes to be consistent with other create_*_nodes
* Changed name of xml_string to to_xml_string
* Merging issuse
* Temporarily moved create server node functionality into images.py Temporarily changed image XML tests to expect server entities with only ids
* Removed serverRef from some tests and viewbuilder
* Comments for bugfix800759 and pep8
* Removed bookmark link from non detailed image viewbuilder
* implemented clean-up logic when VM fails to spawn for xenapi back-end
* Adds the os-hosts API extension for interacting with hosts while performing maintenance. This differs from the previous merge prop as it uses a RESTful design instead of GET-based actions
* Added param to keep current things from breaking until we update all of the xml serializers and view builders to reflect the current spec
* Fixes Bug #805083: "libvirtError: internal error cannot determine default video type" when using UML
* Dried up images XML serialization
* Dried up images XML serialization
* stricter zone_id checking
* trunk merge
* cleanup
* Added image index
* pep8 fixes
* Comments Incorporated for Bug800759
* Added API and supporting code for rebooting or shutting down XenServer hosts
* fixed image create response test
* Updated test_detail
* Merged trunk
* make server and image metadata optional
* Updated the links container for flavors to be compliant with the current spec
* pep8
* Renamed function
* moved remove_version to common.py
* unit tests
* progress and server are optional
* merged trunk
* Add a socket server responding with an allowing flash socket policy for all requests from flash on port 843 to nova-vncproxy
* pep8 compliance
* Pull-up from trunk (post-multi_nic)
* changed calling signature to be (instance_id, address)
* correct test_show
* first round
* removed extra comment
* Further test update and begin correcting serialization
* Removed a typo error in libvirt connection.py
* updated expected xml in images show test to represent current spec
* pep8 fixes
* Added VIF driver concept
* Added the missing 'self' parameter
* after trunk merge
* Changed the exception type for invalid requests to webob.exc.HTTPBadRequest
* Added net_attrs argument for ensure_bridge/vlan methods
* Added a L2 network driver for bridge/vlan creation
* wrap list comparison in test with set()s
* slightly more fleshed out call path
* merged trunk
* merge code i'd split from instance_get_fixed_addresses_v6 that's no longer needed to be split
* fix metadata test since fixed_ip searching now goes thru filters db api call instead of the get_by_fixed_ip call
* clean up compute_api.get_all filter name remappings. ditch fixed_ip one-off code. fixed ec2 api call to this to compensate
* clean up OS API servers getting
* rename _check_servers_options, add some comments and small cleanup in the db get_by_filters call
* pep8 fix
* convert filter value to a string just in case before running re.compile
* add comment for servers_search_options list in the OS API Controllers
* pep8 fixes
* fix ipv6 search test and add test for multiple options at once
* test fixes.. one more to go
* resolved conflict incorrectly from trunk merge
* merged trunk
* doc string fix
* fix OS API tests
* test fixes and typos
* typos
* cleanup checking of options in the API before calling compute_api's get_all()
* a lot of major re-work.. still things to finish up
* merged trunk
* remove debug from failing test
* remove faults.Fault wrapper on exceptions
* rework OS API checking of search options
* merged trunk
* missing doc strings for fixed_ip calls I renamed
* clarify a couple comments
* test fixes after unknown option string changes
* minor fixups
* merged trunk
* pep8 fixes
* test fix for renamed get_by_fixed_ip call
* ec2 fixes
* added API tests for search options fixed a couple of bugs the tests caught
* allow 'marker' and 'limit' in search options. fix log format error
* another typo
* merged trunk
* missed power_state import in api fixed reversed compare in power_state
* more typos
* typos
* flavor needs to be converted to int from query string value
* add image and flavor searching to v1.0 api fixed missing updates from cut n paste in some doc strings
* added searching by 'image', 'flavor', and 'status' reverted ip/ip6 searching to be admin only
* compute's get_all should accept 'name' not 'display_name' for searching Instance.display_name. Removed 'server_name' searching.. Fixed DB calls for searching to filter results based on context
* Refactored OS API code to allow checking of invalid query string paremeters and admin api/context to the index/detail calls. v1.0 still ignores unknown parameters, but v1.1 will return 400/BadRequest on unknown options. admin_api only commands are treated as unknown parameters if FLAGS.enable_admin_api is False. If enable_admin_api is True, non-admin context requests return 403/Forbidden
* clean up checking for exclusive search options fix a cut n paste error with instance_get_all_by_name_regexp
* merged trunk
* python-novaclient 2.5.8 is required
* fix bugs with fixed_ip returning a 404 instance searching needs to joinload more stuff
* added searching by instance name added unit tests
* pep8 fixes
* Replace 'like' support with 'regexp' matching done in python. Since 'like' would result in a full table scan anyway, this is a bit more flexible. Make search options and matching a little more generic Return 404 when --fixed_ip doesn't match any instance, instead of a 500 only when the IP isn't in the FixedIps table
* start of re-work of compute/api's 'get_all' to handle more search options
* Silence warning in case tests.sqlite doesn't exist
* fix libvirt test
* update tests
* don't set network host for multi_host networks
* add ability to set multi_host in nova-manage and remove debugging issues
* filter the dhcp to only respond to requests from this host
* pass in dhcp server address, fix a bunch of bugs
* PEP8 passed
* Formatting fix
* Proper Author section insertion (thx Eldar)
* Signal handler cleanup, proper ^C handling
* copy paste
* make sure to filter out ips associated by host and add some sync for allocating ip to host
* fixed zone id check
* it is multi_host not multi_gateway
* First round of changes for ha-flatdhcp
* Updated the plugin to return the actual enabled status instead of just 'true' or 'false' 
* UML doesnt do vnc as well
* fixed a bug which prevents suspend/resume after block-migration
* Gracefull shutdown of nova-api
* properly displays addresses in each network, not just public/private; adding addresses attribute to server entities
* Gracefull shutdown of nova-api
* Removing import of nova.test added to nova/__init.py__ as problem turned out to be somewhere else (not in nova source code tree)
* Fixing weird error while running tests. Fix required patching nova/tests/___init__.py explictly importing nova.test
* Added missing extension file and tests. Also modified the get_host_list() docstring to be more accurate about the return value
* Silence warning in case tests.sqlite doesn't exist
* Fix boot from volume failure for network block devices
* Improvements to nova-manage: network list now includes vlan and projectID, added servers list filtered by zone if needed
* removed unneeded old commented code
* removed more stray debug output
* removed debugging output
* after trunk merge
* Updated unit tests
* remove logging statement
* Found some additional fixed_ip. entries in the Intance model contest that needed to be updated
* use url parse instead of manually splitting
* Changed fixed_ip.network to be fixed_ips.network, which is the correct DB field
* Added the GroupId param to any pertinent security_group methods that support it in the official AWS API
* Removes 'import IPy' introduced in recent commit
* removing IPy import
* trunk merge
* Fixed the case where an exception was thrown when trying to get a list of flavors via the api yet there were no flavors to list
* fix up tests
* tweak
* review fixes
* completed api changes. still need plugin changes
* Update the fixed_ip_disassociate_all_by_timeout in nova.db.api so that it supports Postgres. Fixes casting errors on postgres with this function
* after trunk merge
* Fixes MANIFEST.in so that migrate_repo/versions/*.sql files are now included in tarball
* Include migrate_repo/versions/*.sql in tarball
* Ensure auto-delete is false on Topic Queues
* refactored the security_group tests a bit and broke up a few of them into smaller tests
* Reverses the self.auto_delete = True that was added to TopicPublisher in the bugfix for lp804063. That bugfix should have only added auto_delete = True to FanoutPublisher to match the previous change to FanoutConsumer
* Added 'self.auto_delete = True' to the two Publisher subclasses that lacked that setting
* Added the '--fixes' tag to link to bug
* Added self.auto_delete = True to the Publisher subclasses that did not have that set
* added multi-nic support
* osapi test_servers fixed_ip -> fixed_ips
* updated osapi 1.0 addresses view to work with multiple fixed ips
* trunk merge with migration renumbering
* Allows subdirectory tests to run even if sqlite database doesn't exist
* fix bug 800759
* Child Zone Weight adjustment available when adding Child Zones
* trunk merge
* blah
* merge trunk
* merged trunk
* Windows instances will often take a few minutes setting up the image on first boot and then reboot. We should be more patient for those systems as well check if the domid changes so we can send agent requests to the current domid
* Theese changes eliminate dependancy between hostname and ec2-id. As I understand, there already were no such dependancy, but still we had confusing names in code. Also I added more sophisticated generation of default hostname to give user possibility to set the custom one
* updated images
* updated servers
* refactored flavors viewbuilder
* fixes lp:803615
* added FlavorRef exception handling on create instance
* refactored instance type code
* Update the ec2 get_metadata handler so it works with the most recent version of the compute API get_all call which now returns a list if there is only a single record
* - add metadata container to /images/detail and /images/<id> responses - update xml serialization to encode image entities properly
* merging trunk
* PEP8 fix
* Adapt flash socket policy branch to new nova/wsgi.py refactoring
* clean up
* Update the ec2 get_metadata handler so it works with the most recent version of the compute API get_all call which now returns a list if there is only a single record
* trunk merge
* pep8
* pep8
* done and done
* Update the fixed_ip_disassociate_all_by_timeout in nova.db.api so that it supports Postgres. Fixes casting errors on postgres with this function
* phew ... working
* compute_api.get_all should be able to recurse zones (bug 744217). Also, allow to build more than one instance at once with zone_aware_scheduler types. Other cleanups with regards to zone aware scheduler..
* Updated v1.1 links in flavors to represent the curret spec
* fix issue of recurse_zones not being converted to bool properly add bool_from_str util call add test for bool_from_str slight rework of min/max_count check
* fixed incorrect assumption that nullable defaults to false
* removed port_id from virtual interfaces and set network_id to nullable
* changes a few instance refs
* merged trunk
* Rename one use of timeout to expiration to make the purpose clearer
* pulled in koelkers test changes
* merge with trey
* major reactor of the network tests for multi-nic
* Merged trunk
* Fixes Bug #803563 by changing how nova passes options in to glance. Before, if limit or marker were not set, we would pass limit=0 and marker=0 in to glance. However, marker is supposed to be an image id. With this change, if limit or marker are not set, they are simply not passed into glance. Glance is free then to choose the default behavior
* Fixed indentation issues Fixed min/max_count checking issues Fixed a wrongly log message when zone aware scheduler finds no suitable hosts

diablo-2
--------

* Fixes Bug #803563 by changing how nova passes options in to glance. Before, if limit or marker were not set, we would pass limit=0 and marker=0 in to glance. However, marker is supposed to be an image id. With this change, if limit or marker are not set, they are simply not passed into glance. Glance is free then to choose the default behavior
* Sets 'exclusive=True' on Fanout amqp queues. We create the queues with uuids, so the consumer should have exclusive access and they should get removed when done (service stop). exclusive implies auto_delete. Fixes lp:803165
* don't pass zero in to glance image service if no limit or marker are present
* more incorrect list type casting in create_network
* removed the list type cast in create_network on the NETADDR projects
* renumbered migrations again
* Make sure test setup is run for subdirectories
* merged trunk, fixed the floating_ip fixed_ip exception stupidity
* trunk merge
* "nova-manage vm list" was still referencing the old "image_id" column, which was renamed to "image_ref" at revision 1144
* Implement backup with rotation and expose this functionality in the OS API
* Allow a port name in the server ref for image create
* Fanout queues use unique queue names, so the consumer should have exclusive access. This means that they also get auto deleted when we're done with them, so they're not left around on a service restart. Fixes lp:803165
* pep8 fix
* removed extra stubout, switched to isinstance and catching explicit exception
* get latest branch
* Deprecate -r for run_tests.sh and adds -n, switching the default back to recreate
* check_domid_changes is superfluous right now since it's only used when timeout is used. So simplify code a little bit
* updated pip-requires for novaclient
* Merged trunk
* pip requires
* adopt merge
* clean up logging for iso SR search
* moved to wrap_exception approach
* Fix 'undefined name 'e'' pylint error
* change the default to recreate the db but allow -n for faster tests
* Fix nova-manage vm list
* Adding files for building an rpm for xenserver xenapi plugins
* moved migration again & trunk merge
* Brought back that encode under condition
* Add test for hostname generation
* Remove unnessesary (and possibly failing) encoding
* Fix for bug 803186 that fixes the ability for nova-api to run from a source checkout
* moved to wrap_exception decorator
* Review feedback
* Merged trunk
* Put possible_topdir back in nova-api
* Use milestone cut
* Merged trunk
* Let glance handle sorting
* merging trunk
* Review feedback
* This adds system usage notifications using the notifications framework. These are designed to feed an external billing or similar system that subscribes to the nova feed and does the analysis
* Refactored usage generation
* pep8
* remove zombie file
* remove unecessary cast to list
* merge with trey
* OOPS
* Whoops
* Review feedback
* skipping another libvirt test
* Fix merge issue in compute unittest
* adding unicode support to image metadata
* Fix thinko in previous fix :P
* change variable names to remove future conflict with sandy's zone-offsets branch
* Fix yet more merge-skew
* merge with trey
* This branch allows LdapDriver to reconnect to LDAP server if connection is lost
* Fix issues due to renming of imange_id attrib
* Re-worked some of the WSGI and WSGIService code to make launching WSGI services easier, less error prone, and more testable. Added tests for WSGI server, new WSGI loader, and modified integration tests where needed
* Merged trunk
* update a test docstring to make it clear we're testing multiple instance builds
* log formatting typo pep8 fixes
* Prevent test case from ruining other tests. Make it work in earlier python versions
* pep8 fix
* I accidently the whole unittest2
* Adds support for "extra specs", additional capability requirements associated with instance types
* refactoring to compute from scheduler
* remove network to project bind
* resync with trunk
* Add test for spawn from an ISO
* Add fake SR with ISO content type
* Revise key used to identify the SR used to store ISO images streamed from Glance
* remerged trunk
* Fix pep8 nits in audit script
* Re-merging code for generating system-usages to get around bzr merge braindeadness
* getting started
* Added floating IP support in OS API
* This speeds up multiple runs of tests to start up much faster because it only runs db migrations if the test db doesn't exist. It also adds the -r/--recreate-db option to run_tests.sh to delete the tests db so it will be recreated
* small formatting change
* breaking up into individual tests for security_groups
* Proposing this because it is a critical fix before milestone. Suggestions on testing it are welcome
* logging fixes
* removed unneded mac parameter to lease and release fixed ip functions
* Made _issue_novaclient_command() behave better. Fixed a bunch of tests
* Review feedback
* merge with trey
* trunk merge, getting fierce.
* Merged trunk
* Added nova.version to utils.py
* - Modified NOTE in vm_util.py - Changed gettext line to nova default in guest_tool.py
* renaming tests
* make sure basic filters are setup on instance restart
* typo
* changed extension alias to os-floating-ips
* missed the bin line
* Updating license to ASL 2.0
* update nova.sh
* make nova-debug work with new style instances
* Changed package name to openstack-xen-plugins per dprince's suggestion. All the files in /etc/xapi.d/plugins must be executable. Added dependency on parted. Renamed build.sh to build-rpm.sh
* remove extra stuff from clean vlans
* Clarify help verbiage
* making key in images metadata xml serialization test null as well
* making image metadata key in xml serialization test unicode
* extracting images metadata xml serialization tests into specific class; adding unicode image metadata value test
* merged blamar's simpler test
* Pulled changes, passed the unit tests
* Pulled trunk, merged boot from ISO changes
* Removed now un-needed fake_connection
* Use webob to test WSGI app
* fixed pep style
* review issues fixed
* sqlalchmey/migration: resolved version conflict
* merge with trunk
* Adding files for building an rpm for xenserver xenapi plugins
* Upstream merge
* merging trunk; adding error handling around image xml serialization
* adding xml serialization test of zero images
* pep8
* add metadata tests
* add fake connection object to wsgi app
* add support to list security groups
* only create the db if it doesn't exist, add an option -r to run_tests.py to delete it
* Fix for bug #788265. Remove created_at, updated_at and deleted_at from instance_type dict returned by methods in sqlalchemy API
* PEP8 fix
* pep8
* Updated _dict_with_extra_specs docstring
* Renamed _inst_type_query_to_dict -> _dict_with_extra_specs
* Merged from trunk
* Add api methods to delete provider firewall rules
* This small change restores single quotes and double quotes as they were before in the filter expression for retrieving the PIF (physical interface) xenapi should use for creating VLAN interfaces
* Remove the unnecessary insertion of whitespace. This happens to be enough to make this patch apply on recent versions of XenServer / Xen Cloud Platform
* Removes the usage of the IPy module in favor of the netaddr module
* - update glance image fixtures with expected checksum attribute - ensure checksum attribute is handled properly in image service
* mailmap
* mailmap
* configure number of attempts to create unique mac address
* merged
* trunk merged. conflicts resolved
* added disassociate method to tests
* fixes
* tests
* PEP8 cleanup
* parenthesis issue in the migration
* merge
* some tests and refactoring
* Trunk merge fixes
* Merging trunk
* implement list test
* some tests
* fix tests for extensions
* Fixed snapshot logic
* PEP8 cleanup
* Refactored backup rotate
* conflict resolved
* stub tests
* add stubs for flating api os api testing
* merge with kirill
* associate diassociate untested, first attept to test
* Pep8 fix
* Adding tests for backup no rotation, invalid image type
* Fixed the default arguments to None instead of an empty list
* Fixing PEP8 compliance issues
* Trailing whitespace
* Adding tests for snapshot no-name and backup no-name
* Edited the host filter test case for extra specs
* Removed an import
* Merged from trunk
* Remove extra debug line
* Merged with trunk
* Add reconnect test
* Use simple_bind_s instead of bind_s
* Add reconnect on server fail to LDAP driver
* ec2/cloud: typo
* image/s3: typo
* same typo i made before!
* on 2nd run through filter_hosts, we've already accounted for the topic memory needs converted to Bytes from MB
* LeastCostScheduler wasn't checking for topic cost functions correctly. Added support so that --least_cost_scheduler_cost_functions only needs to have method names specified, instead of the full blown version with module and class name. Still works the old way, too
* requested_mem typo
* more typos
* typo in least cost scheduler
* Unwind last commit, force anyjson to use our serialization methods
* debug logging of number of instances to build in scheduler
* missed passing in min/max_count into the create/create_all_at_once calls
* Dealing with cases where extra_specs wasn't defined
* pep8 fixes
* Renamed from flavor_extra_specs to extra_specs
* All tests passing
* missed passing an argument to consume_resources
* Committing some broken code in advance of trying a different strategy for specifying args to extensions.ResoruceExtensions, using parent
* Starting to transition instance type extra specs API to an extension API
* Now automatically populates the instance_type dict with extra_specs upon being retrieved from the database
* pep8
* Created Bootstrapper to handle Nova bootstrapping logic
* alter test, alter some debug statements
* altered some tests
* freakin migration numbering
* trunk merge
* removing erroneous block, must've been a copy and paste fat finger
* specify keyword, or direct_api proxy method blows up
* updated the way vifs/fixed_ips are deallocated and their relationships, altered lease/release fixed_ip
* Fixed syntax errors
* This adds a way to create global firewall blocks that apply to all instances in your nova installation
* Accept a full serverRef to OSAPI POST /images (snapshot)
* Cast rotation to int
* PEP8 cleanup
* Fixed filter property and added logging
* added tests
* Implemented view and added tests
* Adding missing import
* Fixed issue with zero flavors returning HTTP 500
* Adding dict with single 'meta' key to /imgages/<id>/meta/<key> GET and PUT
* fixing 500 error on v1.0 images xml
* Small refactoring around getting params
* libvirt test for deleting provider firewall rules
* Make firewall rules tests idempotent, move IPy=>netaddr, add deltete test
* merge from trunk
* altho security_group authorize & revoke tests already exist in test_api, adding some direct ec2 api method tests. added group_id param support to the pertinent security group methods
* Make sure there are actually rules to test against
* Add test for listing provider firewall rules
* pep8: remove newline at end of file
* Add admin api test case (like cloud test case) with a test for fw rules
* Move migration to newer version
* an int() was missed being removed from UUID changes when zone rerouting kicks in
* fixing 500 on None metadata value
* proper xml serialization for images
* "nova-manage checks if user is member of proj, prior to adding role for that project"
* adding metadata container to /images/detail and /images/<id> calls
* Add xml serialization for all /images/<id>/meta and /images/<id>/meta/<key> responses
* trunk merge and migration bump
* handle errors for listing an instance by IP address
* Merged markwash's fixes
* Merged list-zone-recurse
* str_GET is a property
* Fixed typo
* Merged trunk
* minor fixups
* fixes for recurse_zones and None instances with compute's get_all
* typo
* add support for compute_api.get_all() recursing zones for more than just reservation_id
* Change so that the flash socket policy server is using eventlet instead of twisted and is running in the same process as the main vnx proxy
* ec2/cloud: address review
* compute/api: an unit test for _update_{image_}bdm
* ec2/cloud: unit tests for parser/formatter of block device mapping
* ec2/cloud: an unit test for _format_instance_bdm()
* ec2utils: an unit test for mapping_prepend_dev()
* ec2: bundle block device mapping
* ec2utils: introduce helper function to prepend '/dev/' in mappings
* volume/api: an unit test for create_snapshot_force()
* Add some resource checking for memory available when scheduling Various changes to d-sched to plan for scheduling on different topics, which cleans up some of the resource checking. Re-compute weights when building more than 1 instance, accounting for resources that would be consumed
* Returned code to original location
* Merged from trunk
* run launcher first since it initializes global flags and logging
* Now passing unit tests
* Two tests passing
* Now stubbing nova.db instead of nova.db.api
* Bug fixing
* Added flavor extra specs controller
* Initial unit test (failing)
* This catches the InstanceNotFound exception on create, and ignores it. This prevents errors in the compute log, and causes the server to not be built (it should only get InstanceNotFound if the server was deleted right after being created). This is a temporary fix that should be fixed correctly once no-db-messaging stuff is complete
* allocate and release implementation
* fixed pep8 issues
* merge from trunk
* image -> instance in comment
* added virtual_interface_update method
* Fixes issues with displaying exceptions regarding flavors in nova-manage
* better debug statement around associating floating ips when multiple fixed_ips exist
* pep8 fixes
* merging trunk
* added fixed ip filtering by null virtual interface_id to network get associated fixed ips
* fixed ip gets now have floating IPs correctly loaded
* reverting non-xml changes
* Adding backup rotation
* moving image show/update into 'meta' container
* Check API request for min_count/max_count for number of instances to build
* updated libvirt tests network_info to be correct
* fixed error
* skipping more ec2 tests
* skipping more ec2 tests
* skipping more ec2 tests
* skipping test_run_with_snapshot
* updated test_cloud to set stub_network to true
* fixed incorrect exception
* updating glance image fixtures with checksum attribute; fixing glance image service to use checksum attribute
* Round 1 of backup with rotation
* merge from trunk
* fix some issues with flags and logging
* Add a socket server responding with an allowing flash socket policy for all requests from flash on port 843 to nova-vncproxy
* api/ec2: an unit test for create image
* api/ec2, boot-from-volume: an unit test for describe instances
* unittest: an unit test for ec2 describe image attribute
* test_cloud: an unit test for describe image with block device mapping
* ec2utils: an unit test for ec2utils.properties_root_defice_name
* unittest, image/s3: unit tests for s3 image handler
* image/s3: factor out _s3_create() for testability
* ec2utils: unit tests for case insensitive true/false conversion
* ec2utils: add an unit test for dict_from_dotted_str()
* test_api: unit tests for ec2utils.id_to_ec2_{snap, vol}_id()
* api/ec2: make CreateImage pass unit tests
* volume/api: introduce create_snapshot_force()
* api/ec2/image: make block device mapping pass unit tests
* db/block_device_mapping/api: introduce update_or_create
* db/migration: resolve version conflict
* merge with trunk
* ec2 api describe_security_groups allow group_id param , added tests for create/delete security group in test_cloud although also exists in test_api this tests directly the ec2 method
* pip-requires
* pep8
* fixed zone update
* Stop trying to set a body for HTTP methods that do not allow it. It renders the unit tests useless (since they're testing a situation that can never arise) and webob 1.0.8 fails if you do this
* fixed local db create
* omg stop making new migrations..
* trunk merge
* merge from trunk
* added try except around floating ip get by host in host init
* This branch adds support to the xenapi driver for updating the guest agent on creation of a new instance. This ensures that the guest agent is running the latest code before nova starts configuring networking, setting root password or injecting files
* renamed migrations again
* merge from trunk
* if we get InstanceNotFound error on create, ignore (means it has been deleted before we got the create message)
* some libvirt multi-nic just to get it to work, from tushar
* Removed whitespace
* Fixed objectstore test
* merge with trey
* Very small alterations, switched from using start() to pass host/port, to just defining them up front in init. Doesn't make sense to set them in start because we can't start more than once any way. Also, unbroke binaries
* Bump WebOb requirement to 1.0.8 in pip-requires
* Oops, I broke --help on nova-api, fixed now
* pep8 fix
* Monkey patching 'os' kills multiprocessing's .join() functionality. Also, messed up the name of the eventlet WSGI logger
* Filter out datetime fields from instance_type
* erase unnecessary TODO: statement
* fixed reviewer's comment. 1. adding dest-instance-dir deleting operation to nova.compute.manager, 2. fix invalid raise statement
* fix comment line
* Stop trying to set a body for HTTP methods that do not allow it. It renders the unit tests useless (since they're testing a situation that can never arise) and webob 1.0.8 fails if you do this
* log -> logging to keep with convention
* Removed debugging and switched eventlet to monkey patch everything
* Removed unneeded import
* Tests for WSGI/Launcher
* Remove the unnecessary insertion of whitespace. This happens to be enough to match this patch apply on recent versions of XenServer / Xen Cloud Platform
* trunk merge
* fix lp 798361
* Removed logging logic from __init__, added concept of Launcher...no tests for it yet
* nova-manage checks if user is member of proj, prior to adding role for that project
* Other migrations have been merged in before us, so renumber
* Merged trunk
* pep8 fixes
* assert_ -> assertTrue since assert_ is deprecated
* added adjust child zone test
* tests working again
* updated the exceptions around virtual interface creation, updated flatDHCP manager comment
* more trunks
* another trunk merge
* This patch adds support for working with instances by UUID in addition to integer IDs
* importing sqlalchemy IntegrityError
* Moving add_uuid migration to 025
* Merging trunk, fixing conflicts
* Enclosing tokens for xenapi filter in double quotes
* working commit
* Fix objectstore test
* Cleanup and addition of tests for WSGI server
* Merged trunk
* Check that server exists when interacting with /v1.1/servers/<id>/meta resource
* No, really. Added tests for WSGI loader
* Added tests for WSGI loader
* nova.virt.libvirt.connection._live_migration is changed
* Cleanup
* merged rev trunk 1198
* Introduced Loader concept, for paste decouple
* fix pep8 check
* fix comments at nova.virt.libvirt.connection
* Cleanup of the cleanup
* Further nova-api cleanup
* Cleaned up nova-api binary and logging a bit
* Removed debugging, made objectstore tests pass again
* General cleanup and refactor of a lot of the API/WSGI service code
* Adding tests for is_uuid_like
* Using proper UUID format for uuids
* Implements a portion of ec2 ebs boot. What's implemented - block_device_mapping option for run instance with volume (ephemeral device and no device isn't supported yet) - stop/start instance
* updated fixed ip and floating ip exceptions
* pep8: white space/blank lines
* Merging trunk
* renamed VirtualInterface exception and extend NovaException
* moving instance existance logic down to api layer
* Ensure os_type and architecture get set correctly
* Make EC2 update_instance() only update updatable_fields, rather than all fields. Patch courtesy of Vladimir Popovski
* Fixes two minor bugs (lp795123 and lp795126) in the extension mechanism. The first bug is that each extension has _check_extension() called twice on it; this is a minor cosmetic problem, but the second is that extensions which flunk _check_extension() are still added. The proposed fix is to make _check_extensions() return True or False, then make _add_extension() call it from the top and return immediately if _check_extensions() returns False
* Fixes a bug where a misleading error message is outputted when there's a sqlalchemy-migrate version conflict
* Result is already in JSON format from _wait_for_agent
* Fix PEP8
* Fix for lp:796834
* Add new architecture attribute along with os_type
* bunch of docstring changes
* adding check for serverRef hostname matching app url
* Fix for Bug lp:796813
* Fix the volumes extension resource to have a proper prefix - /os-volumes
* Fixes lp797017, which is broken as a result of a fragile method in the xenapi drivers that assumed there would only ever be one VBD attached to an instance
* adding extra image service properties to compute api snapshot; adding instance_ref property
* Missed a pep8 fix
* Remove thirdwheel.py and do the test with a now-public ExtensionManager.add_extension()
* Removes nova/image/local.py (LocalImageService)
* Add some documentation for cmp_version Add test cases for cmp_version
* Increased error message readability for the OpenStack API
* fixing test case
* Updated "get_all_across_zones" in nova/compute/api.py to have "context = context.elevated()", allowing it to be run by non-admin users
* merging trunk
* more words
* Cleaned up some pep8 issues in nova/api/openstack/create_instance_helper.py and nova/api/openstack/__init__.py
* Pull-up from trunk
* Add a test to ensure invalid extensions don't get added
* Update xenapi/vm_utils.py so that it calls find_sr instead of get_sr. Remove the old get_sr function which by default looked for an SR named 'slices'
* add vlan diagram and some text
* Added context = context.elevated() to get_all_across_zones
* auto load table schema instead of stubbing it out
* Fixed migration per review feedback
* Made hostname independent from ec2 id. Add generation of hostnames based on display name
* Fix for a problem where run_tests.sh would output a seemingly unrelated error message when there was a sqlalchemy-migrate version number conflict
* stub api methods
* Missed a InstanceTypeMetadata -> InstanceTypeExtraSpecs rename in register_models
* Fix unitttest so that it actually fails without the fix
* Make $my_ip Glance's default host, not localhost
* We don't check result in caller, so don't set variable to return value
* Remove debugging statement
* Fix lp795123 and lp795126 by making _check_extension() return True or False and checking the result only from the top of _add_extension()
* Glance host defaults to rather than localhost
* Upstream merge
* add in dhcp drawing
* Rename: intance_type_metadata -> instance_type_extra_specs
* erroneous self in virtual_interface_delete_by_instance() sqlalchemy api
* Fixes a bug where a unit test sometimes fails due to a race condition
* remove the network-host fromt he flat diagram
* add multinic diagram
* add the actual image
* Renaming to _build_instance_get
* merged trunk
* returned two files to their trunk versions, odd that they were altered in the first place
* Added a new test for confirming failure when no primary VDI is present
* Unit tests pass again
* more doc (and by more I mean like 2 or 3 sentances)
* Fix copyright date
* PEP8 cleanup
* Attempting to retrieve the correct VDI for snapshotting
* Fixing another test
* Fixing test_servers_by_uuid
* floating_ips extension is loading to api now
* initial commit of multinic doc
* generated files should not be in source control
* Fixed UUID migration
* Added UUID migration
* Clean up docstrings to match HACKING
* merge with trey
* Small tweaks
* Merged reldan changes
* First implementation of FloatingIpController
* First implementation of FloatingIpController
* compute/api: fix mismerge due to instance creation change
* ec2/cloud.py: fix mismerge
* fix conflict with rebasing
* api/ec2: support CreateImage
* api/ec2/image: support block device mapping
* db/model: add root_device_name column to instances table
* ec2utils: consolidate 'vol-%08x' and 'snap-%08x'
* api/ec2: check user permission for start/stop instances
* ec2utils: consolidate 'vol-%08x' and 'snap-%08x'
* api/ec2: check user permission for start/stop instances
* api/ec2: check user permission for start/stop instances
* Adds 'joinedload' statements where they need to be to prevent access of a 'detached' object
* novaclient changed to support projectID in authentication. Caused some minor issues with distributed scheduler. This fixes them up
* Add trailing LF (\n) to password for compatibility with old agents
* Workaround windows agent bugs where some responses have trailing \\r\\n
* removed commented out shim on Instance class
* Windows instances will often take a few minutes setting up the image on first boot and then reboot. We should be more patient for those systems as well check if the domid changes so we can send agent requests to the current domid
* Split patch off to new branch instead
* Add --fixes
* First attempt to rewrite reroute_compute
* syntax
* Merged trunk
* Windows instances will often take a few minutes setting up the image on first boot and then reboot. We should be more patient for those systems as well check if the domid changes so we can send agent requests to the current domid
* Fixed bug
* Added metadata joinedloads
* Prep-work to begin on reroute_compute
* specify mysql_engine for the virtual_interfaces table in the migration
* Passed in explanation to 400 messages
* Fixing case of volumes alias
* The volumes resource extension should be prefixed by its alias - os-volumes
* Adding uuid test
* Pep8 Fixes
* Fixing test_servers.py
* pep8
* Fixing private-ips test
* adding server existence check to server metadata resource
* Fixing test_create_instance
* made the test_xenapi work
* test xenapi injected set to True
* something else with tests
* something with tests
* i dont even care anymore
* network_info has injected in xenapi tests
* Adding UUID test
* network_info passed in test_xenapi, mac_address no longer in instance values dict
* added network injected to stub
* added injected to network dict oportion of tuple returned by get_instance_nw_info
* don't provision to all child zones
* network info to _create_vm
* fix mismerge
* updated xenapi_conn finish_resize arguments
* stubbed out get_instance_nw_info for compute_test
* pip novaclient bump
* merge with nova trunk
* fixed up some little project_id things with new novaclient
* typo
* updated finish_resize to accept network_info, updated compute and tests in accordance
* _setup_block_device_mapping: raise ApiError when db inconsistency found
* db/block_device_mapping_get_all_by_instance: don't raise
* Print list of agent builds a bit prettier
* PEP8 cleanups
* Rename to 024 since 023 was added already
* pep8
* The Xen driver supports running instances in PV or HVM modes, but the method it uses to determine which to use is complicated and doesn't work in all cases. The result is that images that need to use HVM mode (such as FreeBSD 64-bit) end up setting a property named 'os' set to 'windows'
* typo
* None project_id now default
* Adds code to run_tests.py which:
* Fixing code to ensure unit tests for objectstore, vhd & snapshots pass
* ec2utils: minor optimize _try_convert()
* block_device_mapping: don't use [] as default argument
* api/ec2: make the parameter parser an independent method
* Show only if we have slow tests, elapsed only if test success
* Showing elapsed time is now default
* Ensuring pep8 runs even when nose optons are passed
* network tests now teardown user
* Removing seconds unit
* network user only set if doesnt exist
* net base project id now from context, removed incorrect floatnig ip host assignment
* fixed instance[fixed_ip] in ec2 api, removed fixed_ip shim
* various test fixes
* Updated so that we use a 'tmp' subdirectory under the Xen SR when staging migrations. Fixes an issue where you would get a 'File exists' error because the directory under 'images' already existed (created via the rsync copy)
* db fakes silly error fix
* debug statements
* updated db fakes
* updated db fakes
* Changed requests with malformed bodies to return a HTTP 400 Bad Request instead of a HTTP 500 error
* updated db fakes and network base to work with virtual_interface instead of mac_address
* Phew ... ok, this is the last dist-scheduler merge before we get into serious testing and minor tweaks. The heavy lifting is largely done
* db fakes
* db fakes
* updated libvirt test
* updated libvirt test
* updated libvirt test
* updated libvirt test
* updated libvirt test
* getting the test_host_filter.py file from trunk, mine is jacked somehow
* removed extra init calls
* fixed HACKING
* Changed requests with malformed bodies to return a HTTP 400 Bad Request instead of a HTTP 500 error
* duplicate routes moved to base class
* fixed scary diff from trunk that shouldnt have been there
* version passing cleanup
* refactored out controller base class to use aggregation over inheritance
* Move ipy commands to netaddr
* merged trunk
* mp fixes
* Really PEP8? A tab is inferior to 2 spaces?
* pep8 fix
* upstream merge
* Stub out the rpc call in a unit test to avoid a race condition
* merged trunk rev 1178
* Making timing points stricter, only show slow/sluggish tests in summary
* Improved errors
* added kernel/ramdisk migrate support
* Added faults wrapper
* remove file that got ressurected
* Cleaned up pep8 errors using the current version of pep8 located in pip-requires. This is to remove the cluttered output when using the virtualenv to run pep8 (as you should). This will make development easier until the virtualenv requires the latest version of pep8 (see bug 721867)
* merge with trey
* autoload with the appropriate engine during upgrade/downgrade
* Created new exception for handling malformed requests Wrote tests Raise httpBadRequest on malformed request bodies
* Fixed bug 796619
* Adds --show-elapsed option for run_tests
* pep8
* Alias of volumes extension should be OS-VOLUMES
* Illustrations now added to Distributed Scheduler documentation (and fixed up some formatting)
* Load table schema automatically instead of stubbing out
* Removed clocksource=jiffies from PV_args
* Test now passes even if the rpc call does not complete on time
* - fixes bug that prevented custom wsgi serialization
* Removed clocksource=jiffies from PV_args
* merging trunk, fixing pep8
* pep8
* Improved tests
* removing unnecessary lines
* wsgi can now handle dispatching action None more elegantly
* This fixes the server_metadata create and update functions that were returning req.body (as a string) instead of body (deserialized body dictionary object). It also adds checks where appropriate to make sure that body is not empty (and return 400 if it is). Tests updated/added where appropriate
* removed yucky None return types
* merging trunk
* trunk merge
* zones image_id/image_href support for 1.0/1.1
* Update xenapi/vm_utils.py so that it calls find_sr instead of get_sr. Remove the old get_sr function which by default looked for an SR named 'slices'
* fixed bug 796619
* merge trunk
* check for none and empty string, this way empty dicts/lists will be ok
* Updated so that we use a 'tmp' subdirectory under the Xen SR when staging migrations. Fixes an issue where you would get a 'File exists' error because the directory under 'images' already existed (created via the rsync copy)
* fix method chaining in database layer to pass right parameters
* Add a method to delete provider firewall rules
* Add ability to list ip blocks
* pep 8 whitespace fix
* Move migration
* block migration feature added
* Reorder firewall rules so the common path is shorter
* ec2 api method allocate_address ; raises exception.NoFloatingIpsDefined instead of UnknownError when there aren't any floating ips available
* in XML Serialization of output, the toprettyxml() call would sometimes return a str() and sometimes unicode(), I've forced encoding to utf-8 to ensure that we always get str(). This fixes the related bug
* A recent commit added a couple of directories that don't belong in version control. Remove them again
* adding support for cusom serialization methods
* forgot a comma
* floating ips can now move around the network hosts
* A recent commit added a couple of directories that don't belong in version control. Remove them again
* 'network list' prints project id
* got rid of prints for debugging
* small pep8 fixes
* return body correctly as object instead of a string, with tests, also check for empty body on requests that need a body
* adding xml support to /images/<id>/meta resource; moving show/update entities into meta container
* removed posargs decorator, all methods decorated
* Allows Nova to talk to multiple Glance APIs (without the need for an external load-balancer). Chooses a random Glance API for each request
* forgot a comma
* misc argument alterations
* force utf-8 encoding on toprettyxml call for XMLDictSerializer
* added new exception more descriptive of not having available floating addresses avail for allocation
* raise instance instead of class
* Fix copyright year
* style change
* Only update updateable fields
* removing LocalImageService from nova-manage
* rebase from trunk
* decorators for action methods added
* source illustrations added & spelling/grammar based on comstud's feedback
* fixed reraise in trap_error
* forgot some debugging statements
* trunk merge and ec2 tests fixed
* Add some docstrings for new agent build DB functions
* Add test for agent update
* Multiple position dependent formats and internationalization don't work well together
* Adding caveat
* Fixing code per review comments
* removed fixed_ips virtual_interface_id foreignkey constraint from multi_nic migration, and added it as a standalone migration with special sqlite files
* Record architecture of image for matching to agent build later. Add code to automatically update agent running on instance on instance creation
* Add version and agentupdate commands
* Add an extension to allow for an addFixedIp action on instances
* further changes
* tests working after merge-3 update
* 022 migration has already been added, so make ours 023 now
* parse options with optparse, options prepended '--'
* renamed migration again
* Pull-up from multi_nic
* merged koelkers tests branch
* remove file that keeps popping up
* Merging trunk
* Fixing the tests
* matched the inner exception specifically, instead of catching all RemoteError exceptions
* Support multiple glance-api servers
* Merged trunk
* Fix merge conflict
* removing custom exception, instead using NoFloatingIpsDefined
* raises exception.NoFloatingIpsDefined instead of UnknownError
* Normalize and update database with used vm_mode
* added a test for allocate_address & added error handling for api instead of returning 'UnknownError', will give information 'AllocateAddressError: NoMoreAddresses
* merged trunk again
* updated docstring for nova-manage network create
* Now forwards create instance requests to child zones. Refactored nova.compute.api.create() to support deferred db entry creation
* MySQL database tables are currently using the MyISAM engine. Created migration script nova/db/sqlalchemy/migrate_repo/versions/021_set_engine_mysql_innodb.py to change all current tables to InnoDB
* merged trunk again
* Support for header "X-Auth-Project-Id" in osapi
* Cleaned up some pylint errors
* tweaks
* PEP8 fix
* removed network_info shims in vmops
* Fix for bug#794239 to allow pep8 in run_tests.sh to use the virtual environment
* adding Authorizer key for ImportPublicKey
* fix exception type catched
* Look for vm_mode property on images and use that if it exists to determine if image should be run in PV or HVM mode. If it doesn't exist, fall back to existing logic
* removed straggler code
* trunk merge
* merge trunk
* pep8
* removed autogen file
* added field NOVA_PROJECT_ID to template for future using
* added tests for X-Auth-Project-Id header
* fix fake driver for using string project
* adding Authorizer key for ImportPublicKey
* Cleaned up some of the larger pylint errors. Set to ignore some lines that pylint just couldn't understand
* DRY up the image_state logic. Fix an issue where glance style images (which aren't required to have an 'image_state' property) couldn't be used to run instances on the EC2 controller
* remove the debuging lines
* remove the old stuff
* tests all pass
* Added virtual environment to PEP8 tests
* Added test_run_instances_image_status_active to test_cloud
* Add the option to specify a default IPv6 gateway
* pep8
* Removed use of super
* Added illustrations for Distributed Scheduler and fixed up formatting
* Disabled pylint complaining about no 'self' parameter in a decorator function
* DRY up the image_state logic. Fix an issue where glance style images (which aren't required to have an 'image_state' property) couldn't be used to run instances on the EC2 controller
* Fixed incorrect error message Added missing import Fixed Typo (pylint "undefined variable NoneV")
* removing local image service
* Remove unnecessary docstrings
* Add the option to specify a default IPv6 gateway
* port the floating over to storing in a list
* Make libvirt snapshotting work with images that don't have an 'architecture' property
* take out the host
* Removed empty init
* Use IPNetwork rather than IPRange
* Fixed type causing pylint "exception is not callable" Added param to fake_instance_create, fake objects should appear like the real object. pylint "No value passed for parameter 'values' in function call"
* sanity check
* run_instances will check image for 'available' status before attempting to create a new instance
* fixed up tests after trunk merge
* Use True/False instead of 1/0 when setting updating 'deleted' column attributes. Fixes casting issues when running nova with Postgres
* merged from trunk
* Remove more stray import IPy
* Dropped requirement for IPy
* Convert stray import IPy
* Use True/False instead of 1/0 when setting updating 'deleted' column attributes.Fixes casting issues when running nova with Postgres
* Removed commented code
* Added test case for snapshoting base image without architecture
* Remove ipy from virt code and replace with netaddr
* Remove ipy from network code and replace with netaddr
* Remove ipy from nova/api/ec2/cloud.py and use netaddr
* Remove ipy from nova-manage and use netaddr
* This branch allows marker and limit parameters to be used on image listing (index and detail) requests. It parses the parameters from the request, and passes it along to the glance_client, which can now handle these parameters. Essentially all of the logic for the pagination is handled in glance, we just pass along the correct parameters and do some error checking
* merge from trunk, resolved conflicts
* Update the OSAPI images controller to use 'serverRef' for image create requests
* Changed the error raise to not be AdminRequired when admin is not, in fact, required
* merge with trey
* Change to a more generic error and update documentation
* make some of the tests
* Merged trunk
* merge trunk
* Ignore complaining about dynamic definition
* Removed Duplicate method
* Use super on an old style class
* Removed extraneous code
* Small pylint fixes
* merge with trunk
* Fixed incorrect exception
* This branch removes nwfilter rules when instances are terminated to prevent resource leakage and serious eventual performance degradation. Without this patch, launching instances and restarting nova-compute eventually become very slow
* merge with trunk
* resolve conflicts with trunk
* Update migrate script version to 22
* Added 'config list' to nova-manage. This function will output all of the flags and their values
* renamed migration
* trunk merge after 2b hit
* Distributed Scheduler developer docs
* Updated to use the '/v1/images' URL when uploading images to glance in the Xen glance plugin. Fixes the issue where snapshots fail to upload correctly
* merged trunk again
* added 'nova-manage config list' which will list out all of the flags and their values. I also alphabetized the list of available categories
* Updated to use the '/v1/images' URL when uploading images to glance in the Xen glance plugin. Fixes issue where snapshots failed to get uploaded
* Removed "double requirement" from tools/pip-requires file
* merged koelker migration changes, renumbered migration filename
* fix comment
* Fixed pip-requires double requirement
* Added a test case for XML serialization
* Removed unused and erroneous (yes, it was both) function
* paramiko is not installed into the venv, but is required by smoketests/base.py. Added paramiko to tools/pip-requires
* Changes all uses of utcnow to use the version in utils. This is a simple wrapper for datetime.datetime.utcnow that allows us to use fake values for tests
* Set pylint to ignore correct lines that it could not determine were correct, due to the means by which eventlet.green imported subprocess Minimized the number of these lines to ignore
* LDAP optimization and fix for one small bug caused huge performance leak. Dashboard's benchmarks showed overall x22 boost in page request completion time
* Adds LeastCostScheduler which uses a series of cost functions and associated weights to determine which host to provision to
* Make libvirt snapshotting work with images that don't have an 'architecture' property
* Add serverRef to image metadata serialization list
* Fixed pylint: no metadata member in models.py
* Implement OSAPI v1.1 style image create
* trunk merge
* little tweaks
* Flush AuthManager's cache before each test
* Fixed FakeLdapDriver, made it call LdapDriver.__init__
* Merged with trunk
* This change set adds the ability to create new servers with an href that points to a server image on any glance server (not only the default one configured). This means you can create a server with imageRef = http://glance1:9292/images/3 and then also create one with imageRef = http://glance2:9292/images/1. Using the old way of passing in an image_id still works as well, and will use the default configured glance server (imageRef = 3 for instance)
* added nova_adminclient to tools/pip-requires
* merged trunk
* Added paramiko to tools/pip-requires
* Tests that all exceptions can be raised properly, and fix the couple of instances where they couldn't be constructed due to typos
* merge trunk... yay..
* switch zones to use utcnow
* make all uses of utcnow use our testable utils.utcnow
* Fix error with % as replacement string
* Fixing conflicts
* Tests to assure all exceptions can be raised as well as fixing NotAuthorized
* use %% because % is a replacement string character
* some comment docstring modifications
* Makes novarc work properly on a mac and also for zsh in addition to bash. Other shells are not guaranteed to work
* This adds the ability to publish nova errors to an error queue
* don't use python if readlink is available
* Sudo chown the vbd device to the nova user before streaming data to it. This resolves an issue where nova-compute required 'root' privs to successfully create nodes with connection_type=xenapi
* Bugfix #780784. KeyError when creating custom image
* Remove some of the extra image service calls from the OS API images controller
* pep8 fixes
* merge with trey
* make it pass for the demo
* Merged with Will
* Minor comment formatting changes
* got rid of more test debugging stuff that shouldnt have made it in
* Remove comment about imageRef not being implemented
* Remove a rogue comment
* more tests (empty responses)
* get_all with reservation id across zone tests
* move index and detail functions to v10 controller
* got rid of prints
* Refactored after review, fixed merge
* image href should be passed through the rebuild pipeline, not the image id
* merge from trunk
* got rid of print debugs
* cleanup based on waldon's comments, also caught a few other issues
* missed a couple chars
* Little cleanups
* pep8 and all that
* tests all passing again
* list --reservation now works across zones
* fix novarc to work on mac and zsh
* merged, with trunk, fixed the test failure, and split the test into 3 as per peer review
* Fixes nova-manage bug. When a nova-network host has allocated floating ips *AND* some associated, the nova-manage floating list <host> would throw exception because was expecting hash with 'ec2_id' key , however, the obj returned is a sqlalchemy obj and the attr we need is 'hostname'
* start the flat network
* more testing fun
* fixed as per peer review to make more consistent
* merged from trunk
* Implement the v1.1 style resize action with support for flavorRef
* Updates to the 018_rename_server_management_url migration to avoid adding and dropping a column. Just simply rename the column
* Support SSL AMQP connections
* small fixes
* Allow SSL AMQP connections
* reservation id's properly forwarded to child zones on create
* merge from trunk
* fix pep8 issue from merge
* coose the network_manager based on instance variable
* fix the syntax
* forgot a comma
* This just fixes a bunch of pep8 issues that have been lingering around for a while and bothering me :)
* touch ups
* Updates to the 018_rename_server_management_url to avoid adding and dropping a column. Just simply rename the column
* basic reservation id support to GET /servers
* - move osapi-specific wsgi code from nova/wsgi.py to nova/api/openstack/wsgi.py - refactor wsgi modules to use more object-oriented approach to wsgi request handling: - Resource object steps up to original Controller position - Resource coordinates deserialization, dispatch to controller, serialization - serialization and deserialization broken down to be more testable/flexible
* merge from trunk
* make the stubs
* use the host
* da stubs
* Bumped migration number
* Merged from trunk
* updates to keep things looking better
* merge from trunk
* fix pep8 issues
* PEP8 fix
* Moved memcached driver import to the top of modules
* fix pep8 issues
* pep8 fixes
* Cleanup instances_path in the test_libvirt test_spawn_with_network_info test. Fixes issue where the nova/tests/instance-00000001/ is left in the nova source tree when running run_test.sh -N
* fix filtering tests
* Renamed migration to 020
* osapi: added support for header X-Auth-Project-Id
* added /zones/boot reservation id tests

diablo-1
--------

* Adds hooks for applying ovs flows when vifs are created and destroyed for XenServer instances
* Logs the exception if metadata fails and returns a 500 with an error message to the client
* Fixing a bunch of conflicts
* add new base
* refator existing fakes, and start stubbing out the network for the new manager tests
* pep8
* Incremented version of migration script to reflect changes in trunk
* basic zone-boot test in place
* Incremented version of migration script to reflect changes in trunk
* Incremented version of migration script to reflect changes in trunk
* switch to using webob exception
* Added new snapshots table to InnoDB migrations
* Adds a few more status messages to error states on image register for the ec2 api. This will hopefully provide users of the ec2 api with a little more info if their registration fails
* Cleaned up bug introduced after fixing pep8 errors
* Fixing Scheduler Tests
* Cleaned up bug introduced after fixing ^Cp8 errors
* Basic hook-up to HostFilter and fixed up the passing of InstanceType spec to the scheduler
* make the old tests still pass
* rename da stuffs
* rename da stuffs
* Resolving conflict and finish test_images
* merge
* added tests for image detail requests
* Merged trunk
* Merged trunk and fixed conflicts
* Whitespace cleanups
* added pause/suspend implementation to nova.virt.libvirt_conn
* Change version number of migration
* Update the rebuild_instance function in the compute manager so that it accepts the arguments that our current compute API sends
* Moved everything from thread-local storage to class attributes
* Added the filtering of image queries with image metadata. This is exposing the filtering functionality recently added to Glance. Attempting to filter using the local image service will be ignored
* This enables us to create a new volume from a snapshot with the EC2 api
* Use a new instance_metadata_delete_all DB api call to delete existing metadata when updating a server
* added tests for GlanceImageService
* Add vnc_keymap flag, enable setting keymap for vnc console and fix bug #782611
* Add refresh_provider_fw_rules to virt/driver.py#ComputeDriver so virtualization drivers other than libvirt will raise NotImplemented
* Rebased to trunk rev 1120
* trunk merge
* added get_pagination_params function in common with tests, allow fake and local image services to accept filters, markers, and limits (but ignore them for now)
* Cleaned up text conflict
* pep8 fixed
* pep8 fixes
* Cleaned up text conflict
* removing semicolon
* Cleaned up text conflict
* skip the vlam test, not sure why it doesn't work
* Cleaned up pep8 errors
* Fixed the APIError typo
* MySQL database tables are currently using the MyISAM engine. Created migration script nova/db/sqlalchemy/migrate_repo/versions/020_set_engine_mysql_innodb.py to change all current tables to InnoDB
* MySQL database tables are currently using the MyISAM engine. Created migration script nova/db/sqlalchemy/migrate_repo/versions/020_set_engine_mysql_innodb.py to change all current tables to InnoDB
* Handle the case when a v1.0 api tries to list servers that contain image hrefs
* Added myself to Authors file
* edits based on ed's feedback
* More specific error messages for resize requests
* pep8 fixes
* merge trunk
* tests passing again
* Actually remove the _action_resize code from the base Servers controller. The V11 and V10 controllers implement these now
* merge from trunk
* This adds a volume snapshot support with the EC2 api
* Fixed the typo of APIError with ApiError
* nova/auth/novarc.template: Changed NOVA_KEY_DIR to allow symlink support
* Updated compute api and manager to support image_refs in rebuild
* zone-boot working
* regular boot working again
* regular boot working again
* first pass at reservation id support
* Updates so that 'name' can be updated when doing a OS API v1.1 rebuild. Fixed issue where metadata wasn't getting deleted when an empty dict was POST'd on a rebuild
* first cut complete
* project_id moved to be last
* add support for keyword arguments
* fixed nova.virt.libvirt_conn.resume() method - removing try-catch
* reservation_id's done
* basic flow done
* lots more
* starting
* boot-from-volume: some comments and NOTE(user name)
* Use metadata variable when calling _metadata_refs
* Implement the v1.1 style resize action with support for flavorRef
* Fixes to the SQLAlchmeny API such that metadata is saved on an instance_update. Added integration test to test that instance metadata is updated on a rebuild
* Update the rebuild_instance function in the compute manager so that it accepts the arguments that our current compute API sends
* Cleanup instances_path in test_libvirt test_spawn_with_network_info test
* Added missing nova import to image/__init__.py
* Another image_id location in hyperv
* Fixing nova.tests.api.openstack.fakes.stub_out_image_service. It now stubs out the get_image_service and get_default_image_service functions. Also some pep8 whitespace fixes
* Fixing xen and vmware tests by correctly mocking glance client
* Fixing integration tests by correctly stubbing image service
* More image_id to image_ref stuff. Also fixed tests in test_servers
* When encrypting passwords in xenapi's SimpleDH(), we shouldn't send a final newline to openssl, as it'll use that as encryption data. However, we do need to make sure there's a newline on the end when we write the base64 string for decoding.. Made these changes and updated the test
* Fixes the bug introduced by rpc-multicall that caused some test_service.py tests to fail by pip-requiring a later version of mox
* added \n is not needed with -A
* now pip-requires mox version 0.5.3
* added -A back in to pass to openssl
* merge with dietz
* merge with dietz
* XenAPI tests pass
* fixed so all the new encryption tests pass.. including data with newlines and so forth
* Glance client updates for xenapi and vmware API to work with image refs
* Merged lp:~rackspace-titan/nova/lp788979
* get the right args
* Fixing pep8 problems
* Modified instance_type_create to take metadata
* Added test for instance type metadata create
* merge with trey
* Added test for instance type metadata update
* Added delete instance metadata unit test
* Added a unit test
* Adding test code
* Changed metadata to meta to avoid sqlalchemy collision
* Adding accessor methods for instance type metadata
* remove errant print statement
* prevent encryption from adding newlines on long messages
* trunk merge
* nova/auth/novarc.template: Changed NOVA_KEY_DIR to allow symlink support
* docstrings again and import ordering
* fix encryption handling of newlines again and restructure the code a bit
* Libvirt updates for image_ref
* Commit the migration script
* fixed docstrings and general tidying
* remove _take_action_to_instance
* fix calls to openssl properly now. Only append \n to stdin when decoding. Updated the test slightly, also
* fixed read_only check
* Fix pep8 errors
* Fix pep8 violations
* Fix a description of 'snapshot_name_template'
* unittest: make unit tests happy
* unittest: tests for boot from volume and stop/start instances
* compute: implement ec2 stop/start instances
* compute, virt: support boot-from-volume without ephemeral device and no device
* db: add a table for block device mapping
* volume/api: allow volume clone from snapshot without size
* api/ec2: parse ec2 block device mapping and pass it down to compute api
* teach ec2 parser multi dot-separted argument
* api/ec2: make ec2 api accept true/false
* Adds the ability to make a call that returns multiple times (a call returning a generator). This is also based on the work in rpc-improvements + a bunch of fixes Vish and I worked through to get all the tests to pass so the code is a bit all over the place
* fix a minor bug unrelated to this change
* updated the way allocate_for_instance and deallocate_for_instance handle kwargs
* Rename instances.image_id to instances.image_ref
* changes per review
* merge with dietz
* stub out passing the network
* Virt tests passing while assuming the old style single nics
* adding TODOs per dabo's review
* Fixes from Ed Leafe's review suggestions
* merge trunk
* move udev file so it follows the xen-backend.rules
* Essentially adds support for wiring up a swap disk when building
* add a comment when calling glance:download_vhd so it's clear what is returned
* make the fakes be the correct
* skip vmware tests, since they need to be updated for multi-nic by someone who knows the backend
* put back the hidden assert check i accidentally removed from glance plugin
* fix image_path in glance plugin
* Merged trunk
* skip the network tests for now
* Change the return from glance to be a list of dictionaries describing VDIs Fix the rest of the code to account for this Add a test for swap
* cleaning up getattr calls with default param
* branch 2a merge (including trunk)
* trunk merge
* remerged with 2a
* tests pass and pep8'ed
* review fixups
* Expanded tests
* In vmwareapi_net.py removed the code that defines the flag 'vlan_interface' and added code to set default value for the flag 'vlan_interface' to 'vmnic0'. This will now avoid flag re-definition issue
* missed a driver reference
* exceptions are logged via the raise, so just log an error message
* log upload errors
* instance obj returned is not a hash, instead is sqlalchemy obj and hostname attr is what the logic is looking for
* we don't need the mac or the host anymore
* Test tweaks
* instances don't need a mac_address to be created anymore
* Make a cleaner log message and use [] instead of . to get database fields
* use the skip decorator rather than comment out
* merging trunk
* Adding some pluralization
* Double quotes are ugly #3
* merge with dietz
* fix typo introduced during merge conflict resolution
* Remove spurious newline at end of file
* Move migration to fix ordering
* remove dead/duplicate code
* Double quotes are ugly #2
* Double quotes are ugly
* refactoring compute.api.create()
* Fix test_cloud tests
* Restricted image filtering by name and status only
* Switch the run_instances call in the EC2 back to 'image_id'. Incoming requests use 'imageId' so we shouldn't modify this for image HREF's
* Switching back to chown. I'm fine w/ setfacl too but nova already has 'chown' via sudoers so this seems reasonable for now
* replace double quatation to single quatation at nova.virt.libvirt_conn
* remove unnecessary import inspect at nova.virt.libvirt_conn
* creating _take_action_to_instance to nova.virt.libvirt_conn.py
* Instead of redefining the flag 'vlan_interface', just setting a default value (vmnic0) in vmwareapi_net.py
* Renamed image_ref variables to image_href. Since the convention is that x_ref vars may imply that they are db objects
* Added test skipper class
* change the behavior of calling a multicall
* move consumerset killing into stop
* don't put connection back in pool
* replace removed import
* cleanups
* cleanup the code for merging
* make sure that using multicall on a call with a single result still functions
* lots of fixes for rpc and extra imports
* don't need to use a separate connection
* almost everything working with fake_rabbit
* bring back commits lost in merge
* connection pool tests and make the pool LIFO
* Add rpc_conn_pool_size flag for the new connection pool
* Always create Service consumers no matter if report_interval is 0 Fix tests to handle how Service loads Consumers now
* catch greenlet.GreenletExit when shutting service down
* fix consumers to actually be deleted and clean up cloud test
* fakerabbit's declare_consumer should support more than 1 consumer. also: make fakerabbit Backend.consume be an iterator like it should be.
* convert fanout_cast to ConnectionPool
* pep8 and comment fixes
* Add a connection pool for rpc cast/call Use the same rabbit connection for all topic listening and wait to be notified vs doing a 0.1 second poll for each
* add commented out unworking code for yield-based returns
* make the test more expicit
* add support to rpc for multicall
* merge with dietz
* Fixing divergence
* Merged trunk
* Added params to local and base image service
* Fixed the mistyped line referred to in bug 787023
* Merged trunk and resolved conflicts
* Fixed a typo
* make the test work
* Merged with trunk
* Several changes designed to bring the openstack api 1.1 closer to spec - add ram limits to the nova compute quotas - enable injected file limits and injected file size limits to be overridden in the quota database table - expose quota limits as absolute limits in the openstack api 1.1 limits resource - add support for controlling 'unlimited' quotas to nova-manage
* During the API create call, the API would kick off a build and then loop in a greenthread waiting for the scheduler to pick a host for the instance. After API would see a host was picked, it would cast to the compute node's set_admin_password method
* starting breakdown of nova.compute.api.create()
* fix test. instance is not updated in DB with admin password in the API anymore
* Merged upstream
* pep8 fixes
* Initial tests
* fix forever looping on a password reset API call
* updating admin_pass moved down to compute where the password is actually reset. only update if it succeeds
* merged trunk
* change install_ref.admin_password to instance_ref.admin_pass to match the DB
* Merged trunk
* remove my print
* we're getting a list of tuples now'
* we have a list of tuples, not a list of dicts
* pep8 fixes
* return the result of the function
* Updated tests to use mox pep8
* InstanceTypesMetadata is now registered
* make some changes to the manager so dupe keywords don't get passed
* Fixing the InstanceTypesMetadata table definition
* try out mox for testing image request filters
* Adding the migrate code to add the new table
* dist-sched-2a merge
* Created new libvirt directory, moved libvirt_conn.py to libvirt/connection.py, moved libvirt templates, broke out firewall and network utilities
* make the column name correct
* The code for getting an opaque reference to an instance assumed that there was a reference to an instance obj available when raising an exception. I changed this from raising an InstanceNotFound exception to a NotFound, as this is more appropriate for the failure, and doesn't require an instance ID
* merge against 2a
* trunk merge
* simplified the limiting differences for different versions of the API
* New tests added
* Changed the exception type to not require an instance ID
* Added model for InstanceTypeMetadata
* Added test
* Avoid wildcard import
* Add unittests for cloning volumes
* merged recent trunk
* merged recent trunk
* Make snapshot_id=None a default value in VolumeManager:create_volume(). It is not a regular case to create a volume from a snapshot
* Don't need to import json
* Fix wrong call of the volume api create()
* pep8 fix in nova/compute/api.py
* instead of the API spawning a greenthread to wait for a host to be picked, the instance to boot, etc for setting the admin password... let's push the admin password down to the scheduler so that compute can just take care of setting the password as a part of the build process
* tests working again
* eventlet.spawn_n() expects the function and arguments, but it expects the arguments unpacked since it uses *args
* Don't pass a tuple since spawn_n will get the arguments with *args anyway
* move devices back
* Using the root-password subcommand of the nova client results in the password being changed for the instance specified, but to a different unknown password. The patch changes nova to use the password specified in the API call
* Pretty simple. We call openssl to encrypt the admin password, but the recent changes around this code forgot to strip the newline off the read from stdout
* DHSimple's decrypt needs to append \n when writing to stdin
* need to strip newline from openssl stdout data
* merge with trey
* work on
* merge trunk
* moved auto assign floating ip functionality from compute manager to network manager
* create a mac address entry and blindly use the first network
* create a mac address entry and blindly use the first network
* create a mac address entry and blindly use the first network
* need to return the ref
* Added filtering on image properties
* Fixes a bug related to incorrect reparsing of flags and prevents many extra reparses
* no use mac
* comment out the direct cloud case
* make fake_flags set defaults instead of runtime values
* add a test from vish and fix the issues
* Properly reparse flags when adding dynamic flags
* no use mac
* instances don't have mac's anymore and address is now plural
* let the fake driver accept the network info
* Comment out the 2 tests that require the instance to contain mac/ip
* initial use of limited_by_marker
* more fix up
* many tests pass now
* its a dict, not a class
* we don't get the network in a tuples anymore
* specified image_id keyword in exception arg
* When adding a keypair with ec2 API that already exists, give a friendly error and no traceback in nova-api
* added imageid string to exception, per peer review
* Fixes some minor doc issues - misspelled flags in zones doc and also adds zones doc to an index for easier findability
* removed most of debugging code
* Fixing docstring
* Synchronise with Diablo development
* make _make_fixture respect name passed in
* zone1 merge
* sending calls
* accepting calls
* Fixing _get_kernel_ramdisk_from_image to use the correct image service
* Fixing year of copyright
* merge
* select partially going through
* merge from trunk
* make image_ref and image_id usage more consistant, eliminate redundancy in compute_api.create() call
* take out irrelevant TODO
* blah
* uhhh yea
* local tweaks
* getting closer to working select call
* swap should use device 1 and rescue use device 2
* merged from trunk
* fix tests, have glance plugin return json encoded string of vdi uuids
* make sure to get a results, not the query
* merged from trunk
* Removing code duplication between parse_image_ref and get_image service. Made parse_image_ref private
* Changed ec2 api dupe key exception log handler info->debug
* Added test case for attempting to create a duplicate keypair
* Removing debug print line
* Renaming service_image_id vars to image_id to reduce confusion. Also some minor cleanup
* cleanup and fixes
* got rid of print statement
* initial fudging in of swap disk
* make the test_servers pass by removing the address tests for 1.1, bug filed
* port the current create_networks over to the new network scheme
* need to have the complete table def since sqlalchemy/sqlite won't reload the model
* must have the class defined before referencing it
* make the migration run with tests
* get rid of all mention of drivers ... it's filter only now
* merge trunk
* Fixes euca-attach-volume for iscsi using Xenserver
* fix typo
* merge branch lp:~rackspace-titan/nova/ram-limits
* Added test
* Fixes missing space
* Fixed mistyped line
* Rebased to trunk rev 1101
* merge from trunk
* moved utils functions into nova/image/
* Trunk merge
* Fix bug #744150 by starting nova-api on an unused port
* Removing utils.is_int()
* Added myself to Authors
* When adding a keypair that already exists, give a friendly error and no traceback in nova-api
* --dhcp-lease-max=150 by default. This prevents >150 instances in one network
* Minor cleanup
* No reason to modify the way file names are generated for kernel and ramdisk, since the kernel_id and ramdisk_id is still guaranteed to be ints
* found a typo in the xenserver glance plugin that doesn't work with glance trunk. Also modified the image url to fetch from /v1/image/X instead of /image/X as that returned a 300
* fixing glance plugin bug and setting the plugin to use /v1 of the glance api
* merge trunk
* move init start position to 96 to allow openvswitch time to fully start
* Include data files for public key tests in the tarball
* minor cleanup
* Makes sure vlan creation locks so we don't race and fail to create a vlan
* merging trunk
* Include data files for public key tests in the tarball
* Merged with trunk
* renaming resource_factory to create_resource
* combined the exception catching to eliminate duplication
* synchronize vlan creation
* print information about nova-manage project problems
* merge from trunk
* fix comments
* make nwfilter mock more 'realistic' by having it remember which filters have been defined
* fix pep8 issue
* fixed silly issue with variable needing to be named 'id' for the url mapper, also caught new exception type where needed
* This is the groundwork for the upcoming distributed scheduler changes. Nothing is actually wired up here, so it shouldn't break any existing code (and all tests pass)
* Merging trunk
* Get rid of old virt/images.py functions that are no longer needed. Checked for any loose calls to these functions and found none. All tests pass for me
* Update OSAPI v1.1 extensions so that it supports RequestExtensions. ResponseExtensions were removed since the new RequestExtension covers both use cases. This branch also removes some of the odd serialization code in the RequestExtensionController that converted dictionary objects into webob objects. RequestExtension handlers should now always return proper webob objects
* Addressing bug #785763. Usual default for maximum number of DHCP leases in dnsmasq is 150. This prevents instances to obtain IP addresses from DHCP in case we have more than 150 in our network. Adding myself to Authors
* foo
* syntax errors
* temp fixes
* added support for reserving certain network for certain project
* Fixed some tests
* merge with trunk
* Added an EC2 API endpoint that'll allow import of public key. Prior, api only allowed generation of new keys
* This fix ensures that kpartx -d is called in the event that tune2fs fails during key injection, as it does when trying to inject a key into a windows instance. Bug #760921 is a symptom of this issue, as if kpartx -d is not called then partitions remain mapped that prevent the underlying nbd from being reused
* Add new flag 'max_kernel_ramdisk_size' to specify a maximum size of kernel or ramdisk so we don't copy large files to dom0 and fill up /boot/guest
* The XenAPI driver uses openssl as part of the nova-agent implementation to set the password for root. It uses a temporary file insecurely and unnecessarily. Change the code to write the password directly to stdin of the openssl process instead
* The tools/* directory is now included in pep8 runs. Added an opt-out system for excluding files/dirs from pep8 (using GLOBIGNORE)
* fill out the absolute limit tests for limits v1.0 controller
* add absolute limits support to 1.0 api as well
* Merged with trunk
* fixed pep8 issue
* merge from trunk
* Fail early if requested imageRef does not exist when creating a server
* Separate out tests for when unfilter is called from iptables vs. nwfilter driver. Re: lp783705
* Moved back templates and fixed pep8 issue. Template move was due to breaking packaging with template moves. That will need to happen in a later merge
* further refactoring of wsgi module; adding documentation and tests
* don't give instance quota errors with negative values
* Merged trunk and resolved horrible horrible conflicts
* No reason to hash ramdisk_id and kernel_id. They are ints
* temp
* waldon's naming feedback
* Fixing role names to match code
* Merging trunk
* updated the hypervisors and ec2 api to support receiving lists from pluralized mac_addresses and fixed_ips
* fname should have been root_fname
* minor cleanup, plus had to merge because of diverged-branches issue
* Minor cleanup
* merge from trunk
* Fix comments
* Add a unitest to test EC2 snapshot APIs
* Avoid wildcard import
* Simple change to sort the list of controllers/methods before printing to make it easier to read
* missed the new wsgi test file
* removing controller/serializer code from wsgi.py; updating other code to use new modules
* merge lp:nova
* fixup absolute limits to latest 1.1 spec
* refactoring wsgi to separate controller/serialization/deserialization logic; creating osapi-specific module
* default to port 80 if it isnt in the href/uri
* return dummy id per vishs suggestion
* hackish patch to fix hrefs asking for their metadata in boot (this really shouldnt be in ec2 api?)
* Sort list of controllers/methods before printing
* use a manual 500 with error text instead of traceback for failure
* log any exceptions that get thrown trying to retrieve metadata
* skeleton of forwarding calls to child zones
* fix typo in udev rule
* merge trunk
* libvirt fixes to use new image_service stuff
* On second thought, removing decorator
* Adding FlagNotSet exception
* Implements a basic mechanism for pushing notifications out to interested parties. The rationale for implementing notifications this way is that the responsibility for them shouldn't fall to Nova. As such, we simply will be pushing messages to a queue where another worker entirely can be written to push messages around to subscribers
* Spacing changes
* get real absolute limits in openstack api and verify absolute limit responses
* Added missing xenhost plugin. This was causing warnings to pop up in the compute logs during periodic_task runs. It must have not been bzr add'd when this code was merged
* fixed bug with compute_api not having actual image_ref to use proper image service
* Adding xenhost plugin
* Merging trunk
* Added missing xenhost plugin
* Fix call to spawn_n() instead. It expects a callable
* fix pep8 issues
* oops, took out commented out tests in integrated.test_servers and made tests pass again
* fixed api.openstack.test_servers tests...again
* fixed QuotaTestCases
* fixed ComputeTestCase tests
* made ImageControllerWithGlanceServiceTests pass
* fixed test_servers small tests as well
* get integrated server_tests passing
* Removed all utils.import_object(FLAGS.image_service) and replaced with utils.get_default_image_service()
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB, updated version to 019
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB, updated version to 019
* Small cleanups
* Moving into scheduler subdir and refactoring out common code
* Moving tests into scheduler subdirectory
* added is_int function to utils
* Pep8 fixes
* made get_image_service calls in servers.py
* use utils.get_image_service in compute_api
* updates to utils methods, initial usage in images.py
* added util functions to get image service
* Using import_class to import filter_host driver
* Adding fill first cost function
* add more statuses for ec2 image registration
* Add --fixes
* Add --fixes
* Fixes the naming of the server_management_url in auth and tests
* Merging in Sandy's changes adding Noop Cost Fn with tests
* merged trunk
* move migration 017 to 018
* merge ram-limits
* Removed extra serialization metadata
* Docstring cleanup and formatting (nova/network dir). Minor style fixes as well
* pep8
* Fixes improper attribute naming around instance types that broke Resizes
* merge ram-limits
* support unlimited quotas in nova-manage and flags
* fix test
* Changed builder to match specs and added test
* add migration for proper name
* Update test case to ensure password gets set correctly
* make token use typo that is in database. Also fix now -> utcnow and stop using . syntax for dealing with tokens
* Added missing metadata join to instance_get calls
* Avoid using spawn_n to fix LP784132
* add ram limits to instance quotas
* Convert instance_type_ids in the instances table from strings to integers to enable joins with instance_types. This in particular fixes a problem when using postgresql
* Set password to one requested in API call
* don't throw type errors on NoneType int conversions
* Added network_info into refresh_security_group_rules That fixs https://bugs.launchpad.net/nova/+bug/773308
* Improved error notification in network create
* Instead of using a temp file with openssl, just write directly to stdin
* First cut at least cost scheduler
* merge lp:nova
* Implemented builder for absolute limits and updated tests
* provision_resource no longer returns value
* provision working correctly now
* Re-pull changed notification branch
* PEP8 fixes
* adding --fixes lp:781429
* Fixed mistyped key, caused huge performance leak
* Moved memcached connection in AuthManager to thread-local storage. Added caching of LDAP connection in thread-local storage. Optimized LDAP queries, added similar memcached support to LDAPDriver. Add "per-driver-request" caching of LDAP results. (should be per-api-request)
* ugh, fixed again
* tests fixed and pep8'ed
* Update comment on RequestExtension class
* failure conditions are being sent back properly now
* Added opt-out system for excluding files/dirs from pep8 (using GLOBIGNORE)
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB
* fix for lp783705 - remove nwfilters when instance is terminated
* basic call going through
* Added missing metadata join to instance_get calls
* add logging to migration and fix migration version
* Migrate quota schema from hardcoded columns to a key-value approach. The hope is that this change would make it easier to change the quota system without future schema changes. It also adds the concept of quotas that are unlimited
* Conceded :-D
* updated the mac_address delete function to actually delete the rows, and update fixed_ips
* Added missing flavorRef and imageRef checks in the os api xml deserialization code along with tests
* Fixed minor pylint errors
* This branch splits out the IPv6 address generation into pluggable backends. A new flag named ipv6_backend specifies which backend to use
* Reduce indentation to avoid PEP8 failures
* merge koelker migration changes
* using mac_address from fixed_ip instead of instance
* PEP8 cleanups
* Use new 3-argument API
* add a todo
* style fixing
* Removed obsolete method and test
* renamed test cases in nova/tests/api/openstack/test_servers.py to use a consistent naming convention as used in nova/tests/api/openstack/test_images.py. also fixed a couple of pylint #C0103 errors in test_servers.py
* make the migration work like we expect it to
* Fixed all pep8 errors in tools/install_venv.py. All tests pass
* Added the imageRef and flavorRef attributes in the xml deserialization
* Add vnc_keymap flag and enable setting keymap for vnc console
* Review changes and merge from trunk
* Pep8 cleaning
* Added response about error in nova-manage project operations
* Removed tools/clean_vlans and tools/nova-debug from pep8 tests as they are shell scripts
* Added lines to include tools/* (except ajaxterm) in pep8 tests
* Add a unit test for snapshot_volume
* Define image state during snapshotting. Name snapshot to the name provided, not generate
* Unit test for snapshotting (creating custom image)
* fixed a few C0103 errors in test_servers.py
* renamed test cases to use a consistent naming convention as used in nova/tests/api/openstack/test_images.py
* fix sys.argv requirement
* first cut at weighted-sum tests
* merge trunk
* add udev rules and modified ovs_configure_vif_flows.py to work with udev rules
* Adds proper error handling for images that can't be found and a test for deregister image
* added |fixed_ip_get_all_by_mac_address| and |mac_address_get_by_fixed_ip| to db and sqlalchemy APIs
* started on integrating HostFilter
* Add support for rbd snapshots
* Merging in trunk
* I'm assuming that openstack doesnt work with python < 2.6 here (which I read somewhere on the wiki). This patch will check to make sure python >= 2.6 is installed, and also allow it to work with python 2.7 (and greater in the future)
* merge lp:nova
* XenAPI was not implemented to allow for multiple simultaneous XenAPI requests. A single XenAPIConnection (and thus XenAPISession) is used for all queries. XenAPISession's wait_for_task method would set a self.loop = for looping calls to _poll_task until task completion. Subsequent (parallel) calls to wait_for_task for another query would overwrite this. XenAPISession._poll_task was pulled into the XenAPISession.wait_for_task method to avoid having to store self.loop
* pep8 fixes
* Merged trunk
* volume/driver: make unit test, test_volume, pass
* Make set_admin_password non-blocking to API
* Merged trunk
* Review feedback
* Lost a flag pulling from another branch. Whoops
* Update the compute manager so that it breaks out of a loop if set_admin_password is not implemented by the driver. This avoids excessively logging NotImplementedError exceptions
* Merging in Sandy's changes
* Make host timeout configurable
* Make set_admin_password non-blocking to API
* volume/driver: implement basic snapshot
* merge trunk
* Update the compute manager so that it breaks out of a loop if set_admin_password is not implemented by the driver
* Add init script and sysconfig file for openvswitch-nova
* volume/driver: factor out lvm opration
* Authors: add myself to Authers file
* trunk merge
* Adding zones doc into index of devref plus a bug fix for flag spellings
* fixup based on Lorin's feedback
* added flag lost in migration
* merge trunk
* pep8
* Adding basic tests for call_zone_method
* fixed_ip disassociate now also unsets mac_address_id
* Make sure imports are in alphabetical order
* updated previous calls referring to the flags to use the column from the networks table instead
* merged from trunk
* handle instance_type_ids that are NULL during upgrade to integers
* fix for lp760921. Previously, if tune2fs failed, as it does on windows hosts, kpartx -d also failed to be called which leaves mapped partitions that retain holds on the nbd device. These holds cause the observed errors
* if a LoopingCall has canceled the loop, break out early instead of sleeping any more than needed
* Add a test for parallel builds. verified this test fails before this fix and succeeds after this fix
* incorporated ImageNotFound instead of NotFound
* merged from trunk
* misc related network manager refactor and cleanup
* changed NotFound exception to ImageNotFound
* Update comment
* Variable renaming
* Add test suite for IPv6 address generation
* Accept and ignore project_id
* Make it so that ExtensionRequest objects now return proper webob objects. This avoids the odd serialization code in the RequestExtensionController class which converts JSON dicts to webobs for us
* merged from trunk
* Remove ResponseExtensions. The new RequestExtension covers both use cases
* Initial work on request extensions
* Added network_info into refresh_security_group_rules
* fixed pep8 spacing issue
* merge from trunk
* rename quota column to 'hard_limit' to make it simpler to avoid collisions with sql keyword 'limit'
* Fix remote volume code
* 1 Set default paths for nova.conf and api-paste.ini to /etc/nova/ 2 Changed countryName policy because https://bugs.launchpad.net/nova/+bug/724317 still affected
* Implement IPv6 address generation that includes account identifier
* messing around with the flow of create() and specs
* Redundant line
* changes per review
* docstring cleanup, nova/network dir
* make instance.instance_type_id an integer to support joins in postgres
* merge from trunk and update .mailmap file
* Merged trunk
* Updated MANIFEST for template move
* NoValidHost exception test
* Fixes an issue with conversion of images that was introduced by exception refactoring. This makes the exceptions when trying to locate an ec2 id clearer and also adds some tests for the conversion methods
* oops fixed a docstring
* Pep8 stuff
* Bluprint URL: https://blueprints.launchpad.net/nova/+spec/improve-pylint-scores/
* start of zone_aware_scheduler test
* Moved everything into notifier/api
* make sure proper exceptions are raised for ec2 id conversion and add tests
* better function name
* Updated the value of the nova-manager libvirt_type
* more filter alignment
* Removed commented out 'from nova import log as logging' line, per request from Brian Lamar
* merge trunk
* align filters on query
* better pylint scores on imports
* Code cleanup
* Merged trunk
* Abstract out IPv6 address generation to pluggable backends
* Merged trunk
* First cut with tests passing
* changing Authors file
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* Fix for #780276 (run_tests.sh fails test_authors_up_to_date when using git repo)
* extracted xenserver capability reporting from dabo's dist-scheduler branch and added tests
* migrate back updated_at correctly
* added in log_notifier for easier debugging
* Add priority based queues to notifications. Remove duplicate json encoding in notifier (rpc.cast does encoding... ) make no_op_notifier match rabbit one for signature on notify()
* Bugfix #780784. KeyError when creating custom image
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* Better tests
* Add example
* give a more informative message if pre-migration assertions fail
* Whoops
* fix migration bug
* Pep8
* Test
* remove stubbing of XenAPISession.wait_for_task for xenapi tests as it doesn't need to be faked. Also removed duplicate code that stubbed xenapi_conn._parse_xmlrpc_value
* migration bug fixes
* Change xenapi's wait_for_task to handle multiple simultaenous queries to fix lp:766404
* Added GitPython to [install_dir]/tools/pip-requires
* got rid of unnecessary imports
* Enable RightAWS style signature checking using server_string without port number, add test cases for authenticate() and a new helper routine, and fix lp753660
* Better message format description
* unified underscore/dash issue
* update tests to handle unlimited resources in the db
* pep8
* capabilities flattened and tests fixed
* Set root password upon XenServer instance creation
* trunk merge
* clean up unused functions from virt/images.py
* Removing a rogue try/catch expecting a non-existant exception.TimeoutException that is never raised
* basic test working
* db: fix db versioning
* fix mismerge by 1059
* volume/driver: implement basic snapshot/clone
* volume/driver: factor out lvm opration
* Host Filtering for Distributed Scheduler (done before weighing)
* Rebased to trunk rev 1057
* Adds coverage-related packages to the tools/pip-requires to allows users to generate coverage reporting when running unit tests with virtulenv
* merge from trunk
* Set publish_errors default to False
* convert quota table to key-value
* Simple fix for this issue. Tries to raise an exception passing in a variable that doesn't exist, which causes an error
* Fixed duplicate function
* Review feedback
* Review feedback
* Fixed method in flavors
* Review feedback
* Review feedback
* Merged trunk
* Set root password upon XenServer instance creation
* Added Python packages needed for coverage reports to virtualenv packages
* Added interface functions
* merge from trunk
* added test for show_by_name ImageNotFound exception
* tests pass again
* Sanitize get_console_output results. See bug #758054
* revised file docs
* New author in town
* Changes to allow a VM to boot from iso image. A blank HD is also attached with a size corresponding to the instance type
* Added stub function for a referenced, previously non-existant function
* Merged trunk
* grabbed from dist-sched branch
* Explicitly casted a str to a str to please pylint
* Removed incorrect, unreachable code
* spacing fix
* pep8 fix
* Improved error notification in network create
* Add two whitespaces to conform PEP8
* Publish errors via nova.notifier
* Added myself to Authors file
* terminology: no more plug-ins or queries. They are host filters and drivers
* Added interface function to ViewBilder
* Added interfaces to server controller
* added self to authors
* fixed issue with non-existent variable being passed to ImageNotFound exception
* removing rogue TimeoutException
* merge prop fixes
* Merged trunk
* print statements removed
* merge with trunk
* flipped service_state in ZoneManager and fixed tests
* pep8
* not =
* not =
* and or test
* and or test
* merge from trunk
* Removed extra newline after get_console_output in fake virt driver
* Moved all reencoding to compute manager to satisfy both Direct API and internal cloud call
* Merged with current trunk
* added myself to Authors
* Adding a test case to show the xml deserialization failure for imageRef and flavorRef
* Fixes for nova-manage vpn list
* json parser
* Don't fail the test suite in the absence of VCS history
* It's ok if there's no commit history. Otherwise the test suite in the tarball will fail
* Merged trunk
* flavor test
* Fix indentation
* tests and better driver loading
* Add missed hyphen
* Adding OSAPI v1.1 limits resource
* Adding support for server rebuild to v1.0 and v1.1 of the Openstack API
* reduce policy for countyname
* looking for default flagfile
* adding debug log message
* merging trunk
* merging trunk
* removing class imports
* Merged trunk
* Merged trunk
* Moved reencoding logic to compute manager and cloud EC2 API
* ensure create image conforms to OS API 1.1 spec
* merge updates from trunk
* Added support in the nova openstack api for requests with local hrefs, e.g., "imageRef":"2" Previously, it only supported "imageRef":"http://foo.com/images/2". The 1.1 api spec defines both approaches
* Add a flag to allow the user to specify a dnsmasq configuration file for nova-network to use when starting dnsmasq. Currently the command line option is set to "--config-fil=" with nothing specified. This branch will leave it as it is if the user does not specify a config file, but will utilize the specific file if they do
* merged from trunk
* implemented review suggestion EAFP style, and fixed test stub fake_show needs to have image_state = available or other tests will fail
* got rid of extra whitespace
* Update tools/pip-requires and tools/install_venv.py for python2.7 support (works in ubuntu 11.04)
* No need to test length of admin password in local href test
* merging trunk; resolving conflicts; fixing issue with ApiError test failing since r1043
* Added support in osapi for requests with local hrefs, e.g., "imageRef":"2"
* initial pass
* Implement get_host_ip_addr in the libvirt compute driver
* merging trunk; resolving conflicts
* Modified the instance status returned by the OS api to more accurately represent its power state
* Fixed 2 lines to allow pep8 check to pass
* Since run_tests.sh utilizes nose to run its tests, the -x, --stop flag works correctly for halting tests on the first failed test. The usage information for run_tests.sh now includes the --stop flag
* add support for git checking and a default of failing if the history can't be read
* ApiError 'code' arg set to None, and will only display a 'code' as part of the str if specified
* Fixed: Check for use of IPv6 missing
* removed unused method and fixed imports
* Change the links in the sidebar on the docs pages
* Use my_ip for libvirt version of get_host_ip_addr
* fix typo in import
* removed unused method and fixed imports
* small changes in libvirt tests
* place ipv6_rules creation under if ip_v6 section
* Added checking ip_v6 flag and test for it
* merging trunk
* adding view file
* Expose AuthManager.list_projects user filter to nova-manage
* Final cleanup of nova/exceptions.py in my series of refactoring branches
* Uses memcached to cache roles so that ldap is actually usable
* added nova version to usage output of bin/nova-manage for easy identification of installed codebase
* Changing links in sidebar to previous release
* Rebased to trunk rev 1035
* converted 1/0 comparison in db to True/False for Postgres cast compatibility
* Changed test_cloud and fake virt driver to show out the fix
* converted 1/0 comparison to True/False for Postgres compatibility
* pep8
* fixed docstring per jsb
* added version list command to nova-manage
* Added more unit-test for multi-nic-nova libvirt
* Sanitize get_console_output in libvirt_conn
* added nova version output to usage printout for nova-manage
* Make the import of distutils.extra non-mandatory in setup.py. Just print a warning that i18n commands are not available..
* Correcting exception case
* further cleanup of nova/exceptions.py
* added eagerloading mac adddresses for instance
* merge with trunk and resolve conflicts
* Added myself to authors file
* pep8 fixes
* Refactoring usage of nova.exception.NotFound
* Let nova-mange limit project list by user
* merging trunk
* Make the import of distutils.extra non-mandatory in setup.py. Just print a warning that i18n commands are not available..
* Updated run_tests.sh usage info to reflect the --stop flag
* Fixed formatting to align with PEP 8
* Modified instance status for shutoff power state in OS api
* Refactoring the usage of nova.exception.Duplicate
* Rebased to trunk rev 1030
* removed extra newline
* merged from trunk
* updated tests to reflect serverRef as href (per Ilya Alekseyev) and refactored _build_server from ViewBuilder (per Eldar Nugaev)
* Add a test checking spawn() works when network_info is set, which currently doesn't. The following patch would fix parameter mismatch calling _create_image() from spawn() in libvirt_conn.py
* removed unused imports and renamed template variables
* pep8
* merging trunk
* Renamed test_virt.py to test_libvirt.py as per suggestion
* fixing bad merge
* Merged trunk and fixed simple exception conflict
* merging trunk
* Refactoring nova.exception.Invalid usage
* adding gettext to setup.py
* Use runtime XML instead of VM creation time XML for createXML() call in order to ensure volumes are attached after RebootInstances as a workaround, and fix bug #747922
* Created new libvirt directory, moved libvirt_conn.py to libvirt/connection.py, moved libvirt templates, broke out firewall and network utilities
* Rebased to trunk rev 1027, and resolved a conflict in nova/virt/libvirt_conn.py
* Rebased to trunk rev 1027
* clarifies error when trying to add duplicate instance_type names or flavorids via nova-manage instance_type
* merge trunk
* Rework completed. Added test cases, changed helper method name, etc
* pep8
* merge trunk, resolved conflict
* merge trunk
* Abstracted libvirt's lookupByName method into _lookup_by_name
* Provide option of auto assigning floating ip to each instance. Depend on auto_assign_floating_ip boolean flag value. False by default
* Fixes per review
* Restore volume state on migration failure to fix lp742256
* Fixes cloudpipe to get the proper ip address
* merging trunk
* Fix bug with content-type and small OpenStack API actions refactor
* merge with trunk
* merge trunk
* merged trunk
* -Fixed indent for _get_ip_version -Added LoopingCall to destroy as suggested by earlier bug report -Standardized all LoopingCall uses to include useful logging and better error handling
* Create a dictionary of instance_types before executing SQL updates in the instance_type_id migration (014). This should resolve a "cannot commit transaction - SQL statements in progress" error with some versions of sqlite
* create network now takes bridge for flat networks
* Adapt DescribeInstances to EC2 API spec
* Change response of the EC2 API CreateVolume method to match the API docs for EC2
* Merged trunk and fixed api servers conflict
* pep8
* Fixes and reworkings based on review
* pep8
* Addressing exception.NotFound across the project
* fix logging in reboot OpenStack API
* eager loaded mac_address attributes for mac address get functions
* updated image builder and tests for OS API 1.1 compatibility (serverRef)
* forgot import
* change action= to actions=
* typo
* forgot to save
* moved get_network_topic to network.api
* style cleaning
* Fixed network_info creation in libvirt driver. Now creating same dict as in xenapi driver
* Modified instance status for shutdown power state in OS api
* rebase trunk
* altered imports
* commit to push for testing
* Rebased to trunk rev 1015
* Utility method reworked, etc
* Docstring cleanup and formatting (nova/image dir). Minor style fixes as well
* Docstring cleanup and formatting (nova/db dir). Minor style fixes as well
* Docstring cleanup and formatting (nova dir). Minor style fixes as well
* use vpn filter in basic filtering so cloudpipe works with iptables driver
* use simpler interfaces
* Docstring cleanup and formatting (console). Minor style fixes as well
* Docstring cleanup and formatting (compute). Minor style fixes as well
* merge trunk
* Add privateIpAddress and ipAddress to EC2 API DescribeInstances response
* style fixing
* Fix parameter mismatch calling _create_image() from spawn() in libvirt_conn.py
* Add a test checking spawn() works when network_info is set, which currently doesn't. The following patch would fix it
* put up and down in the right dir
* Makes metadata correctly display kernel-id and ramdisk-id
* pep8 cleaning
* style fix
* revert changes that doesn't affect the bug
* in doesn't work properly on instance_ref
* Another small round of pylint clean-up
* Added an option to run_tests.sh so you can run just pep8. So now you can: ./run_tests.sh --just-pep8 or ./run_tests.sh -p
* merge trunk
* fix display of vpn instance id and add output rule so it can be tested from network host
* Exit early if tests fail, before pep8 is run
* more changes per review
* fixes per review
* docstring cleanup, nova/image dir
* Docstring cleanup and formatting. Minor style fixes as well
* cleanups per code review
* docstring cleanup, nova dir
* fixed indentation
* docstring cleanup, console
* docstring cleanup, nova/db dir
* attempts to make the docstring rules clearer
* fix typo
* docstring cleanup compute manager
* bugfix signature
* refactor the way flows are deleted/reset
* remove ambiguity in test
* Pylinted nova-compute
* Pylinted nova-manage
* replaced regex to webob.Request.content_type
* fix after review: style, improving tests, replacing underscore
* merge with trunk
* fix Request.get_content_type
* Reverted bad merge
* Rebased to trunk rev 1005
* Removed no longer relevant comment
* Removed TODO we don't need
* Removed _ and replaced with real variable name
* instance type get approach changed. tests fixed
* Merged trunk
* trunk merged
* fix: mark floating ip as auto assigned
* Add to Authors
* Change response format of CreateVolume to match EC2
* revamped spacing per Rick Harris suggestion. Added exact error to nova-manage output
* only apply ipv6 if the data exists in xenstore
* Create a dictionary of instance_types before executing SQL updates in the instance_type_id migration (014). This should resolve a "cannot commit transaction - SQL statements in progress" error with some versions of sqlite
* add support for git checking and a default of failing if the history can't be read
* strip output, str() link local
* merging lp:~rackspace-titan/nova/exceptions-refactor-invalid
* Round 1 of pylint cleanup
* Review feedback
* Implement quotas for the new v1.1 server metadata controller
* fix doc typo
* fix logging in reboot OpenStack API
* make geninter.sh use the right tmpl file
* pep8 fix
* refactoring usage of exception.Duplicate errors
* rename all versions of image_ec2_id
* Abstracted lookupByName calls to _lookup_by_name for centralized error handling
* actually use the ec2_id
* remove typo
* merging lp:~rackspace-titan/nova/exceptions-refactor-invalid
* Fixes cloudpipe to get the proper ip address
* add include file for doc interfaces
* add instructions for setting up interfaces
* Merged trunk and fixed small comment
* Fixed info messages
* Tweak to destroy loop logic
* Pretty critical spelling error
* Removed extra calls in exception handling and standardized the way LoopingCalls are done
* one last i18n string
* Merged trunk
* multi-line string spacing
* removing rogue print
* moving dynamic i18n to static
* refractoring
* Add support for cloning a Sheepdog volume
* Add support for cloning a Sheepdog volume
* Add support for creating a new volume from a existing snapshot with EC2 API
* Add support for creating a new volume from a existing snapshot with EC2 API
* Add support for creating a Sheepdog snapshot
* Add support for creating a Sheepdog snapshot
* Add support for creating a snapshot of a nova volume with euca-create-snapshot
* Add support for creating a snapshot of a nova volume with euca-create-snapshot
* trunk merged
* Implement get_host_ip_addr in the libvirt compute driver
* Adding projectname username to the nova-manage project commands to fix a doc bug, plus some edits and elimination of a few doc todos
* pep8 fixes
* Remove zope.interface from the requires file since it is not used anywhere
* use 'is not None' instead of '!= None'
* Fix loggin in creation server in OpenStack API 1.0
* Support admin password when specified in server create requests
* First round of pylint cleanup
* merge lp:nova and resolve conflicts
* Change '== None' to 'is None'
* remove zope.interface requires
* use 'is not None' instead of '!= None'
* pep8 fixes
* Change '== None' to 'is None'
* Fixes nova-manage image convert when the source directory is the same one that local image service uses
* trunk merged
* pep8 fixed
* calc link local
* not performing floating ip operation with auto allocated ips
* it is rename not move
* pep8 fix
* Rebased to trunk rev 995
* Rebased to trunk rev 995
* merge trunk
* add fault as response
* Fix logging in openstack api
* Fix logging in openstack api
* Fix logging in openstack api
* trunk merged. conflict resolved
* trunk merged. conflict resolved
* The change to utils.execute's call style missed this call somehow, this should get libvirt snapshots working again
* Fix parameter mismatch calling to_xml() from spawn() in libvirt_conn.py
* move name into main metadata instead of properties
* change libvirt snapshot to new style execute
* Add additional logging for WSGI and OpenStack API authentication
* Rename the id
* Added period to docstring for metadata test
* Merged trunk
* Empty commit to hopefully regenerate launchpad diff
* Explicitly tell a user that they need to authenticate against a version root
* Merged trunk
* merging trunk
* adding documentation & error handling
* correcting tests; pep8
* Removed the unused self.interfaces_xml variable
* Only poll for instance states that compute should care about
* Diablo versioning
* Diablo versioning
* Rebased to trunk rev 989
* Rebased to trunk rev 989

2011.2
------

* Final versioning for Cactus
* initial roundup of all 'exception.Invalid' cases
* merge trunk
* set the bridge on each OvsFlow
* merge with trunk
* bugfix
* bugfix
* Fix parameter mismatch calling to_xml() from spawn() in libvirt_conn.py
* add kvm-pause and kvm-suspend

2011.2rc1
---------

* Rework GlanceImageService._translate_base(
* Updated following to RIck's comments
* Rebased to trunk rev 987
* Rework GlanceImageService._translate_base() to not call BaseImageService._translate_base() otherwise the wrong class attributes are used in properties construction..
* Try to be nicer to the DB when destroying a libvirt instance
* pep8
* merge trunk
* fixed error message i18n-ization. added test
* Don't hammer on the DB
* Debug code clean up
* Rebased to trunk rev 986
* An ultimate workaround workd... :(
* Zero out volumes during deletion to prevent data leaking between users
* Minor formatting cleanup
* jesse@aire.local to mailmap
* Changed pep8 command line option from --just-pep8 to --pep8
* re-add broken code
* merge trunk
* Final versioning
* Updates the documentation on creating and using a cloudpipe image
* iSCSI/KVM test completed
* Minor fixes
* Fix RBDDriver in volume manager. discover_volume was raising exception. Modified local_path as well
* Fixes VMware Connection to inherit from ComputeDriver
* Fixes s3.py to allow looking up images by name. Smoketests run unmodified again with this change!
* move from try_execute to _execute
* Make VMWare Connection inherit from ComputeDriver
* add up and down .sh
* fix show_by_name in s3.py and give a helpful error message if image lookup fails
* remove extra newline
* dots
* Rebased to trunk rev 980
* Rework importing volume_manager
* Blushed up a little bit
* Merged trunk
* Only warn about rouge instances that compute should know about
* Added some tests
* Dangerous whitespace mistake! :)
* Cleanup after prereq merge
* Add new flag 'max_kernel_ramdisk_size' to specify a maximum size of kernel or ramdisk so we don't copy large files to dom0 and fill up /boot/guest
* Rebased to trunk rev 980
* Merged lp:~rackspace-titan/nova/server_metadata_quotas as a prereq
* Merged trunk
* Docstring cleanup and formatting. Minor style fixes as well
* Updated to use setfacl instead of chown
* Commit for merge of metadata_quotas preq
* merge trunk
* Removed extra call from try/except
* Reverted some superfluous changes to make MP more concise
* Merged trunk
* Reverted some superfluous changes to make MP more concise
* Replace instance ref from compute.api.get_all with one from instance_get. This should ensure it gets fully populated with all the relevant attributes
* Add a unit test for terminate_instances
* pep8
* Fix RBDDriver in volume manager. discover_volume was raising exception. Modified local_path as well
* pep8 fixes
* migaration and pep8 fixes
* update documentation on cloudpipe
* Makes genvpn path actually refer to genvpn.sh instead of geninter.sh
* typo
* Merged trunk
* Updating the runnova information and fixing bug 753352
* merge trunk
* network manager changes, compute changes, various other
* Floating ips auto assignment
* Sudo chown the vbd device to the nova user before streaming data to it. This resolves an issue where nova-compute required 'root' privs to successfully create nodes with connection_type=xenapi
* Minor blush ups
* A minor blush up
* A minor blush up
* Remove unused self.interfaces_xml
* Rebased to trunk rev 977
* Rebase to trunk rev 937
* debug tree status checkpoint 2
* docstring cleanup, direct api, part of compute
* bzr ignore the top level CA dir that is created when running 'run_tests.sh -N'
* fix reference to genvpn to point to the right shell script
* Set default stateOrProvice to 'supplied' in openssl.cnf.tmpl
* merge trunk
* This branch fixes https://bugs.launchpad.net/bugs/751231
* Replace instance ref from compute.api.get_all with one from instance_get. This should ensure it gets fully populated with all the relevant attributes
* When using libvirt, remove the persistent domain definition when we call destroy, so that behavior on destroy is as it was when we were using transient instances
* Rebased to trunk rev 973
* Currently terminating an instance will hang in a loop, this allows for deletion of instances when using a libvirt backend. Also I couldn't help add a debug log where an exception is caught and ignored
* merge trunk
* resolved lazy_match conflict between bin/nova-manage instance and instance_type by moving instance subcommand under vm command. documented vm command in man page. removed unused instance_id from vm list subcommand
* Ooops - redefining the _ variable seems like a _really_ bad idea
* Handle the case when the machine is already SHUTOFF
* Split logic on shutdown and undefine, so that even if the machine is already shutdown we will be able to proceed
* Remove the XML definition when we destroy a machine
* Rebased to trunk rev 971
* debug tree status checkpoint
* Reabased to trunk rev 971
* Fixed log message gaffe
* pylintage
* typo - need to get nova-volumes working on this machine :-/
* dd needs a count to succeed, and remove unused/non-working special case for size 0
* There is a race condition when a VDI is mounted and the device node is created. Sometimes (depending on the configuration of the Linux distribution) nova loses the race and will try to open the block device before it has been created in /dev
* zero out volumes on delete using dd
* Added RST file on using Zones
* Fixes euca-attach-volume for iscsi using Xenserver
* pep8
* merge trunk
* removes log command from nova-manage as it no longer worked in multi-log setup
* Added error message to exception logging
* Fixes bug which hangs nova-compute when terminating an instance when using libvirt backend
* missing 'to'
* Short circuit non-existant device during unit tests. It won't ever be created because of the stubs used during the unit tests
* Added a patch for python eventlet, when using install_venv.py (see FAQ # 1485)
* fixed LOG level and log message phrase
* merge prop tweaks 2
* Set default stateOrProvice to 'supplied' in openssl.cnf.tmpl
* This branch fixes https://bugs.launchpad.net/nova/+bug/751242
* Ignore errors when deleting the default route in the ensure_bridge function
* bzr ignore the CA dir
* merge prop tweaks

2011.2gamma1
------------

* Import translations from Launchpad
* added Zones doc
* Update the describe_image_attribute and modify_image_attribute functions in the EC2 API so they use the top level 'is_public' attribute of image objects. This brings these functions in line with the base image service
* Import from lp:~nova-core/nova/translations
* corrects incorrect openstack api responses for metadata (numeric/string conversion issue) and image format status (not uppercase)
* Implement a mechanism to enforce a configurable quota limit for image metadata (properties) within the OS API image metadata controller
* Update the describe_image_attribute and modify_image_attribute functions in the ec2 API so they use the top level 'is_public' attribute of image objects. This brings these functions in line with the base image service
* Ignore errors when deleting the default route in the ensure_bridge function
* merge trunk
* removed log command from nova-manage. no longer applicable with multiple logfiles
* merge trunk
* reminde admins of --purge option
* Fixes issues with describe instances due to improperly set metadata
* Keep guest instances when libvirt host restarts
* fix tests from moving access check into update and delete
* Added support for listing addresses of a server in the openstack api. Now you can GET * /servers/1/ips * /servers/1/ips/public * /servers/1/ips/private Supports v1.0 json and xml. Added corresponding tests
* Log libvirt errcode on exception
* This fixes how the metadata and addresses collections are serialized in xml responses
* Fix to correct libvirt error code when the domain is not found
* merged trunk
* Removed commented-out old 'delete instance on SHUTOFF' code
* Automatically add the metadata address to the network host. This allows guests to ARP for the address properly
* merged trunk and resolved conflict
* slight typo
* clarified nova-manage instance_type create error output on duplicate flavorid
* This branch is a patch for fixing below issue. > Bug #746821: live_migration failing due to network filter not found Link a bug report
* fix pep8 violation
* Update instances table to use instance_type_id instead of the old instance_type column which represented the name (ex: m1.small) of an instance type
* Drop extra 'None' arg from dict.get call
* Some i18n fixes to instance_types
* Renamed computeFault back to cloudServersFault in an effort to maintain consistency with the 1.0 API spec. We can look into distinguishing the two in the next release. Held off for now to avoid potential regression
* adds a timeout on session.login_with_password()
* Drop unneeded Fkey on InstanceTypes.id
* Bypass a potential security vulnerability by not setting shell=True in xenstore.py, using johannes.erdfelt's patch
* Renamed computeFault to cloudServersFault
* fixed the way ip6 address were retrieved/returned in _get_network_info in nova/virt/xenapi/vmops
* added -manage vm [list|live-migration] to man page
* removed unused instance parameter from vm list ... as it is unused. added parameters to docstring for vm list
* moved -manage instance list command to -manage vm list to avoid lazy match conflict with instance_types
* Simplify by always adding to loopback
* Remove <addressSet> and <item> from AllocateAddress response, and fix bug #751176
* remove unused code
* better error message
* Blush up a bit
* Rebased to trunk rev 949
* pep8
* adds timeout to login_with_password
* test provider fw rules at the virt/ipteables layer. lowercase protocol names in admin api to match what the firewall driver expects. add provider fw rule chain in iptables6 as well. fix a couple of small typos and copy-paste errors
* fixed based on reviewer's comment - 1. erase unnecessary blank line, 2. adding LOG.debug
* Rebased to trunk rev 949
* fixed based on reviewer's comment - 'locals() should be off from _()
* Make description of volume_id more generic
* add the tests
* pep8 cleanup
* ApiError code should default to None, and will only display a code if one exists. Prior was output an 'ApiError: ApiError: error message' string, which is confusing
* ec2 api run_instances checks for image status must be 'available'. Overhauled test_run_instances for working set of test assertions
* if we delete the old route when we move it we don't need to check for exists
* merged trunk
* removed comment on API compliance
* Added an option to run_tests.sh so you can run just pep8. So now you can: ./run_tests.sh --just-pep8 or ./run_tests.sh -p
* Add automatic metadata ip to network host on start. Also fix race where gw is readded twice
* Controllers now inherit from nova.api.openstack.common.OpenstackController
* Merged trunk
* Support providing an XML namespace on the XML output from the OpenStack API
* Merged with trunk, fixed up test that wasn't checking namespace
* Added support for listing addresses of a server in the openstack api. Now you can GET * /servers/1/ips * /servers/1/ips/public * /servers/1/ips/private Supports v1.0 json and xml. Added corresponding tests
* check visibility on delete and update
* YADU (Yet Another Docstring Update)
* Make sure ca_folder is created before chdir()ing into it
* another syntax error
* Use a more descriptive name for the flag to make it easier to understand the purpose
* Added logging statements for generic WSGI and specific OpenStack API requests
* syntax error
* Incorprate johannes.erdfelt's patch
* updated check_vm_record in test_xenapi to check the gateway6 correctly
* updated get_network_info in libvirt_conn to correctly insert ip6s and gateway6 into the network info, also small style fixes
* add docstrings
* updated _prepare_injectables() to use info[gateway6] instead of looking inside the ip6 address dict for the gateway6 information
* Enable RightAWS style signing on server_string without port number portion
* modified behavior of inject_network_info and reset_network related to a vm_ref not being passed in
* Create ca_folder if it does not already exist
* Wait for device node to be created after mounting image VDI
* Improved unit tests Fixed docstring formatting
* Only create ca_path directory if it does not already exist
* Added bug reference
* Only create ca_path directory if it does not already exist
* Make "setup.py install" much more thorough. It now installs tools/ into /usr/share/nova and makes sure api-paste.conf lands in /etc/nova rather than /etc
* fixed based on reviwer's comment
* return image create response as image dict
* Add a patch for python eventlet, when using install_venv.py (see FAQ # 1485)
* Undo use of $ in chain name where not needed
* Testing for iptables manager changes
* Don't double-apply provider fw rules in NWFilter and Iptables. Don't create provider fw rules for each instance, use a chain and jump to it. Fix docstrings
* typo
* remove -None for user roles
* pep8
* fallback to status if image_state is not set
* update and fix tests
* unite the filtering done by glance client and s3
* Removing naughty semicolon
* merged trunk
* remove extraneous empty lines
* move error handling down into get_password function
* refactor to handle invalid adminPass
* fixed comment
* merged trunk
* add support for specifying adminPass for JSON only in openstack api 1.1
* add tests for adminPass on server create
* Fix a giant batch of copypasta
* Remove file leftover from conflict
* adding support for OSAPI v1.1 limits resource
* Moved 'name' from <imageId> to <imageLocation>, corrected <imageType> and fixes bug # 750482
* This branch contains the fix for lp:749973. VNC is assumed that is default for all in libvirt which LXC does not support yet
* Remove comments
* Separate CA/ dir into code and state
* removed blank lines for pep8 fix
* pep8 fixed
* Fixed the addresses and metadata collections in xml responses. Added corresponding tests
* Dont configure vnc if we are using lxc
* Help paste_config_file find the api config now that we moved it
* Add bug reference
* Move api-paste.ini into a nova/ subdir of etc/
* Add a find_data_files method to setup.py. Use it to get tools/ installed under /usr/(local/)/share/nova
* Nits
* Add missing underscore
* fix bug lp751242
* fix bug lp751231
* Automatically create CA state dir, and make sure the CA scripts look for the templates in the right places
* fix bug 746821
* Remove <addressSet> and <item> from AllocateAddress response, and fix bug #751176
* Allow CA code and state to be separated, and make sure CA code gets installed by setup.py install
* Rebased to trunk 942
* fix bug lp:682888 - DescribeImages has no unit tests
* Correct variable name
* correct test for numeric/string metadata value conversion
* openstack api metadata responses must be strings
* openstack api requires uppercase image format status responses
* merge trunk
* Refactor so that instances.instance_type is now instances.instance_type_id
* splitting test_get_nic_for_xml into two functions
* Network injection check fixed in libvirt driver
* merging trunk
* fixing log message
* working with network_ref like with mapping
* add test for NWFilterFirewall
* Removed adminclient.py and added reference to the new nova-adminclient project in tools/pip-requires
* Don't prefix adminPass with the first 4 chars of the instance name
* Declares the flag for vncproxy_topic in compute.api
* Fixes bug 741246. Ed Leafe's inject_file method for the agent plugin was mistakenly never committed after having to fix commits under wrong email address. vmops makes calls to this (previously) missing method
* Attempt to circumvent errors in the API from improper/malformed responses from image service
* fixes incorrect case of OpenStack API status response
* Fixed network_info creating
* Moved 'name' property from <imageId> to <imageLocation>, corrected <imageType> and fixes bug # 750482
* corrected capitalization of openstack api status and added tests
* libvirt_con log fix
* Ensure no errors for improper responses from image service
* merge trunk
* Fixes error which occurs when no name is specified for an image
* improving tests
* network injection check fixed
* Only define 'VIMMessagePlugin' class if suds can be loaded
* Make euca-get-ajax-console work with Euca2ools 1.3
* Add bug reference
* Use keyword arguments
* add multi_nic_test
* added preparing_xml test
* split up to_xml to creation xml_info and filling the template
* use novalib for vif_rules.py, fix OvsFlow class
* extract execute methods to a library for reuse
* Poller needs to check for BUILDING not NOSTATE now, since we're being more explict about what is going on
* Add checking if the floating_ip is allocated or not before appending to result array in DescribeAddresses
* Added synchronize_session parameter to a query in fixed_ip_disassociate_all_by_timeout() and fix #735974
* Made the fix simpler
* Add checking if the floating_ip is allocated or not before appending to result array
* Added updated_at field to update statement according to Jay's comment
* change bridge
* Add euca2ools import
* Rebased to trunk 930
* Rebased to trunk 726
* lots of updates to ovs scripts
* Make euca-get-ajax-console work with Euca2ools 1.3
* merge trunk
* Hopefully absolved us of the suds issue?
* Removes excessive logging message in the event of a rabbitmq failure
* Add a change password action to /servers in openstack api v1.1, and associated tests
* Removal of instance_set_state from driver code, it shouldnt be there, but instead should be in the compute manager
* Merged trunk
* Don't include first 4 chars of instance name in adminPass
* Friendlier error message if there are no compute nodes are available
* merge lp:nova
* Merged waldon
* Adding explanation keyword to HTTPConflict
* Merged waldon
* makes sure s3 filtering works even without metadata set properly
* Merged waldon
* Didn't run my code. Syntax error :(
* Now using the new power state instead of string
* adding servers view mapping for BUILDING power state
* removes excessive logging on rabbitmq failure
* Review feedback
* Friendlier error message if there are no compute nodes are available
* Merged with Waldon
* Better error handling for spawn and destroy in libvirt
* pep8
* adding 'building' power state; testing for 409 from OSAPI when rebuild requested on server being rebuild
* More friendly error message
* need to support python2.4, so can't use uuid module
* If the floating ip address is not allocated or is allocated to another project, then the user trying to associate the floating ip address to an instance should get a proper error message
* Update state between delete and spawn
* adding metadata support for v1.1
* Rebuild improvements
* Limit image metadata to the configured metadata quota for a project
* Add volume.API.remove_from_compute instead of compute.API.remove_volume
* Rebased to trunk rev 925
* Removed adminclient and referred to pypi nova_adminclient module
* fixed review comment for i18n string multiple replacement strings need to use dictionary format
* fixed review comment for i18n string multiple replacement strings need to use dictionary format
* Add obviously-missing method that prevents an Hyper-V compute node from even starting up
* Avoid any hard dependencies in nova.virt.vmwareapi.vim
* review cleanup
* Handles situation where Connection._instances doesn't exist (ie. production)
* localize NotImplementedError()
* Change '"%s" % e' to 'e'
* Fix for LP Bug #745152
* Merged waldon
* adding initial v1.1 rebuild action support
* Add ed leafe's code for the inject_file agent plugin method that somehow got lost (fixes bug 741246). Update TimeoutError string for i18n
* submitting a unit test for terminate_instance
* Update docstrings and spacing
* fixed ordering and spacing
* removed trailing whitespace
* updated per code review, replaced NotFound with exception.NotFound
* Merged Waldon's API code
* remove all references to image_type and change nova-manage upload to set container format more intelligently
* Rough implementation of rebuild_instance in compute manager
* adding v1.0 support for rebuild; adding compute api rebuild support
* Key type values in ec2_api off of container format
* Whoops
* Handle in vim.py
* Refixed unit test to check XML ns
* Merged with trunk (after faults change to return correct content-type)
* OpenStack API faults have been changed to now return the appropriated Content-Type header
* More tests that were checking for no-namespace
* Some tests actually tested for the lack of a namespace :-)
* pep8 fixes
* Avoid hard dependencies
* Implement quotas for the new v1.1 server metadata controller. Modified the compute API so that metadata is a dict (not an array) to ensure we are using unique key values for metadata. This is isn't explicit in the SPECs but it is implied by the new v1.1 spec since PUT requests modify individual items
* Add XML namespaces to the OpenStack API
* Merged with trunk
* Fixed mis-merge: OS API version still has to be v1.1
* Store socket_info as a dictionary rather than an array
* Merged with trunk
* Added synchronize_session parameter to a query in fixed_ip_disassociate_all_by_timeout() and fix #735974
* Key was converted through str() even if None, resulting in "None" being added to authorized_keys when no key was specified
* queues properly reconnect if rabbitmq is restarted
* Moving server update adminPass support to be v1.0-specific OS API servers update tests actually assert and pass now Enforcing server name being a string of length > 0
* Adding Content-Type code to openstack.api.versions.Versions wsgi.Application
* Fixes metadata for ec2_api to specify owner_id so that it filters properly
* Makes the image decryption code use the per-project private key to decrpyt uploaded images if use_project_ca is set. This allows the decryption code to work properly when we are using a different ca per project
* exception -> Fault
* Merged trunk
* Do not push 'None' to authorized_keys when no key is specified
* Add missing method that prevent HyperV compute nodes from starting up
* TopicAdapterConsumer uses a different callback model than TopicConsumer. This patch updates the console proxy to use this pattern
* merge trunk
* Uses the proc filesystem to check the volume size in volume smoketests so that it works with a very limited busybox image
* merged trunk
* The VNC Proxy is an OpenStack component that allows users of Nova to access their instances through a websocket enabled browser (like Google Chrome)
* make sure that flag is there in compute api
* fix localization for multiple replacement strings
* fix doc to refer to nova-vncproxy
* Support for volumes in the OpenStack API
* Deepcopy the images, because the string formatting transforms them in-place
* name, created_at, updated_at are required
* Merged with trunk
* "Incubator" is no more. Long live "contrib"
* Rename MockImageService -> FakeImageService
* Removed unused super_verbose argument left over from previous code
* Renamed incubator => contrib
* Wipe out the bad docstring on get_console_pool_info
* use project key for decrypting images
* Fix a docstring
* Found a better (?) docstring from get_console_pool_info
* Change volume so that it returns attachments in the same format as is used for the attachment object
* Removed commented-out EC2 code from volumes.py
* adding unit tests for describe_images
* Fix unit test to reflect fact that instance is no longer deleted, just marked SHUTOFF
* Narrowly focused bugfix - don't lose libvirt instances on host reboot or if they crash
* fix for lp742650
* Added missing blank line at end of multiline docstring
* pep8 fixes
* Reverted extension loading tweaks
* conversion of properties should set owner as owner_id not owner
* add nova-vncproxy to setup.py
* clarify test
* add line
* incorporate feedback from termie
* Make dnsmasq_interface configurable
* Stop nova-manage from reporting an error every time. Apparently except: catches sys.exit(0)
* add comment
* switch cast to a call
* move functions around
* move flags per termie's feedback
* initial unit test for describe images
* don't print the error message on sys.exit(0)
* added blank lines in between functions & removed the test_describe_images (was meant for a diff bug lp682888)
* Make Dnsmasq_interface configurable
* fix flag names
* Now checking that exists at least one network marked injected (libvirt and xenapi)
* This branch adds support for linux containers (LXC) to nova. It uses the libvirt LXC driver to start and stop the instance
* use manager pattern for auth token proxy
* Style fixes
* style fix
* Glance used to return None when a date field wasn't set, now it returns ''. Glance used to return dates in format "%Y-%m-%dT%H:%M:%S", now it returns "%Y-%m-%dT%H:%M:%S.%f"
* Fix up docstring
* Added content_type to OSAPI faults
* accidentally dropped a sentence
* Added checks that exists at least one network marked inhected in libvirt and xenapi
* Adds support for versioned requests on /images through the OpenStack API
* Import order
* Switch string concat style
* adding xml test case
* adding code to explicitly set the content-type in versions controller; updating test
* Merged trunk
* Added VLAN networking support for XenAPI
* pep8
* adding server name validation to create method; adding tests
* merge lp:nova
* use informative error messages
* adding more tests; making name checks more robust
* merge trunk
* Fix pep8 error
* Tweaking docstrings just in case
* Catch the error that mount might through a bit better
* sorted pep8 errors that were introduced during previous fixes
* merge trunk
* make all openstack status uppercase
* Add remove_volume to compute API
* Pass along the nbd flags although we dont support it just yet
* cleaned up var name
* made changes per code review: 1) removed import of image from objectstore 2) changed to comments instaed of triple quotes
* Displays an error message to the user if an exception is raised. This is vital because if logfile is set, the exception shows up in the log and the user has no idea something went wrong
* Yet more docstring fixes
* More style changes
* Merged with trunk
* Multi-line comments should end in a blankline
* add note per review
* More fixes to keep the stylebot happy
* Cleaned up images/fake.py, including move to Duplicate exception
* Code cleanup to keep the termie-bot happy
* displays an error message if a command fails, so that the user knows something went wrong
* Fixes volume smoketests to work with ami-tty
* address some of termie's recommendations
* add period, test github
* pep8
* osapi servers update tests actually assert now; enforcing server name being a string of length > 0; moving server update adminPass support to be v1.0-specific
* Moving shared_ip_groups controller to APIRouterV10 Replacing all shared_ip_groups contoller code with HTTPNotImplemented Adding shared_ip_groups testing
* fix docstrings
* Merged trunk
* Updated docstrings to satisfy
* Updated docstrings to satisfy
* merge trunk
* merge trunk
* minor fix and comment
* style fixes
* merging trunk
* Made param descriptions sphinx compatible
* Toss an __init__ in the test extensions dir. This gets it included in the tarball
* pep8
* Fix up libvirt.xml.template
* This fixes EC2 API so that it returns image displayName and description properly
* merged from trunk
* Moving backup_schedule route out of base router to OS API v1.0 All controller methods return HTTPNotImplemented to prevent further confusion Correcting tests that referred to incorrect url
* Fixed superfluous parentheses around locals()
* Added image name and description mapping to ec2 api
* use self.flags in virt test
* Fixed DescribeUser in the ec2 admin client to return None instead of an empty UserInfo object
* Remove now useless try/except block
* Dont make the test fail
* backup_schedule tests corrected; controller moved to APIRouterV10; making controller fully HTTPNotImplemented
* when image_id provided cannot be found, returns more informative error message
* Adds support for snapshotting (to a new image) in the libvirt code
* merge lp:nova
* More pep8 corrections
* adding shared_ip_groups testing; replacing all shared_ip_groups contoller code with HTTPNotImplemented; moving shared_ip_groups controller to APIRouterV10
* Merged trunk
* pep8 whitespace
* Add more unit tests for lxc
* Decided to not break old format so this should work with the way Glance used to work and the way glace works now..The best of both worlds?
* update glance params per review
* add snapshot support for libvirt
* HACKING update for docstrings
* merge trunk
* Fix libvirt merge mistake
* lock down requirements for change password
* merge trunk
* Changed TopicConsumer to TopicAdapterConsumer in bin/nova-ajax-console-proxy to allow it to start up once again
* style changes
* Removed iso8601 dep from pip-requires
* Merged trunk
* Removed extra dependency as per suggestion, although it fixes the issue much better IMO, we should be safe sticking with using the format from python's isoformat()
* Assume that if we don't find a VM for an instance in the DB, and the DB state is NOSTATE, that the db instance is in the process of being spawned, and don't mark it SHUTOFF
* merge with trunk
* Added MUCH more flexiable iso8601 parser dep for added stability
* Fix formatting of TODO and NOTE - should be a space after the #
* merge lp:nova
* Mixins for tests confuse pylint no end, and aren't necessary... you can stop the base-class from being run as a test by prefixing the class name with an underscore
* Merged the two periodic_tasks functions, that snuck in due to parallel merges in compute.manager
* Start up nova-api service on an unused port if 0 is specified. Fixes bug 744150
* Removed 'is not None' to do more general truth-checking. Added rather verbose testing
* Merged with trunk
* merge trunk
* merge trunk, fixed conflicts
* TopicConsumer -> TopicAdapterConsumer
* Fix typo in libvirt xml template
* Spell "warn" correctly
* Updated Authors file
* Removed extraneous white space
* Add friendlier message if an extension fails to include a correctly named class or factory
* addressed reviewers' concerns
* addressed termies review (third round)
* addressed termie's review (second round)
* Do not load extensions that start with a "_"
* addressed termies review (first round)
* Clarified note about scope of the _poll_instance_states function
* Fixed some format strings
* pep8 fixes
* Assume that if we don't find a VM for an instance in the DB, and the DB state is NOSTATE, that the db instance is in the process of being spawned
* pep8 fixes
* Added poll_rescued_instances to virt driver base class
* There were two periodic_tasks functions, due to parallel merges in compute.manager
* pep8 fixes
* Bunch of style fixes
* Fix utils checking
* use_ipv6 now passing to interfaces.template as first level variable in libvirt_conn
* Replaced import of an object with module import as per suggestion
* Updates to the newest version of nova.sh, which includes: * Installing new python dependencies * Allows for use of interfaces other than eth0 * Adds a run_detached mode for automated testing
* Now that it's an extension, it has to be v1.1. Also fixed up all the things that changed in v1.1
* merge trunk addressing Trey's comments
* Initial extensification of volumes
* Merged with trunk, resolved conflicts & code-flicts
* Removed print
* added a simple test for describe_images with mock for detail funciton
* merged trunk
* merge trunk
* merge lp:nova
* Adding links container to openstack api v1.1 servers entities
* Merged trunk
* Add license and copyright to nova/tests/api/openstack/extensions/__init__.py
* Fixed a typo on line 677 where there was no space between % and FLAGS
* fix typos
* updated nova.sh
* Added a flag to allow a user to specify a dnsmasq_config_file is they would like to fine tune the dnsmasq settings
* disk_format is now an ImageService property. Adds tests to prevent regression
* Merged trunk
* Merged trunk
* merging trunk
* merge trunk
* Merged trunk and fixed broken/conflicted tests
* - add a "links" container to versions entities for Openstack API v1.1 - add testing for the openstack api versions resource and create a view builder
* merging trunk
* This is basic network injection for XenServer, and includes:
* merging trunk
* Implement image metadata controller for the v1.1 OS API
* merging trunk
* Changed use_ipv6 passing to interfaces.template
* merging trunk, resolving conflicts
* Add a "links" container to flavors entities for Openstack API v1.1
* Toss an __init__ in the test extensions dir. This gets it included in the tarball
* Use metadata = image.get('properties', {})
* merge trunk
* Revert dom check
* merge trunk
* Fix unit tests w/ latest trunk merge
* merging trunk and resolving conflicts
* Fix up destroy container
* Fix up templating
* Implement metadata resource for Openstack API v1.1. Includes: -GET /servers/id/meta -POST /servers/id/meta -GET /servers/id/meta/key -PUT /servers/id/meta/key -DELETE /servers/id/meta/key
* Dont always assume qemu
* Removed partition from setup_container
* pep8 fix
* disk_format is now an ImageService property
* Restore volume state on migration failure
* merge trunk, add unit test
* merge trunk
* merge trunk addressing reviewer's comments
* clarify comment
* add documentation
* Empty commit?
* minor pep8 fix in db/fakes.py
* Support for markers for pagination as defined in the 1.1 spec
* add hook for osapi
* merge trunk
* Ports the Tornado version of an S3 server to eventlet and wsgi, first step in deprecating the twistd-based objectstore
* Merged with trunk Updated net injection for xenapi reflecting recent changes for libvirt
* Fix lp741415 by splitting arguments of _execute in the iSCSI driver
* make everything work with trunk again
* Support for markers for pagination as defined in the 1.1 spec
* add descriptive docstring
* don't require integrated tests to recycle connections
* remove twisted objectstore
* port the objectstore tests to the new tests
* update test base class to monkey patch wsgi
* rename objectstore tests
* port s3server to eventlet/wsgi
* add s3server, pre-modifications
* merge trunk
* Added detail keywork and i18n as per suggestions
* incorporate feedback from termie
* Implementation of blueprint hypervisor-vmware-vsphere-support. (Link to blueprint: https://blueprints.launchpad.net/nova/+spec/hypervisor-vmware-vsphere-support)
* fix typo
* Addressing Trey's comments. Removed disk_get_injectables, using _get_network_info's return value
* Adds serverId to OpenStack API image detail per related_image blueprint
* Fix for bug #740947 Executing parted with sudo in _write_partition (vm_utils.py)
* Implement API extensions for the Openstack API. Based on the Openstack 1.1 API the following types of extensions are supported:
* Merging trunk
* Adds unit test coverage for XenAPI Rescue & Unrescue
* libvirt driver multi_nic support. In this phase libvirt can work with and without multi_nic support, as in multi_nic support for xenapi: https://code.launchpad.net/~tr3buchet/nova/xs_multi_nic/+merge/53458
* Merging trunk
* Review feedback
* Merged trunk
* Additions to the Direct API:
* Merged trunk
* Added test_get_servers_with_bad_limit, test_get_servers_with_bad_offset and test_get_servers_with_bad_marker
* pep8 cleanups
* Added test_get_servers_with_limit_and_marker to test pagination with marker and limit request params
* style and spacing fixed
* better error handling and serialization
* add some more docs and make it more obvious which parts are examples
* add an example of a versioned api
* add some more docs to direct.py
* add Limited, an API limiting/versioning wrapper
* improve the formatting of the stack tool
* support volume and network in the direct api
* Merged with trunk, fix problem with behaviour of (fake) virt driver when instance doesn't reach scheduling
* In this branch we are forwarding incoming requests to child zones when the requested resource is not found in the current zone
* trunk merge
* Fixes a bug that was causing tests to fail on OS X by ensuring that greenthread sleep is called during retry loops
* Merged trunk
* Fix some errors that pylint found in nova/api/openstack/servers.py
* Fix api logging to show proper path and controller:action
* Merged trunk
* Pylint 'Undefined variable' E0602 error fixes
* Made service_get_all()'s disabled parameter default to None. Pass False for enabled services; True for disabled services. Calls to this method have been updated to remain consistent
* Merged with trunk
* Reconcile tests with latest trunk merges
* Merged trunk and resolved conflict in nova/db/sqlalchemy/api.py
* Don't try to parse the empty string as a datetime
* change names for consistency with existing db api
* Merged with trunk
* Forgot one set of flags
* Paginated results should not include the item starting at marker. Improved implementation of common.limited_by_marker as suggested by Matt Dietz. Added flag osapi_max_limit
* Detect if user is running the default Lucid version of libvirt, and give a nicer error message
* Updated to use new APIRouterV11 class in tests
* Fix lp741514 by declaring libvirt_type in nova-manage
* Docstring fixes
* get image metadata tests working after the datetime interface change in image services
* adding versioned controllers
* Addressed issues raised by Rick Harris' review
* Stubbing out utils.execute for migrate tests
* Aggregates capabilities from Compute, Network, Volume to the ZoneManager in Scheduler
* merged trunk r864
* removing old Versions application and correcting fakes to use new controller
* Renamed __image and __compute to better describe their purposes. Use os.path.join to create href as per suggestion. Added base get_builder as per pychecker suggestion
* merging trunk r864
* trunk merged. conflicts resolved
* Merged trunk
* merge trunk
* merge trunk
* Small refactor
* Merged trunk and fixed tests
* Couple of pep8 fixes
* pep8 clearing
* making servers.generate_href more robust
* merging trunk r863
* Fixes lp740322: cannot run test_localization in isolation
* couple of bugs fixed
* Merged trunk
* Dont use popen in dettaching the lxc loop
* Fix up formatting of libvirt.xml.template
* trunk merge
* fix based on sirp's comments
* Grrr... because we're not recycling the API yet, we have to configure flags the first time it's called
* merge trunk
* Fake out network service as well, otherwise we can't terminate the instance in test_servers now that we've started a compute service
* merge trunk
* Sorted out a problem occurred with units tests for VM migration
* pep8 fixes
* Test for attach / detach (and associated fixes)
* Pass a fake timing source to live_migration_pre in every test that expectes it to fail, shaving off a whole minute of test run time
* merge trunk
* Poll instance states periodically, so that we can detect when something changes 'behind the scenes'
* Merged with conflict and resolved conflict (with my own patch, no less)
* Added simple nova volume tests
* Created simple test case for server creation, so that we can have something to attach to..
* Merged with trunk
* Added volume_attachments
* Declare libvirt_type to avoid AttributeError in live_migration
* minor tweak from termie feedback
* Added a mechanism for versioned controllers for openstack api versions 1.0/1.1. Create servers in the 1.1 api now supports imageRef/flavorRef instead of imageId/flavorId
* Fixed the docstring for common.get_id_from_href
* better logging of exceptions
* Merged trunk
* Merged trunk
* Fix issues with certificate updating & whitespace removal
* Offers the ability to run a periodic_task that sweeps through rescued instances older than 24 hours and forcibly unrescues them
* Merged trunk
* Added hyperv stub
* Don't try to parse a datetime if it is the empty string (or None)
* Remove a blank line
* pep8 fix
* Split arguments of _execute in the iSCSI driver
* merge trunk
* Added revert_resize to base class
* Addressing Rick Clark's comments
* Merged with lp:nova, fixed conflicts
* boto_v6 module is imported if the flag "use_ipv6" is set to True
* pep8 fixes, backported some important fixes that didn't make it over from my testing system :-(
* Move all types of locking into utils.synchronize decorator
* Doh! Missed two places which were importing the old driver location
* Review feedback
* make missing noVNC error condition a bit more fool-proof
* clean some pep8 issues
* general cleanup, use whitelist for webserver security
* Better method name
* small fix
* Added docstring
* Updates the previously merged xs_migration functionality to allow upsizing of the RAM and disk quotas for a XenServer instance
* Fix lp735636 by standardizing the format of image timestamp properties as datetime objects
* migration gateway_v6 to network_info
* merge prop fixes
* Should not call super __init__ twice in APIRouter
* fix utils.execute retries for osx
* Keep the fallback code - we may want to do better version checking in future
* Give the user a nicer error message if they're using the Lucid libvirt
* Only run periodic task when rescue_timeout is greater than 0
* Fixed some typos
* Forgot extraneous module import again
* Merged trunk
* Forgot extraneous module import
* Automatically unrescue instances after a given timeout
* trunk merge
* indenting cleanup
* fixing some dictionary get calls
* Unit test cleanup
* one more minor fix
* Moving the migration yet again
* xml template fixed
* merge prop changes
* pep8 fixed
* trunk merged
* added myself to authors file
* Using super to call parent _setup_routes in APIRouter subclasses
* Merged trunk
* pep8 fix
* Implement v1.1 image metadata
* This branch contains the fix for bug #740929 It makes sure cidr_v6 is not null before building the 'ip6s' key in the network info dictionary. This way utils.to_global_ipv6 does not fail because of cidr==None
* review comments fixed
* add changePassword action to os api v1.1
* Testing of XML and JSON for show(), and conformance to API spec for JSON
* Fixed tests
* Merged trunk
* Removed some un-needed code, and started adding tests for show(), which I forgot\!
* id -> instance_id
* Checking whether cidr_v6 is not null before populating ipv6 key in network info map (VMOps._get_network_info)
* Executing parted with sudo in _write_partition
* We update update_ra method to synchronize, in order to prevent crash when we request multiple instance at once
* merged with trunk Updated xenapi network injection for IPv6 Updated unit tests
* merge trunk
* merge trunk
* removed excess debug line
* more progress
* use the nova Server object
* separating out components of vnc console
* Earlier versions of the python libvirt binding had getVersion in the libvirt namespace, not on the connection object. Check both
* Report the exception (happens when can't import libvirt)
* Use subset_dict
* Removing dead code
* Touching up comment
* Merging trunk
* Pep8 fixes
* Adding tests for owned and non-existent images
* More small cleanups
* Fix for #740742 - format describe_instance_output correctly to prevent errors in dashboard
* Cleaning up make_image_fixutres
* Merged with lp:nova
* Small cleanup of openstack/images.py
* Fixed up the new location of driver.py
* Fix for lp740742 - format describe_instance_output correctly to prevent errors in dashboard
* Merged with lp:nova
* Filtering images by user_id now
* Clarified my "Yuk" comment
* Cleaned up comment about virsh domain.info() return format
* Added space in between # and TODO in #TODO
* Added note about the advantages of using a type vs using a set of global constants
* Filled out the base-driver contract, so it's not a false-promise
* Enable flat manager support for ipv6
* Adding a talk bubble to the nova.openstack.org site that points readers to the 2011.1 site and the docs.openstack.org site - similar to the swift.openstack.org site. I believe it helps people see more sites are available, plus they can get to the Bexar site if they want to. Going forward it'll be nice to use this talk bubble to point people to the trunk site from released sites
* Correctly imports greenthread in libvirt_conn.py. It is used by live_migrate()
* Forgot this in the rename of check_instance -> check_isinstance
* Test the login behavior of the OpenStack API. Uncovered bug732866
* trunk merge
* Renamed check_instance -> check_isinstance to make intent clearer
* Fix some crypto strangeness (\n in file_name field of certificates, wrong IMPL method for certificate_update)
* Added note agreeing with Brian Lamar that the namespace doesn't belong in wsgi
* Fix to avoid db migration failure in virtualenv
* Fixed up unit tests and direct api that was also calling _serialize (naughty!)
* Fix the describe_vpns admin api call
* pep8 and fixed up zone-list
* Support setting the xmlns intelligently
* get_all cleanup
* Refactored out _safe_translate code
* Set XML namespace when returning XML
* Fix for LP Bug #704300
* Fix a typo in the ec2 admin api
* typo fix
* Pep8 fix
* Merging trunk
* make executable
* Adding BASE_IMAGE_ATTRS to ImageService
* intermediate progress on vnc-nova integration. checking in to show vish
* add in eventlet version of vnc proxy
* Updating doc strings in accordance with PEP 257. Fixing order of imports in common.py
* one more copyright fix
* pep8 stupidness
* Tweak
* fixing copyright
* tweak
* tweak
* Whoops
* Changed default for disabled on service_get_all to None. Changed calls to service_get_all so that the results should still be as they previously were
* Now using urlparse to parse a url to grab id out of it
* Resolved conflicts
* Fix
* Remove unused global semaphore
* Addressed reviewer's comments
* pep8 fix
* Apparantly a more common problem than first thought
* Adding more docstrings. image_id and instance_type fields of an instance will always exist, so no reason to check if keys exist
* Pass a fake timing source to test_ensure_filtering_rules_for_instance_timeout, shaving off 30 seconds of test run time
* pep8
* Merged trunk
* Add a test for leaked semaphores
* Remove checks in _cache_image tests that were too implementation specific
* adding view builder tests
* Add correct bug fixing metadata
* When updating or creating set 'delete = 0'. (thus reactivating a deleted row) Filter by 'deleted' on delete
* merging trunk r843
* making Controller._get_flavors is_detail a keyword argument
* merging trunk r843
* Fix locking problem in security group refresh code
* merging trunk r843
* Add unit test and code updates to ensure that a PUT requests to create/update server metadata only contain a single key
* Add call to unset all stubs
* IptablesManager.semaphore is no more
* Get rid of IptablesManager's explicit semaphore
* Add --fixes lp: metadata
* Convert _cache_image to use utils.synchronized decorator. Disable its test case, since I think it is no longer needed with the tests for synchronized
* Make synchronized decorator not leak semaphores, at the expense of not being truly thread safe (but safe enough for Eventlet style green threads)
* merge trunk
* Wrap update_ra in utils.synchronized
* Make synchronized support both external (file based) locks as well as internal (semaphore based) locks. Attempt to make it native thread safe at the expense of never cleaning up semaphores
* merge with trunk
* vpn changes
* added zone routing flag test
* routing test coverage
* routing test coverage
* xenapi support for multi_nic. This is a phase of multi_nic which allows xenapi to work as is and with multi_nic. The other virt driver(s) need to be updated with the same support
* better comments. First redirect test
* better comments. First redirect test
* Remove _get_vm_opaque_ref() calls in rescue/unrescue
* Remove dupe'd code
* Wrap update_dhcp in utils.synchronized
* if fingerprint data not provided, added logic to calculate it using the pub key
* get rid of another datetime alias
* import greenthread in libvirt
* merge lp:nova
* make bcwaldon happy
* fix licenses
* added licenses
* wrap and log errors getting image ids from local image store
* merge lp:nova
* merging trunk
* Fix for LP Bug #739641
* pep8; various fixes
* Provide more useful exception messages when unable to load the virtual driver
* Added Gabe to Authors file. He helped code this up too
* Added XenAPI rescue unit tests
* added an enumerate to track device in vmops.create_vifs()
* pep8
* Openstack api 1.0 flavors resource now implemented to match the spec
* more robust extraction of arguments
* Updated comment per the extension naming convention we actually use
* Added copyright header
* Fix pep8 issues in nova/api/openstack/extensions.py
* Fix limit unit tests (reconciles w/ trunk changes)
* Changed fixed_range (CIDR) to be required in the nova-manage command; changed default num_networks to 1
* merging trunk r837
* zones3 and trunk merge
* Added space
* trunk merge
* remove scheduler.api.API. naming changes
* Changed error to TypeError so that we get the arguments list
* Added my name to Authors Added I18n for network create string
* merge with trunk
* merge trunk
* merge trunk
* merge trunk
* Add bug metadata
* Wrap update_dhcp in utils.synchronized
* fixes nova-manage instance_type compatibility with postgres db
* Tell PyLint not to complain about the "_" function
* Make smoketests' exit code reveal whether they were succesful
* pep8
* Added run_instances method to the connection.py of the contrib/boto_v6/ec2 which would return ReservationV6 object instead of Reservation in order to access attribute dns_name_v6 of an instance
* cleanup another inconsistent use of 1 for True in nova-manage
* Changed Copyright to NTT for newly added files for flatmanager ipv6
* merge trunk
* * committing ovs scripts
* fix nova-manage instance_type list for postgres compatibility
* fixed migration instance_types migration to support postgres correctly
* comment more descriptive
* Seriously?
* Fixed netadmin smoketests for ipv6
* Merged trunk
* Better errors when virt driver isn't loaded
* merge lp:nova
* fix date formatting in images controller show
* huh
* fix ups
* merge trunk
* uses True/False instead of 1/0 for Postgres compatibility
* cleaned up tests stubs that were accidentally checked in
* works again. woo hoo
* created api endpoint to allow uploading of public key
* api decorator
* Cleanup of FakeAuthManager
* Replaced all pylint "disable-msg=" with "disable=" and "enable-msg=" with "enable="
* Change cloud.id_to_ec2_id to ec2utils.id_to_ec2_id. Fixes EC2 API error handling when invalid instances and volume names are specified
* A few more single-letter variable names bite the dust
* Re-implementation (or just implementation in many cases) of Limits in the OpenStack API. Limits is now available through /limits and the concept of a limit has been extended to include arbitrary regex / http verb combinations along with correct XML/JSON serialization. Tests included
* Avoid single-letter variable names
* auth_data is a list now (thanks Rick!)
* merge with trunk
* Mark instance metadata as deleted when we delete the instance
* results
* fixed up novaclient usage to include managers
* Added test case
* Minor fixes to replace occurances of "VI" by "VIM" in 2 comments
* whoopsy2
* whoopsy
* Fixed 'Undefined variable' errors generated by pylint (E0602)
* Merged trunk
* Change cloud.id_to_ec2_id to ec2utils.id_to_ec2_id. Fixes EC2 API error handling when invalid instances and volume names are specified
* enable-msg -> enable
* disable-msg -> disable
* enable_zone_routing flag
* PEP-8
* Make flag parsing work again
* Using eventlets greenthreads for optimized image processing. Fixed minor issues and style related nits
* Fixed issue arisen from recent feature update (utils.execute)
* Make proxy.sh work with both openbsd and traditional variants of netcat
* Query the size of the block device, not the size of the filesystem
* merge trunk
* Ensuring kernel/ramdisk files are always removed in case of failures
* merge trunk
* merge trunk
* Implement metadata resource for Openstack API v1.1. Includes: -GET /servers/id/meta -POST /servers/id/meta -GET /servers/id/meta/key -PUT /servers/id/meta/key -DELETE /servers/id/meta/key
* Make "ApiError" the default error code for ApiError instances, rather than "Unknown."
* When changing the project manager, if the new manager is not yet a project member, be sure to make them be a project member
* Make the rpc cast/call debug calls show what topic they are sending to. This aides in debuugging
* Final touches and bug/pep8 fixes
* Support for markers for pagination as defined in the 1.1 spec
* Merged trunk
* Become compatible with ironcamel and bcwaldon's implementations for standardness
* pep8
* Merged dependant branch lp:~rackspace-titan/nova/openstack-api-versioned-controllers
* Updated naming, removed some prints, and removed some invalid tests
* adding servers container to openstack api v1.1 servers entities
* decorator more generic now
* Images now v1.1 supported...mostly
* fixed up bzr mess
* Fix for LP Bug #737240
* refactored out middleware, now it's a decorator on service.api
* Fix for LP Bug #737240
* Add topic name to cast/call logs
* Changing project manager should make sure that user is a project member
* Invert some of the original logic and fix a typo
* Make the smoketests pep8 compliant (they weren't when I started working on them..)
* Update the Openstack API to handle case where personality is set but null in the request to create a server
* Fix a couple of things that assume that libvirt == kvm/qemu
* Made fixed_range a required parameter for nova-manage network create. Changed default num_networks to 1; 1000 seems large
* Fix a number of place in the volume driver where the argv hadn't been fully split
* fix for lp712982, and likely a variety of other dashboard error handling issues. This fix simply causes the default error code for ApiError to be 'ApiError' rather than 'Unknown', which makes dashboard handle the error gracefully, and makes euca error output slightly prettier
* Fix mis-merge
* pep8 is hard
* syntax error
* create vifs before inject network info to remove rxtx_cap from network info (don't need to inject it)
* Make utils.execute not overwrite std{in,out,err} args to Popen on retries. Make utils.execute reject unknown kwargs
* merged trunk, merged qos, slight refactor regarding merges
* - general approach for openstack api versioning - openstack api version now preserved in request context - added view builder classes to handle os api responses - added imageRef and flavorRef to os api v1.1 servers - modified addresses container structure in os api v1.1 servers
* Pep8
* Test changes
* pep8
* Adjust test cases
* pep8
* merge
* Mark instance metadata as deleted when we delete the instance
* Backfix of bugfix of issue blocking creating servers with metadata
* Better comment for fault. Improved readability of two small sections
* Add support for network QoS (ratelimiting) for XenServer. Rate is pulled from the flavor (instance_type) when constructing a vm
* pep8
* I suck at merging
* Now returns a 400 for a create server request with invalid hrefs for imageRef/flavorRef values. Also added tests
* moving Versions app out of __init__.py into its own module; adding openstack versions tests; adding links to version entities
* fixed code formatting nit
* handle create and update requests, and update the base image service documentation to reflect the (defacto) behavior
* Move the check for None personalities into the create method
* Get the migration out
* get api openstack test_images working
* merge trunk
* Improved exception handling
* better implementation of try..except..else
* merging parent branch lp:~bcwaldon/nova/osapi-flavors-1_1
* merging parent branch lp:~rackspace-titan/nova/openstack-api-version-split
* iptables filter firewall changes merged
* merged trunk
* pep8
* adding serialization_metadata to encode links on flavors
* merge with libvirt_multinic_nova
* pep8
* teach glance image server get to handle timestamps
* merge trunk
* merge trunk
* fixes for NWFilterFirewall and net injection
* moving code out of try/except that would never trigger NotFound
* handle timestamps in glance service detail
* fixed IpTablesFirewal
* Fixes lp736343 - Incorrect mapping of instance type id to flavor id in Openstack API
* Comparisons to None should not use == or !=
* Pep8 error, oddly specific to pep8 v0.5 < x > v0.6
* Remove unconditional raise, probably left over from debugging
* Mapping the resize status
* Mapping the resize status
* Fixed pep8 violation
* adding comments; removing returns from build_extra; removing unnecessary backslash
* refactor to simpler implementation
* Foo
* glance image service show testcases
* oh come on
* refactoring
* Add tests and code to handle multiple ResponseExtension objects
* Just use 'if foo' instead of 'if len(foo)'. It will fail as spectacularly if its not acting on a sequence anyways
* bugfix
* Remove unconditional raise, probably left over from debugging
* No need to modify this test case function as well
* refactored: network_info creation extracted to method
* Call _create_personality_request_dict within the personalities_null test
* Foo
* more pep8 fixes
* Switch back to 'is not None' for personality_files check. (makes mark happy)
* pep8 fixes
* 1) Update few comments where whitespace is missing after '#' 2) Update document so that copy right notice doesn't appear in generated document 3) Now using self.flag(...) instead of setting the flags like FLAGS.vmwareapi_username by direct assignment. 4) Added the missing double quote at the end a string in vim_util.py
* more pep8 fixes
* Fix up tests
* Replaced capability flags with List
* Fix more pep8 errors
* Remove me from mailmap
* Fix up setup container
* Merged trunk
* Update the Openstack API to handle case where personality is set but null in the request to create a server
* Make smoketests' exit code reveal whether they were succesful
* merge with trunk. moved scheduler_manager into manager. fixed tests
* Set nbd to false when mounting the image
* Fixed typo when I was trying to add test cases for lxc
* Remove target_partition for setup_container but still hardcode because its needed when you inject the keys into the image
* Remove nbd=FLAGS.use_cow_images for destroy container
* Update mailmap
* Fix a number of place in the volume driver where the argv hadn't been fully split
* Fix pep8 errors
* Update authors again
* Improved exception handling: - catching appropriate errors (OSError, IOError, XenAPI.Failure) - reduced size of try blocks - moved exception handling code in separate method - verifing for appropriate exeception type in unit tests
* get_console_output is not supported by lxc and libvirt
* Update Authors and testsuite
* Comparisons to None should not use == or !=
* Make error message match the check
* Setting the api verion in the request in the auth middle is no longer needed. Also, common.get_api_version is no longer needed. As Eric Day noted, having versioned controllers will make that unnecessary
* moving code out of try/except that would never trigger NotFound
* Added mechanism for versioned controllers for openstack api versions 1.0/1.1. Create servers in the 1.1 api now supports imageRef/flavorRef instead of imageId/flavorId
* fix up copyright
* removed dead method
* pep8
* pep8
* Remerge trunk
* cleanup
* added in network qos support for xenserver. Pull qos settings from flavor, use when creating instance
* moved scheduler API check into db.api decorator
* Add basic tests for lxc containers
* Revert testsuite changes
* MErge trunk
* Fix a few of the more obvious non-errors while we're in here
* hacks in place
* Fix the errors that pylint was reporting on this file
* foo
* foo
* commit before monster
* Fix __init__ method on unit tests (they take a method_name kwarg)
* Don't warn about C0111 (No docstrings)
* In order to disable the messages, we have to use disable, not disable-msg
* Avoid mixins on image tests, keeping pylint much happier
* Use _ trick to hide base test class, thereby avoiding mixins and helping PyLint
* hurr
* hurr
* get started testing
* foo
* Don't complain about the _ function being used
* Again
* pep8
* converted new lines from CRLF to LF
* adding bookmarks links to 1.1 flavor entities
* Reverting
* Log the use of utils.synchronized
* expanding osapi flavors tests; rewriting flavors resource with view builders; adding 1.1 specific links to flavors resources
* Dumb
* Unit test update
* Fix lp727225 by adding support for personality files to the openstack api
* Changes
* fixes bug 735298: start of nova-compute not possible because of wrong xml paths to the //host/cpu section in "virsh capabilities", used in nova/virt/libvirt_conn.py
* update image service documentation
* merge lp:nova and resolve conflicts
* User ids are strings, and are not necessarily == name. Also fix so that non-existent user gives a 404, not a 500
* Fudge
* Keypairs are not required in the OpenStack API; don't require them!
* Merging trunk
* Add missing fallback chain for ipv6
* Typo fix
* fixed pep8 issue
* chchchchchanges
* libvirt template and libvirt_conn.spawn modified in way that was proposed for xenapi multinic support
* Re-commit r805
* Re-commit r804
* Refactored ZoneRedirect into ZoneChildHelper so ZoneManager can use this too
* Don't generate insecure passwords where it's easy to use urandom instead
* merging openstack-api-version-split
* chchchchchanges
* chchchchchanges
* Fixes euca-get-ajax-console returning Unknown Error, by using the correct exception in get_open_port() logic. Patch from Tushar Patil
* chchchchchanges
* Revert commit that modified CA/openssl.cnf.tmpl
* Comment update
* Derped again
* Move mapper code into the _action_ext_controllers and _response_ext_controllers methods
* The geebees
* forgot to return network info - teehee
* refactored, bugfixes
* merge trunk
* moving code out of try/except that would never trigger NotFound
* merge trunk
* Logging statements
* added new class Instances for managaging instances added new method list in class Instances:
* tweak
* Stuff
* Removing io_util.py. We now use eventlets library instead
* Some typos
* * Updated document vmware_readme.rst to mention VLAN networking * Corrected docstrings as per pep0257 recommentations. * Stream-lined the comments. * Updated code with locals() where ever applicable. * VIM : It stands for VMware Virtual Infrastructure Methodology. We have used the terminology from VMware. we have added a question in FAQ inside vmware_readme.rst in doc/source * New fake db: vmwareapi fake module uses a different set of fields and hence the structures required are different. Ex: bridge : 'xenbr0' does not hold good for VMware environment and bridge : 'vmnic0' is used instead. Also return values varies, hence went for implementing separate fake db. * Now using eventlet library instead and removed io_utils.py from branch. * Now using glance.client.Client instead of homegrown code to talk to Glance server to handle images. * Corrected all mis-spelled function names and corresponding calls. Yeah, an auto-complete side-effect!
* Implement top level extensions
* Added i18n to error message
* Checks locally before routing
* Really fix testcase
* More execvp fallout
* Fix up testsuite for lxc
* Error codes handled properly now
* merge trunk
* Adding unit test
* Fix instance creation fail under use_ipv6=false and FlatManager
* pep8 clean
* Fix a couple of things that assume that libvirt == kvm/qemu
* Updating gateway_v6 in _on_set_network_host() is not required for FlatManager
* added correct path to cpu information (tested on a system with 1 installed cpu package)
* Fix unknown exception error in euca-get-ajax-console
* fixed pep8 errors (with version 0.5.0)
* Use integer ids for (fake) users
* req envirom param 'nova.api.openstack.version' should be 'api.version'
* pep8 fixes
* Fixed DescribeUser in ec2 admin client
* openstack api 1.0 flavors resource now implemented; adding flavors request value testing
* response working
* Added tests back for RateLimitingMiddleware which now throw correctly serialized errors with correct error codes
* Add ResponseExtensions
* revised per code review
* first pass openstack redirect working
* Adding newlines for pep8
* Removed VIM specific stuff and changed copyright from 2010 to 2011
* Limits controller and testing with XML and JSON serialization
* adding imageRef and flavorRef attributes to servers serialization metadata
* Merged with trunk (and brian's previous fixes to fake auth)
* Plugin
* As suggested by Eric Day: * changed request.environ version key to more descriptive 'api.version' * removed python3 string formatting * added licenses to headers on new files
* Tweak
* A few fixes
* pep8
* merge lp:nova
* ignore differently-named nodes in personality and metadata parsing
* wrap errors getting image ids from local image store
* Moving the migration again
* Updating paste config
* pep8
* internationalization
* Per Eric Day's suggest, the verson is not store in the request environ instead of the nova.context
* s/onset_files/injected_files/g
* pep8 fixes
* Add logging to lock check
* Now that the fix for 732866, stop working around the bug
* Major cosmetic changes to limits, but little-to-no functional changes. MUCH better testability now, no more relying on system time to tick by for limit testing
* Merged with trunk to get fix for bug 732866
* Merged trunk
* modifying paste config to support v1.1; adding v1.1 entry in versions resource ( GET /)
* Fixed lp732866 by catching relevant `exception.NotFound` exception. Tests did not uncover this vulnerability due to "incorrect" FakeAuthManager. I say "incorrect" because potentially different implementations (LDAP or Database driven) of AuthManager might return different errors from `get_user_from_access_key`
* refactor onset_files quota checking
* Code clean up. Removing _decorate_response methods. Replaced them with more explicit methods, _build_image, and _build_flavor
* Use random.SystemRandom for easy secure randoms, configurable symbol set by default including mixed-case
* merge lp:nova
* Support testing the OpenStack API without key_pairs
* merge trunk
* Fixed bugs in bug fix (plugin call)
* adding missing view modules; modifying a couple of servers tests to use enumerate
* just fixing a small typo in nova-manage vm live-migration
* exception fixup
* Make Authors check account for tests being run with different os.getcwd() depending on how they're run. Add missing people to Authors
* Removed duplicated tests
* PEP8 0.5.0 cleanup
* Really delete the loop
* Add comments about the destroy container function
* Mount the right device
* Merged trunk
* Always put the ipv6 fallback in place. FLAGS.use_ipv6 does not exist yet when the firewall driver is instantiated and the iptables manager takes care not to fiddle with ipv6 if not enabled
* merged with trunk and removed conflicts
* Merging trunk
* Reapplied rename to another file
* serverId returned as int per spec
* Reapplied rename of Openstack -> OpenStack. Easier to do it by hand than to ask Bazaar to do it
* Merged with trunk. Had to hold bazaar's hand as it got lost again
* Derive unit test from standard nova.test.TestCase
* pep8 fixes
* adding flavors and images barebones view code; adding flavorRef and imageRef to v1.1 servers
* Fixed problem with metadata creation (backported fix)
* Clarify the logic in using 32 symbols
* moving addresses views to new module; removing 'Data' from 'DataViewBuilder'
* Don't generate insecure passwords where it's easy to use urandom instead
* Added a views package and a views.servers module. For representing the response object before it is serialized
* Make key_pair optional with OpenStack API
* Moved extended resource code into the extensions.py module
* Moving fixtures to a factory
* Refactor setup contianer/destroy container
* Fixing API per spec, to get unit-tests to pass
* Implements basic OpenStack API client, ready to support API tests
* Fix capitalization of ApiError (it was mistakenly called APIError)
* added migration to repo
* Clarified message when a VM is not running but still in DB
* Implemented Hyper-V list_instances_detail function. Needs a cleanup by someone that knows the Hyper-V code
* So the first of those tests doesn't pass. Removing as it looks like it was meant to be deleted
* Added test and fixed up code so that it works
* Fix for LP Bug #704300
* fixed keyword arg error
* pep8
* added structure to virt.xenapi.vmops to support network info being passed in
* Removed duplicated test, renamed same-named (but non-identical) tests
* merge trunk
* PEP8 cleanup
* Fixes other half of LP#733609
* Initial implementation of refresh instance states
* Add missing fallback chain for ipv6
* The exception is called "ApiError", not "APIError"
* Implement action extensions
* Include cpuinfo.xml.template in tarball
* Adding instance_id as Glance image_property
* Add fixes metadata
* Include cpuinfo.xml.template in tarball
* Merged test_network.py properly. Before I had deleted this file and added again, but this file status should be modified when you see the merged difference
* removed conflicts and merged with trunk
* Create v1_0 and v1_1 packages for the openstack api. Added a servers module to each. Added tests to validate the structure of ip addresses for a 1.1 request
* committing to share
* small typo in nova-manage vm live-migration
* NTT's live-migration branch, merged with trunk, conflicts resolved, and migrate file renamed
* Reverted unmodified files
* Reverted unmodified files
* Only include kernel and ramdisk ID in meta-data output if they are actually set
* Test fixes and some typos
* Test changes
* Migration moved again
* Compute test
* merge trunk
* merge trunk
* Make nova-dhcpbridge output lease information in dnsmasq's leasesfile format
* Merged my doc changes with trunk
* Fixed pep8 errors
* Fixed failing tests in test_xenapi
* Fixes link to 2011.1 instad of just to trunk docs
* fixes: 733137
* Add a unit test
* Make utils.execute not overwrite std{in,out,err} args to Popen on retries. Make utils.execute reject unknown kwargs
* Removed excess LOG.debug line
* merge trunk
* The extension name is constructed from the camel cased module_name + 'Extension'
* Merged with trunk
* Fix instructions for setting up the initial database
* Fix instructions for setting up the initial database
* merged with latest trunk and removed unwanted files
* Removed _translate_keys() functions since it is no longer used. Moved private top level functions to bottom of module
* Use a consistent naming scheme for XenAPI variables
* oops
* Review feedback
* Review feedback
* Review feedback
* Some unit tests
* Change capitalization of Openstack to OpenStack
* fixed conflicts after merging with trunk with 787
* Adding a sidebar element to the nova.openstack.org site to point people to additional versions of the site
* oops
* Review feedback
* Replace raw SQL calls through session.execute() with SQLAlchemy code
* Review feedback
* Remove vish comment
* Remove race condition when refreshing security groups and destroying instances at the same time
* Removed EOL whitespace in accordance with PEP-8
* Beginning of cleanup of FakeAuthManager
* Make the fallback value None instead of False
* Indentation adjustment (cosmetical)
* Fixed lp732866 by catching relevant `exception.NotFound` exception. Tests did not uncover this vulnerability due to "incorrect" FakeAuthManager. I say "incorrect" because potentially different implementations (LDAP or Database driven) of AuthManager might return different errors from `get_user_from_access_key`
* Merged trunk
* This change adds the ability to boot Windows and Linux instances in XenServer using different sets of vm-params
* merge trunk
* New migration
* Passes net variable as value of keyword argument process_input. Prior to the execvp patch, this was passed positionally
* Changes the output of status in describe_volumes from showing the user as the owner of the volume to showing the project as the owner
* Added support for ips resource: /servers/1/ips Refactored implmentation of how the servers response model is generated
* merge trunk
* Adds in multi-tenant support to openstack api. Allows for multiple accounts (projects) with admin api for creating accounts & users
* merge trunk
* remerge trunk (again). fix issues caused by changes to deserialization calls on controllers
* Add config for osapi_extensions_path. Update the ExtensionManager so that it loads extensions in the osapi_extensions_path
* process_input for tee. fixes: 733439
* Minor stylistic updates affecting indentation
* Make linux_net ensure_bridge commands that add and remove ip addr's from devices/bridges work with with the latest utils.execute method (execvp)
* Added volume api from previous megapatch
* Made changes to xs-ipv6 code impacted because of addition of flatmanger ipv6 support
* Need to set version to '1.0' in the nova.context in test code for tests to be happy
* merge from trunk..
* Discovered literal_column(), which does exactly what I need
* Merged trunk
* Further vmops cleanup
* cast execute commands to str
* Remove broken test. At least this way, it'll actually fix the problem and be mergable
* * Updated the readme file with description about VLAN Manager support & guest console support. Also added the configuration instructions for the features. * Added assumptions section to the readme file
* * Modified raise statements to raise nova defined Exceptions. * Fixed Console errors and in network utils using HostSystem instead of Datacenter to fetch network list * Added support for vmwareapi module in nova/virt/connection.py so that vmware hypervisor is supported by nova * Removing self.loop to achieve synchronization
* merge trunk
* Moved vlan_interface flag in network.manager removed needless carriage return in vm_ops
* Use self.instances.pop in unfilter_instance to make the check/removal atomic
* Make Authors check account for tests being run with different os.getcwd() depending on how they're run. Add missing people to Authors
* Make linux_net ensure_bridge commands that add and remove ip addr's from devices/bridges work with with the latest utils.execute method (execvp)
* _translate_keys now needs one more argument, the request object
* Added version attribute to RequestContext class. Set the version in the nova.context object at the middleware level. Prototyped how we can serialize ip addresses based on the version
* execvp: fix params
* merge lp:nova
* switch to a more consistent usage of onset_files variable names
* re-added a test change I removed thinking it was related to removed code. It wasn't :>
* merge trunk
* Document known bug numbers by the code which is degraded until the bugs are fixed
* fix minor typo
* Fix a fer nits jaypipes found in review
* Pep8 / Style
* Re-removed the code that was deleted upstream but somehow didn't get merged in. Bizarre!
* More resize
* Merged with upstream
* pep8 fun
* Test login. Uncovered bug732866
* Merged with upstream
* Better logging, be more careful about when we throw login errors re bug732866
* Don't wrap keys and volumes till they're in the API
* Add a new IptablesManager that takes care of all uses of iptables
* Last un-magiced session.execute() replaced with SQLAlchemy code..
* PEP8
* Add basic test case
* Implements basic OpenStack API client, ready to support API tests
* Initial support fo extension resources. Tests
* Partial revert of one conversion due to phantom magic exception from SQLAlchemy in unrelated code; convert all deletes
* merge lp:nova
* add docstring
* fixed formatting and redundant imports
* Cleaned up vmops
* merge trunk
* initializing instance power state on launch to 0 (fixes EC2 API bug)
* Correct a misspelling
* merge lp:nova
* merge trunk
* Use a FLAGS.default_os_type if available
* Another little bit of fallout from the execvp branch
* Updated the code to detect the exception by fault type. SOAP faults are embedded in the SOAP response as a property. Certain faults are sent as a part of the SOAP body as property of missingSet. E.g. NotAuthenticated fault. So we examine the response object for missingSet and try to check the property for fault type
* Another little detail.
* Fix a few things that were either missed in the execvp conversion or stuff that was merged after it, but wasn't updated accordingly
* Introduces the ZoneManager to the Scheduler which polls the child zones and caches their availability and capabilities
* One more thing.
* merge trunk
* Only include ramdisk and kernel id if they are actually set
* Add bugfix metadata
* More execvp fallout
* Make nova.image.s3 catch up with the new execute syntax
* Pass argv of dnsmasq and radvd to execute as individual args, not as a list
* Split dnsmasq and radvd commands into their respective argv's
* s/s.getuid()/os.getuid()/
* merge lp:nova and add stub image service to quota tests as needed
* merged to trunk rev781
* fix pep8 check
* merge lp:nova
* Modifies S3ImageService to wrap LocalImageService or GlanceImageService. It now pulls the parts out of s3, decrypts them locally, and sends them to the underlying service. It includes various fixes for image/glance.py, image/local.py and the tests
* add tests to verify the serialization of adminPass in server creation response
* Fixes nova.sh to run properly the first time. We have to get the zip file after nova-api is running
* minor fixes from review
* merged trunk
* fixed based on reviewer's comment
* merge lp:nova
* Moved umount container to disk.py and try to remove loopback when destroying the container
* Merged trunk
* Replace session.execute() calls performing raw UPDATE statements with SQLAlchemy code, with the exception of fixed_ip_disassociate_all_by_timeout()
* Fixes a race condition where multiple greenthreads were attempting to resize a file at the same time. Adds tests to verify that the image caching call will run concurrently for different files, but will block other greenthreads trying to cache the same file
* maybe a int instead ?
* merge lp:nova
* merge, resolve conflicts, and update to reflect new standard deserialization function signature
* Fixes doc build after execvp patch
* execvp: fix docs
* initializing instance power state on launch to 0 (fixes EC2 API bug)
* - Content-Type and Accept headers handled properly - Content-Type added to responses - Query extensions no long cause computeFaults - adding wsgi.Request object - removing request-specific code from wsgi.Serializer
* Fixes bug 726359. Passes unit tests
* merge lp:nova, fix conflicts, fix tests
* fix the copyright notice in migration
* execvp: cleanup
* remove the semaphore when there is no one waiting on it
* merge lp:nova and resolve conflicts
* Hi guys
* Update the create server call in the Openstack API so that it generates an 'adminPass' and calls set_admin_password in the compute API. This gets us closer to parity with the Cloud Servers v1.0 spec
* Added naming scheme comment
* Merged trunk
* execvp passes pep8
* merge trunk
* Add a decorator that lets you synchronise actions across multiple binaries. Like, say, ensuring that only one worker manipulates iptables at a time
* renaming wsgi.Request.best_match to best_match_content_type; correcting calls to that function in code from trunk
* merge lp:nova
* Fixes bug #729400. Invalid values for offset and limit params in http requests now return a 400 response with a useful message in the body. Also added and updated tests
* Add password parameter to the set_admin_password call in the compute api. Updated servers password to use this parameter
* stuff
* rearrange functions and add docstrings
* Fixes uses of process_input
* update authors file
* merged trunk r771
* merge lp:nova
* remove unneeded stubs
* move my tests into their own testcase
* replaced ConnectionFailed with Exception in tools/euca-get-ajax-console was not working for me with euca2tools 1.2 (version 2007-10-10, release 31337)
* Fixed pep8 issues
* remerge trunk
* removed uneeded **kw args leftover from removed account-in-url changes
* fixed lp715427
* fixed lp715427
* Fix spacing
* merge lp:nova and resolve conflicts
* remove superfluous trailing blank line
* add override to handle xml deserialization for server instance creation
* Added 'adminPass' to the serialization_metadata
* merge trunk
* Merged with trunk Updated exception handling according to spawn refactoring
* Fixed pep8 violation in glance plugin
* Added unit tests for ensuring VDI are cleaned up upon spawn failures
* Stop assuming anything about the order in which the two processes are scheduled
* make static method for testing without initializing libvirt
* tests and semaphore fix for image caching
* execvp: unit tests pass
* merged to trunk rev 769
* execvp: almost passes tests
* Refactoring nova-api to be a service, so that we can reuse it in unit tests
* Added documentation about needed flags
* a few fixes for the tests
* Renamed FLAG.paste_config -> FLAG.api_paste_config
* Sorted imports correctly
* merge trunk
* Fixes lp730960 - mangled instance creation in virt drivers due to improper merge conflict resolution
* Use disk_format and container_format in place of image type
* using get_uuid in place of get_record in _get_vm_opaqueref changed SessionBase._getter in fake xenapi in order to return HANDLE_INVALID failure when reference is not in DB (was NotImplementedException)
* Merging trunk
* Fixing tests
* Pep8 fixes
* Accidentally left some bad data around
* Fix the bug where fakerabbit is doing a sort of prefix matching on the AMQP routing key
* merge trunk
* Use disk_format and container_format instead of image type
* merged trunk
* update manpage
* update code to work with new container and disk formats from glance
* modify nova manage doc
* Nits
* abstracted network code in the base class for flat and vlan
* Remerged trunk. fixed conflict
* Removes VDIs from XenServer backend if spawn process fails before vm rec is created
* Added ability to remove networks on nova-manage command
* Remove addition of account to service url
* refactored up nova/virt/xenapi/vmops _get_vm_opaque_ref() no longer inspects the param to check to see if it is an opaque ref works better for unittests
* This fix is an updated version of Todd's lp720157. Adds SignatureVersion checking for Amazon EC2 API requests, and resolves bug #720157
* * pep8 cleanups in migrations * a few bugfixes
* Removed stale references to XenAPI
* Moved guest_tool.py from etc/esx directory to tools/esx directory
* Removed excess comment lines
* Fix todo comment
* execvp
* Merged trunk
* virt.xenapi.vmops._get_vm_opaque_ref changed vm to vm_ref and ref to obj
* virt.xenapi.vmops._get_vm_opaque_ref assumes VM.get_record raises
* add a delay before grabbing zipfile
* Some more refactoring and a tighter unit test
* Moved FLAGS.paste_config to its re-usable location
* Merged with trunk and fixed conflict. Sigh
* Converted tabs to spaces in bin/nova-api
* A few more changes
* Inhibit inclusion of stack traces in the logs UNLESS --verbose has been specified. This should help keep the logs compact, helping admins find the messages they're interested in (e.g., "Can't connect to MySQL server on '127.0.0.1' (111)") without having to sort through the stack traces, while still allowing developers to see those traces at will
* Addresses bugs 704985 and 705453 by:
* And unit tests
* A few formatting niceties
* First part of the bug fix
* virt.xenapi.vmops._get_vm_opaque_ref checks for basestring instance instead of str
* virt.xenapi.vmops._get_vm_opaque_ref exception caught properly
* cleaned up virt.xenapi.vmops._get_vm_opaque_ref. more reliable approach to checking if param is an opaque ref. code is cleaner
* deleted network_is_associated from nova.db api
* move the images_dir out of the way when converting
* pep8
* rework register commands based on review
* added network_get_by_cidr method to nova.db api
* Use IptablesManager.semapahore from securitygroups driver to ensure we don't apply half a rule set
* Log failed command execution if there are more retry attempts left
* Make iptables rules class __ne__ just be inverted __eq__
* Invalid values for offset and limit params in http requests now return a 400 response with a useful message in the body. Also added and updated tests
* Create --paste_config flag defaulting to api-paste.ini and mv etc/nova-api.conf to match
* Implementation for XenServer migrations. There are several places for optimization but I based the current implementation on the chance scheduler just to be safe. Beyond that, a few features are missing, such as ensuring the IP address is transferred along with the migrated instance. This will be added in a subsequent patch. Finally, everything is implemented through the Openstack API resize hooks, but actual resizing of the instance RAM and hard drive space is not yet implemented
* Generate 'adminPass' and call set_password when creating servers
* Merged with current trunk
* merge trunk
* Resolving excess conflicts due to criss-cross in branch history
* Make "dhcpbridge init" output correctly formatted leases information
* Rebased to nova revision 761
* Fixed some more pep8 errors
* * Updated readme file with installation of suds-0.4 through easy_install. * Removed pass functions * Fixed pep8 errors * Few bug fixes and other commits
* zipfile needs to be extracted after nova is running
* make compute get the new images properly, fix a bunch of tests, and provide conversion commands
* avoid possible string/int comparison problems
* merge lp:nova
* select cleanups
* Merged to trunk rev 760, and fixed comment line indent according to Jay's comment
* Fix renaming of instance fields using update_instance api method
* apirequest -> apireq
* * os_type is no longer `not null`
* respond well if personality attribute is incomplete
* Added initial support to delete networks nova-manage
* move the id wrapping into cloud layer instead of image_service
* added flatmanager unit testcases and renamed test_network.py to test_vlan_network.py
* remove xml testing infrastructure since it is not feasible to use at present
* refactor server tests to support xml and json separately
* More unit tests and rabbit hooks
* Fix renaming of instance fields using update_instance method
* Fix api logging to show proper path and controller:action
* merged trunk
* * Tests to verify correct vm-params for Windows and Linux instances
* More fixes
* delete unnecessary DECLARE
* Fixed based on reviewer's comment. Main changes are below. 1. get_vcpu_total()/get_memory_mb()/get_memory_mb_used() is changed for users who used non-linux environment. 2. test code added to test_virt
* merge lp:nova
* merge trunk
* fixed wrong local variable name in vmops
* Use %s for instance-delete logging in case instance_id comes through as a string
* remove ensure_b64_encoding
* add the ec2utils file i forgot
* spawn a greenthread for image registration because it is slow
* fix a couple issues with local, update the glance fake to actually return the same types as the real client, fix the image tests
* make local image service work
* use LocalImageServiceByDefault
* Replace objectstore images with S3 image service backending to glance or local
* Merged to trunk rev 759
* Merged trunk rev 758
* remove ra_server from model and fix migration issue while running unit tests
* Removed properties added to fixed_ips by xs-ipv6 BP
* altered ra_server name to gateway_v6
* merge lp:nova
* rename onset_files to personality_files all the way down to compute manager
* Changing output of status from showing the user as the owner, to showing the project
* enforce personality quotas
* localize a few error messages
* Refactor wsgi.Serializer away from handling Requests directly; now require Content-Type in all requests; fix tests according to new code
* pep8
* Renaming my migration yet again
* Merged with Trunk
* Use %s in case instance_id came through as a string
* Basic notifications drivers and tests
* adding wsgi.Controller and wsgi.Request testing; fixing format keyword argument exception
* This fix changes a tag contained in the DescribeKeyPairs response from <keypairsSet> to <keySet> so that Amazon EC2 access libraries which does more strict syntax checking can work with Nova
* some comments are modified
* Merged to trunk rev 757. Main changes are below. 1. Rename db table ComputeService -> ComputeNode 2. nova-manage option instance_type is reserved and we cannot use option instance, so change instance -> vm
* adding wsgi.Request class to add custom best_match; adding new class to wsgify decorators; replacing all references to webob.Request in non-test code to wsgi.Request
* Remerged trunk, fixed a few conflicts
* Add in multi-tenant support in openstack api
* Merged to trunk rev 758
* Fix regression in the way libvirt_conn gets its instance_types
* Updated DescribeKeyPairs response tag checked in nova/tests/test_cloud.py
* merged to trunk rev757
* Fixed based on reviewer's comments. Main changes are below. 1. Rename nova.compute.manager.ComputeManager.mktmpfile for better naming. 2. Several tests code in tests/test_virt.py are removed. Because it only works in libvirt environment. Only db-related testcode remains
* Fix regression in the way libvirt_conn gets its instance_types
* more rigorous testing and error handling for os api personality
* Updated Authors and .mailmap
* Merged to rev 757
* merges dynamic instance types blueprint (http://wiki.openstack.org/ConfigureInstanceTypesDynamically) and bundles blueprint (https://blueprints.launchpad.net/nova/+spec/flavors)
* moved migration to 008 (sigh)
* merged trunk
* catching bare except:
* added logging to instance_types for DB errors per code review
* Very simple change checking for < 0 values in "limit" and "offset" GET parameters. If either are negative, raise a HTTPBadRequest exception. Relevant tests included
* requested style change
* Fixes Bug #715424: nova-manage : create network crashes when subnet range provided is not enough , if the network range cannot fit the parameters passed, a ValueError is raised
* adding new source docs
* corrected error message
* changed _context
* pep8
* added in req.environ for context
* pep8
* fixed _context typo
* coding style change per devcamcar review
* fixed coding style per devcamcar review notes
* removed create and delete method (and corresponding tests) from flavors.py
* Provide the ability to rescue and unrescue a XenServer instance
* Enable IPv6 injection for XenServer instances. Added addressV6, netmaskV6 and gatewayV6 columns to the fixed_ips table via migration #007 as per NTT FlatManager IPv6 spec
* Updated docstrings
* add support for quotas on file injection
* Added IPv6 migrations
* merge fixes
* Inject IPv6 data into XenStore for instance
* Change DescribeKeyPairs response tag from keypairsSet to keySet, and fix lp720133
* Port Todd's lp720157 fix to the current trunk, rev 752
* Changed _get_vm_opaqueref removing test-specific code paths
* Removed excess TODO comments and debug line
* initial commit of vnc support
* merged trunk
* Changed ra_server to gateway_v6 and removed addressv6 column from fixed_ips db table
* * Added first cut of migration for os_type on instances table * Track os_type when taking snapshots
* merging trunk
* * Added ability to launch XenServer instances with per-os vm-params
* test osapi server create with multiple personalities
* ensure personality contents are b64 encoded
* Merged trunk
* Fixed pep8 issues, applied jaypipes suggestion
* Rebased to nova revision 752
* Use functools.wraps to make sure wrapped method's metadata (docstring and name) doesn't get mangled
* merge from trunk
* Fake database module for vmware vi api. Includes false injection layer at the level of API calls. This module is base for unit tests for vmwareapi module. The unit tests runs regardless of presence of ESX/ESXi server as computer provider in OpenStack
* Review feedback
* Updated the code to include support for guest consoles, VLAN networking for guest machines on ESX/ESXi servers as compute providers in OpenStack. Removed dependency on ZSI and now using suds-0.4 to generate the required stubs for VMware Virtual Infrastructure API on the fly for calls by vmwareapi module
* Added support for guest console access for VMs running on ESX/ESXi servers as computer providers in OpenStack
* Support for guest consoles for VMs running on VMware ESX/ESXi servers. Uses vmrc to provide the console access to guests
* Minor modification to document. Removed excess flags
* Moved the guest tools script that does IP injection inside VM on ESX server to etc/esx directory from etc/ directory
* support adding a single personality in the osapi
* corrected copyrights for new files
* Updated with flags for nova-compute, nova-network and nova-console. Added the flags, --vlan_interface=<Physical ethernet adapter name in VMware ESX host for vlan networking E.g vmnic0> --network_driver=nova.network.vmwareapi_net [Optional, only for VLAN Networking] --flat_network_bridge=<ESX Virtual Machine Port Group> [Optional, only for Flat Networking] --console_manager=nova.console.vmrc_manager.ConsoleVMRCManager --console_driver=nova.console.vmrc.VMRCSessionConsole [Optional for OTP (One time Passwords) as against host credentials] --vmwareapi_wsdl_loc=<http://<WEB SERVER>/vimService.wsdl>
* Fixed trunk merge issues
* Merged trunk
* At previous commit, I forget to erase conflict - fixed it
* merged to trunk rev 752
* Rebased at lp:nova 759
* test_compute is changed b/c lack of import instance_types
* rename db migration script
* 1. merged trunk rev749 2. rpc.call returns '/' as '\/', so nova.compute.manager.mktmpfile, nova.compute.manager.confirm.tmpfile, nova.scheduler.driver.Scheduler.mounted_on_same_shared_storage are modified followed by this changes. 3. nova.tests.test_virt.py is modified so that other teams modification is easily detected since other team is using nova.db.sqlalchemy.models.ComputeService
* updated docs
* updated docs
* Fixed xenapi tests Gave up on clever things with map stored as string in xenstore. Used ast.liteeral_eval instead
* This branch implements the openstack-api-hostid blueprint: "Openstack API support for hostId"
* refactored adminclient
* No reason to initialize metadata twice
* Units tests fixed partially. Still need to address checking data injected into xenstore need to convert string into dict or similar. Also todo PEP8 fixes
* replaced ugly INSTANCE_TYPE constant with (slightly less ugly) stubs
* add test for instance creation without personalities
* fixed pep8
* Add a lock_path flag for lock files
* refactored nova-manage list (-all, <name>) and fixed docs
* moved nova-manage flavors docs
* Edited `nova.api.openstack.common:limited` method to raise an HTTPBadRequest exception if a negative limit or offset is given. I'm not confident that this is the correct approach, because I guess this method could be called out of an API/WSGI context, but the method *is* located in the OpenStack API module and is currently only used in WSGI-capable methods, so we should be safe
* merge trunk
* moving nova-manage integration tests to smoke tests
* Wrapped the instance_types comparison with an int and added a test case for it. Removed the inadvertently added newline
* Rename migration to coincide with latest trunk changes
* Adds VHD build support for XenServer driver
* Suppress stack traces unless --verbose is specified
* Removed extraneous newline
* Merging trunk to my branch. Fixed a conflict in servers.py
* Fixed obvious errors with flags. Note: tests still fail
* Merging trunk
* Fixed default value for xenapi_agent_path flag
* 1) merge trunk 2) removed preconfigure_xenstore 3) added jkey for broadcast address in inject_network_info 4) added 2 flags: 4.1) xenapi_inject_image (default True) This flag allows for turning off data injection by mounting the image in the VDI (agreed with Trey Morris) 4.2) xenapi_agent_path (default /usr/bin/xe-update-networking) This flag specifies the path where the agent should be located. It makes sense only if the above flag is True. If the agent is found, data injection is not performed
* Wrap IptablesManager.apply() calls in utils.synchronized to avoid having different workers step on each other's toes
* merge trunk
* Add utils.synchronized decorator to allow for synchronising method entrance across multiple workers on the same host
* execvp
* execvp
* execvp
* execute: shell=True removed
* Add lxc to the libvirt tests
* Clean up the mount points when it shutsdown
* Add ability to mount containers
* Add lxc libvirt driver
* Rebased to Nova revision 749
* added listing of instances running on a specific host
* fixed FIXME
* beautification..
* introduced new flag "max_nbd_devices" to set the number of possible NBD devices
* renamed flag from maximum_... to max_..
* replaced ConnectionFailed with Exception in tools/euca-get-ajax-console was not working for me with euca2tools 1.2 (version 2007-10-10, release 31337)
* Did a pull from trunk to be sure I had the latest, then deleted the test directory. I guess it appeared when I started using venv. Doh
* Deleting test dir from a pull from trunk
* introduced new flag "maximum_nbd_devices" to set the number of possible NBD devices
* reverted my changes from https://code.launchpad.net/~berendt/nova/lp722554/+merge/50579 and reused the existing db api methods to add the disabled services. Looks much better now :)
* add timeout and retry for ssh
* Makes nova-api correctly load the default flagfile
* force memcache key to be str
* only create auth connection if cache misses
* No reason to dump a stack trace just because the AMQP server is unreachable; an error notification should be sufficient
* Add error message to the error report so we know why the AMQP server is unreachable
* No reason to dump a stack trace just because we can't reach the AMQP servire; it ends up being just noise
* DescribeInstances modified to return ipv6 fixed ip address in case of flatmanager
* Bootlock original instance during rescue
* merge with zones2 fixes and trunk
* check if QUERY_STRING is empty or not before building the request URL in bin/nova-ajax-console-proxy
* trunk merge
* API changed to new style class
* trunk merge, pip-requires and novatools to novaclient changes
* Fixes FlatDHCP by making it inherit from NetworkManager and moving some methods around
* fixed: bin/nova-ajax-console-proxy:66:19: W601 .has_key() is deprecated, use 'in'
* merged trunk
* add a caching layer to the has_role call to increase performance
* Removed unnecessary compute import
* Set rescue instance VIF device
* use default flagfile in nova-api
* Add tests for 718999, fix a little brittle code introduced by the committed fix
* Rename test to describe what it actually does
* Copy over to current trunk my tests, the 401/500 fix, and a couple of fixes to the committed fix which was actually brittle around the edges..
* I'm working on consolidating install instructions specifically (they're the most asked-about right now) and pointing to the docs.openstack.org site for admin docs
* check if QUERY_STRING is empty or not before building the request URL
* Teardown rescue instance
* Merged trunk
* Create rescue instance
* Merging trunk, conflicts fixed
* Verify status of image is active
* Rebased at lp:nova 740
* merged with trunk
* Cleanup db method names for dealing with auth_tokens to follow standard naming pattern
* The proposed bug fix stubs out the _is_vdi_pv routine for testing purposes
* revert a few unnecessary changes to base.py
* removed unused references to unittest
* add customizable tempdir and remove extra code
* Pass id of token to be deleted to the db api, not the actual object
* Removing unecessary headers
* Rename auth_token db methods to follow standard
* Removing unecessary nokernel stuff
* Adding _make_subprocess function
* No longer users image/ directory in tarball
* Merging trunk, small fixes
* make smoketests run with nose
* IPV6 FlatManager changes
* Make tests start with a clean database for every test
* merge trunk
* merge clean db
* merged trunk
* sorry, pep8
* adds live network injection/reconfiguration. Some refactoring
* forgot to get vm_opaque_ref
* new tests
* service capabilities test
* moved network injection and vif creation to above vm start in vmops spawn
* Merged trunk
* nothing
* Removes processName from debug output since we aren't using multiprocessing and it doesn't exist in python 2.6.1
* Add some methods to the ec2 admin api to work with VPNs. Also implements and properly documents the get_hosts method
* Fix copypasta pep8 violation
* moved migrate script to 007 (again..sigh)
* Don't require metadata (hotfix for bug 724143)
* merge trunk
* Merged trunk
* Updated email in Authors
* Easy and effective fix for getting the DNS value from flag file, when working in FlatNetworking mode
* Some first steps towards resolving some of the issues brought up on the mailing list related to documenting flags
* Support HP/LeftHand SANs. We control the SAN by SSHing and issuing CLIQ commands. Also improved the way iSCSI volumes are mounted: try to store the iSCSI connection info in the volume entity, in preference to doing discovery. Also CHAP authentication support
* This fix checks whether the boot/guest directory exists on the hypervisor. If that is not the case, it creates it
* Globally exclude *.pyc files from generated tarballs
* stubbing out _is_vdi_pv for test purposes
* merge trunk
* Globally exclude .pyc files from tarball contents
* Get DNS value from Flag, when working in FlatNetworking mode. Passing the flag was ineffective previously. This is an easy fix. I think we would need nova-manage to accept dns also from command line
* xenapi plugin function now checks whether /boot/guest already exists. If not, it creates the directory
* capability aggregation working
* fix check for existing port 22 rule
* move relevant code to baseclass and make flatdhcp not inherit from flat
* Hotfix to not require metadata
* Documentation fixes so that output looks better
* more smoketest fixes
* Removed Milind from Authors file, as individual Contributer's License Agreement & Ubuntu code of conduct are not yet signed
* Fixed problems found in localized string formatting. Verified the fixes by running ./run_tests.sh -V
* Change missed reference to run_tests.err.log
* PEP 257 fixes
* Merged with trunk
* fix missed err.log
* Tests all working again
* remove extra flag in admin tests
* Revert commit 709. This fixes issues with the Openstack API causing 'No user for access key admin' errors
* Adds colors to output of tests and cleans up run_tests.py
* Reverted bad-fix to sqlalchemy code
* Merged with trunk
* added comments about where code came from
* merge and fix conflicts
* Prevent logging.setup() from generating a syslog handler if we didn't request one (breaks on mac)
* fix pep8
* merged upstream
* Changed create from a @staticmethod to a @classmethod
* revert logfile redirection and make colors work by temporarily switching stdout
* merged trunk
* add help back to the scripts that don't use service.py
* Alphabetize imports
* remove processName from debug output since we aren't using multiprocessing and it doesn't exist in python 2.6.1
* updates to nova.flags to get help working better
* Helper function that supports XPath style selectors to traverse an object tree e.g
* tests working again
* Put back the comments I accidentally removed
* Make sure there are two blank links after the import
* Rename minixpath_select to get_from_path
* Fixes the describe_availability_zones to use an elevated context when getting services and the db calls to pass parameters correctly so is_admin check works
* Fix pep8 violation (trailing whitespace)
* fix describe_availability_zones
* Cope when we pass a non-list to xpath_select - wrap it in a list
* Fixes existing smoketests and splits out sysadmin tests from netadmin tests
* Created mini XPath implementation, to simplify mapping logic
* move the deletion of the db into fixtures
* merged upstream
* Revert commit 709. This fixes issues with the Openstack API causing 'No user for access key admin' errors
* put the redirection back in to run_tests.sh and fix terminal colors by using original stdout
* Deleted trailing whitespace
* Fixes and optimizes filtering for describe_security_groups. Also adds a unit test
* merged trunk
* fix for failing describe_instances test
* merged trunk
* use flags for sqlite db names and fix flags in dhcpbridge
* merged trunk
* Fixes lp715424, code now checks network range can fit num_networks * network_size
* The proposed branch prevents FlatManager from executing network initialisation tasks contained in linux_net.init_host(), which are unnecessary when flat networking is used
* Adds some features to run_tests.sh: - if it crashes right away with a short erorr log, print that directly - allow specifying tests without the nova.tests part
* The kernel_id and the ramdisk_id are optional, yet the OpenStack API was requiring them. In addition, with the ObjectStore these properties are not under 'properties' (as they are with Glance)
* merged trunk
* merge trunk
* Initial support for per-instance metadata, though the OpenStack API. Key/value pairs can be specified at instance creation time and are returned in the details view. Support limits based on quota system
* Merged trunk
* Removed pass
* Changed unit test to refer to compute API, per Todd's suggestion. Avoids needing to extend our implementation of the EC2 API
* Fixes lots of errors in the unit tests
* dump error output directly on short import errors
* allow users to omit 'nova.tests' with run_tests
* Merged trunk
* * Took care of localization of strings * Addressed all one liner docstrings * Added Sateesh, Milind to Authors file
* Fixed pep8 errors
* FlatManager.init_host now inhibits call to method in superclass. Floating IP methods have been redefined in FlatManager to raise NotImplementedError
* speed up network tests
* merged trunk
* move db creation into fixtures and clean db for each test
* fix failures
* remove unnecessary stubout
* Lots of test fixing
* Update the admin client to deal with VPNs and have a function host list
* Removed unused import & formatting cleanups
* Exit with exit code 1 if conf cannot be read
* Return null if no kernel_id / ramdisk_id
* Reverted change to focus on the core bug - kernel_id and ramdisk_id are optional
* Make static create method behave more like other services
* merged fix-describe-groups
* add netadmin smoketests
* separate out smoketests and add updated nova.sh
* fix and optimize security group filtering
* Support service-like wait behaviour for API service
* Added create static method to ApiService
* fix test
* Refactoring nova-api to be a service, so that we can reuse it in tests
* test that shows error on filtering groups
* don't make a syslog handler if we didn't ask for one
* Don't blindly concatenate queue name if second portiion is None
* Missing import for nova.exceptions (!)
* At the moment --pidfile is still used in some scripts in contrib/puppet/. I don't use puppet, please check if there are possible side effects
* We're not using prefix matching on AMQP, so fakerabbit shouldn't be doing it!
* merge fixes from anso branch
* merged trunk
* Removed block of code that resurrected itself in the last merge
* Added Andy Southgate to the Authors file
* Merged with trunk, including manual conflict resolution in nova/virt/disk.py and nova/virt/xenapi/vmops.py
* Put the whitespace back *sigh*
* Remove duplicate import gained across a merge
* Rename "SNATTING" chain to "snat"
* Fix DescribeRegion answer by introducing '{ec2,osapi}_listen' flags instead of overloading {ec2,osapi}_host. Get rid of paste_config_to_flags, bin/nova-combined. Adds debug FLAGS dump at start of nova-api
* Also remove nova-combined from setup.py
* Fixed some docstring
* Get rid of nova-combined, see rationale on ML
* Merged trunk
* no, really fix lp721297 this time
* Updated import statements according to HACKING guidelines. Added docstrings to each document. Verified pep8 over all files. Replaced some constants by enums accordingly. Still little bit more left in vm_util.py and vim_util.py files
* Add flags for listen_port to nova-api. This allows us to listen on one port, but return another port (for a proxy or load balancer) in calls like describe_regions, etc
* Fix tiny mitakes! (remove unnecessary comment, etc)
* Fixed based on reviewer's comment. 1. Change docstrings format 2. Fix comment grammer mistake, etc
* PEP8 again
* Account for the fact that iptables-save outputs rules with a space at the end. Reverse the rule deduplication so that the last one takes precedence
* floating-ip-snat was too long. Use floating-snat instead
* PEP8 adjustments
* Remove leftover from debugging
* Add a bunch of tests for everything
* Fixes various issues regarding verbose logging and logging errors on import
* merged trunk
* Add a new chain, floating-ip-snat, at the top of SNATTING, so that SNATting for floating ips gets applied before the default SNAT rule
* Address some review comments
* Some quick test cleanups, first step towards standardizing the way we start services in tests
* use a different flag for listen port for apis
* added disabled services to the list of displayed services in bin/nova-manage
* merged to trunk rev709. NEEDS to be fixed based on 3rd reviewer's comment
* just add 005_add_live_migration.py
* Fixed based on reviewer's comment. 1. DB schema change vcpu/memory/hdd info were stored into Service table. but reviewer pointed out to me creating new table is better since Service table has too much columns
* update based on prereq branch
* update based on prereq branch
* fixed newline and moved import fake_flags into run_tests where it makes more sense
* merged fix
* remove changes to test db
* Fixed my confusion in documenting the syntax of iSCSI discovery
* pretty colors for logs and a few optimizations
* Renamed db_update to model_update, and lots more documentation
* modify tests to use specific hosts rather than default
* Merged with head
* remove keyword argument, per review
* move test_cloud to use start_service, too
* add a start_service method to our test baseclass
* add a test for rpc consumer isolation
* Merged with trunk
* The OpenStack API was using the 'secret' as the 'access key'. There is an 'access key' and there is a 'secret key'. Access key ~= username. Secret key ~= password. This fix is necessary for the OpenStack Python API bindings to log in
* Add a bunch of docs for the new iptables hotness
* fix pep8 and remove extra reference to reset
* switch to explicit call to logging.setup()
* merged trunk
* Adds translation catalogs and distutils.extra glue code that automates the process of compiling message catalogs into .mo files
* Merged with trunk
* make sure that ec2 response times are xs:dateTime parsable
* Removing pesky DS_Store files too. Begone
* Updated to remove built docs
* Removing duplicate installation docs and adding flag file information, plus pointing to docs.openstack.org for Admin-audience docs
* introducing a new flag timeout_nbd for manually setting the time in seconds for waiting for an upcoming NBD device
* use tests.sqlite so it doesn't conflict with running db
* cleanup from review
* Duh, continue skips iteration, not pass. #iamanidiot
* reset to notset if level isn't in flags
* Enable rescue testing
* PEP8 errors and remove check in authors file for nova-core, since nova-core owns the translation export branch
* Merged trunk
* Stub out VM create
* * Removed VimService_services.py & VimService_services_types.py to reduce the diffs to normal. These 2 files are auto-generated files containing stubs for VI SDK API end points. The stub files are generated using ZSI SOAP stub generator module ZSI.commands.wsdl2py over Vimservice.wsdl distributed as part of VMware Virtual Infrastructure SDK package. To not include them in the repository we have few options to choose from, 1) Generate the stub files in build time and make them available as packages for distribution. 2) Generate the stub files in installation/configuration time if ESX/ESXi server is detected as compute provider. Further to this, we can try to reduce the size of stub files by attempting to create stubs only for the API end points required by the module vmwareapi
* introducing a new flag timeout_nbd for manually setting the time in seconds for waiting for an upcoming NBD device
* * Removed nova/virt/guest-tools/guest_tool.bat & nova/virt/guest-tools/guest_tool.sh as guest_tool.py can be invoked directly during guest startup
* More PEP-8
* Wrap ipv6 rules, too
* PEP-8 fixes
* Allow non-existing rules to be removed
* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ NOVA-CORE DEVELOPERS SHOULD NOT REVIEW THIS MERGE PROPOSAL ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* merged with nova trunk revision #706
* Fix typo
* Unfilter instance correctly on termination
* move exception hook into appropriate location and remove extra stuff from module namespace
* Also remove rules that jump to deleted chains
* simplify logic for parsing log level flags
* reset all loggers on flag change, not just root
* add docstring to reset method
* removed extra comments and initialized from flags
* fix nova-api as well
* Fix refresh sec groups
* get rid of initialized flag
* clean up location of method
* remove extra references to logging.basicConfig
* move the fake initialized into fake flags
* fixes for various logging errors and issues
* fanout works
* fanout kinda working
* service ping working
* scheduler manager
* tests passing
* start of fanout
* merge trunk
* previous trunk merge
* puppet scripts only there as an example, should be moved to some other place if they are still necessary
* Various optimizations of lookups relating to users
* If there are no keypairs registered on a create call, output a useful error message rather than an out-of-range exception
* Fixes vpn images to use kernel and ramdisk specified by the image
* added elif branch to handle the conversion of datetime instances to isoformat instead of plain string conversion
* Calculate time correctly for ec2 request logs
* fix ec2 launchtime response not in iso format bug
* pep8 leftover
* move from datetime.datetime.utcnow -> utils.utcnow
* pass start time as a param instead of making it an attribute
* store time when RequestLogging starts instead of using context's time
* Fix FakeAuthManager so that unit tests pass; I believe it was matching the wrong field
* more optimizations context.user.id to context.user_id
* remove extra 
* replace context.user.is_admin() with context.is_admin because it is much faster
* remove the weird is_vpn logic in compute/api.py
* Don't crash if there's no 'fixed_ip' attribute (was returning None, which was unsubscriptable)
* ObjectStore doesn't use properties collection; kernel_id and ramdisk_id aren't required anyway
* added purge option and tightened up testing
* Wrap iptables calls in a semaphore
* pep8
* added instance types purge test
* Security group fallback is named sg-fallback
* Rename a few things for more clarity
* Port libvirt_conn.IptablesDriver over to use linux_net.IptablesManager
* merged trunk
* Typo fix
* added admin api call for injecting network info, added api test for inject network info
* If there are no keypairs, output a useful error message
* Fix typo (?) in authentication logic
* Changing type -> image_type
* Pep8 cleanup
* moved creating vifs to its own function, moved inject network to its own function
* sandy y u no read hacking guide and import classes?
* Typo fix
* XenAPI tests
* Introduce IptablesManager in linux_net. Port every use of iptables in linux_net to it
* Use WatchedFileHandler instead of RotatingFileHandler
* Resize compute tests
* Support for HP SAN
* Merging trunk to my branch. Fixed conflicts in Authors file and .mailmap
* Rename migration 004 => 005
* Added Author and tests
* Merging trunk
* fixups backed on merge comments
* Fixed testing mode leftover
* PEP8 fix
* Remove paste_config_to_flags since it's now unused
* Port changes to nova-combined, rename flags to API_listen and API_listen_port
* Set up logging once FLAGS properly read, no need to redo logging config anymore (was inoperant anyway)
* Switch to API_listen and API_listen_port, drop wsgi.paste_config_to_flags
* added new class Instances to manage instances and added a new listing method into the class
* added functionality to list only fixed ip addresses of one node and added exception handling to list method
* Use WatchedFileHandler instead of RotatingFileHandler
* Incorporating minor cleanups suggested by Rick Harris: * Use assertNotEqual instead of assertTrue * Use enumerate function instead of maintaining a counter
* Resize compute tests
* fixed based on reviewer's comment. 1. erase wrapper function(remove/exists/mktempfile) from nova.utils. 2. nova-manage service describeresource(->describe_resource) 3. nova-manage service updateresource(->update_resource) 4. erase "my mistake print" statement
* Tests
* pep8
* merged trunk
* Makes FlatDHCPManager clean up old fixed_ips like VlanManager
* Correctly pass the associate paramater for project_get_network through the IMPL layer in the db api
* changed migration to 006 for trunk compatibility
* completed doc and added --purge option to instance type delete
* moved inject network info to a function which accepts only instance, and call it from reset network
* Test changes
* Merged with trunk
* Always compare incoming flavor_id as an int
* Initial support for per-instance metadata, though the OpenStack API. Key/value pairs can be specified at instance creation time and are returned in the details view. Support limits based on quota system
* a few changes and a bunch of unit tests
* remove leftover periodic tasks
* Added support for feature parity with the current Rackspace Cloud Servers practice of "injecting" files into newly-created instances for configuration, etc. However, this is in no way restricted to only writing files to the guest when it is first created
* missing docstring and fixed copyrights
* move periodic tasks to base class based on class variable as per review
* Correctly pass the associate paramater to project_get_network
* Add **kwargs to VlanManager's create_networks so that optional args from other managers don't break
* Uncommitted changes using the wrong author, and re-committing under the correct author
* merge with zone phase 1 again
* Added http://mynova/v1.0/zones/ api options for add/remove/update/delete zones. child_zones table added to database and migration. Changed novarc vars from CLOUD_SERVERS_* to NOVA_* to work with novatools. See python-novatools on github for help testing this
* pip requires novatools
* copyright notice
* moved 003_cactus.py migration file to 004_add_instance_types.py to avoid naming collision with new trunk migration
* Add **kwargs to VlanManager's create_networks so that optional args from other managers don't break
* merge with zone phase 1
* changed from 003-004 migration
* merged lp:~jk0/nova/dynamicinstancetypes
* Merged trunk
* merge from dev
* fixed strings
* multi positional string fix
* Use a semaphore to ensure we don't run more than one iptables-restore at a time
* Fixed unit test
* merge with trunk
* fixed zone list tests
* Make eth0 the default for the public_interface flag
* Finished flavor OS API stubs
* Re-alphabetise Authors, move extra addresses into .mailmap
* Re-alphabetise Authors, move extra addressses into .mailmap
* Move the ramdisk logging stuff
* Hi guys
* fixup
* zone list now comes from scheduler zonemanager
* Stop blowing away the ramdisk
* Rebased at lp:nova 688
* Update the Openstack API so that it returns 'addresses'
* I have a bug fix, additional tests for the `limiter` method, and additional commenting for a couple classes in the OpenStack API. Basically I've just tried to jump in somewhere to get my feet wet. Constructive criticism welcome
* added labels to networks for use in multi-nic added writing network data to xenstore param-list added call to agent to reset network added reset_network call to openstack api
* Add a command to nova-manage to list fixed ip's
* Foo
* comments + Englilish, changed copyright in migration, removed network_get_all from db.api (vestigial)
* Adding myself to Authors and .mailmap files
* example:
* Switched mailmap entries
* Supporting networks with multiple PIFs. pep8 fixes unit tests passed
* Merged kpepple
* Merged trunk
* More testing
* Block diagram for vmwareapi module
* added entry in the category list
* Added vmwareapi module to add support of hypervisor vmware-vsphere to OpenStack
* added new functionality to list all defined fixed ips
* added more I18N
* Merged trunk and fixed conflict with other Brian in Authors
* removing superfluous pass statements; replacing list comprehension with for loop; alphabetizing imports
* Rebased at lp:nova 687
* added i18n of 'No networks defined'
* Make eth0 the default for FLAGS.public_interface
* Typo fixes
* Merging trunk
* Adding tests
* first crack at instance types docs
* merge trunk
* style cleanup
* polling tests
* Use glance image type to determine disk type
* Minor change. Adding a helper function stub_instance() inside the test test_get_all_server_details_with_host for readability
* Fixes ldapdriver so that it works properly with admin client. It now sanitizes all unicode data to strings before passing it into ldap driver. This may need to be rethought to work properly for internationalization
* Moved definition of return_servers_with_host stub to inside the test_get_all_server_details_with_host test
* fixed
* Pep8 fixes
* Merging trunk
* Adding basic test
* Better exceptions
* Update to our HACKING doc to add examples of our docstring style
* add periodic disassociate from VlanManager to FlatDHCPManager
* Flipped mailmap entries
* -from migrate.versioning import exceptions as versioning_exceptions + +try: + from migrate.versioning import exceptions as versioning_exceptions +except ImportError: + try: + # python-migration changed location of exceptions after 1.6.3 + # See LP Bug #717467 + from migrate import exceptions as versioning_exceptions + except ImportError: + sys.exit(_("python-migrate is not installed. Exiting."))
* Accidently removed myself from Authors
* Added alternate email to mailmap
* zone manager tests
* Merged to trunk
* added test for reset_network to openstack api tests, tabstop 5 to 4, renamed migration
* Use RotatingFileHandler instead of FileHandler
* pep8 fixes
* sanitize all args to strings before sending them to ldap
* Use a threadpool for handling requests coming in through RPC
* Typos
* Derp
* Spell flags correctly (i.e. not in upper case)
* Fixed merge error
* novatools call to child zones done
* novatools call to child zones done
* Putting glance plugin under pep8 control
* fixed authors, import sys in migration.py
* Merged trunk
* First commit of working code
* Stubbed out flavor create/delete API calls
* This implements the blueprint 'Openstack API support for hostId': https://blueprints.launchpad.net/nova/+spec/openstack-api-hostid Now instances will have a unique hostId which for now is just a hash of the host. If the instance does not have a host yet, the hostId will be ''
* Fix for bug #716847
* merge trunk
* First commit for xenapi-vlan-networking. Totally untested
* added functionality to nova-manage to list created networks
* Add back --logdir=DIR option. If set, a logfile named after the binary (e.g. nova-api.log) will be kept in DIR
* Fix PEP-8 stuff
* assertIsNone is a 2.7-ism
* This branch should resolve nova bug #718675 (https://bugs.launchpad.net/nova/+bug/718675)
* Added myself to the authors file
* I fail at sessions
* I fail at sessions
* Foo
* hurr durr
* Merging trunk part 1
* stubbed out reset networkin xenapi VM tests to solve domid problem
* foo
* foo
* Adding vhd hidden sanity check
* Fixes 718994
* Make rpc thread pool size configurable
* merge with trunk
* fail
* Fixing test by adding stub for get_image_meta
* this bug bit me hard today. pv can be None, which does not translate to %d and this error gets clobbered by causing errors in the business in charge of capturing output and reporting errors
* More pep8 fixes
* Pep8 fixes
* Set name-label on VDI
* Merge
* Don't hide RotatingFileHandler behind FileHandler's name
* Refactor code that decides which logfile to use, if any
* Fixing typo
* polling working
* Using Nova style nokernel
* changed d to s
* merge with trunk
* More plugin lol
* moved reset network to after boot durrrrr..
* Don't hid RotatingFileHandler behind FileHandler's name
* removed flag --pidfile from nova/services.py
* Added teammate Naveed to authors file for his help
* plugin lol
* Plugin changes
* merging trunk back in; updating Authors conflict
* Adding documentation
* Regrouping methods so they make sense
* zone/info works
* Refactoring put_vdis
* Adding safe_find_sr
* Merged lp:nova
* Fixes tarball contents by adding missing scripts and files to setup.py / MANIFEST.in
* Moving SR path code outside of glance plugin
* When re-throwing an exception, use "raise", not "raise e". This way we don't lose the stack trace
* Adding more documentation, code-cleanup
* Replace placeholders in nova.pot with some actual values
* The proposed fix puts a VM which fails to spawn in a (new) 'FAILED' power state. It does not perform a clean-up. This because the user needs to know what has happened to the VM he/she was trying to run. Normally, API users do not have access to log files. In this case, the only way for the user to know what happened to the instance is to query its state (e.g.: doing euca-describe-instances). If we perform a complete clean-up, no information about the instance which failed to spawn will be left
* Some trivial cleanups in context.py, mostly just a test of using the updated git-bzr-ng
* Use eventlet.green.subprocess instead of standard subprocess
* derp
* Better host acquisition
* zones merge
* fixed / renamed migration scripts
* Merged trunk
* Update .pot file with source file and line numbers after running python setup.py build
* Adds Distutils.Extra support, removes Babel support, which is half-baked at best
* Pull in .po message catalogs from lp:~nova-core/nova/translations
* Fix sporadically failing unittests
* Missing nova/tests/db/nova.austin.sqlite file
* Translations will be shipped in po/, not locale/
* Adding missing scripts and files to setup.py / MANIFEST.in
* Fixes issues when running euca-run-instances and euca-describe-image-attribute against the latest nova/trunk EC2 API
* initial
* Naïve attempt at threading rpc requests
* Beautify it a little bit, thanks to dabo
* OS-55: Moved conn_common code into disk.py
* Break out of the "for group in rv" loop in security group unit tests so that we are use we are dealing with the correct group
* Tons o loggin
* merged trunk
* Refactored
* Launchpad automatic translations update
* trunk merge
* better filtering
* Adding DISK_VHD to ImageTypes
* Updates to that S3ImageService kernel_id and ramdisk_id mappings work with EC2 API
* fixed nova-combined debug hack and renamed ChildZone to Zone
* plugin
* Removing testing statements
* Adds missing flag that makes use_nova_chains work properly
* bad plugin
* bad plugin
* bad plugin
* fixed merge conflict
* First cut on XenServer unified-images
* removed debugging
* fixed template and added migration
* better filtering
* Use RotatingFileHandler instead of FileHandler
* Typo fixes
* Resurrect logdir option
* hurr
* Some refactoring
* hurr
* Snapshot correctly
* Added try clause to handle changed location of exceptions after 1.6.3 in python-migrate LP Bug #717467
* Use eventlet.green.subprocess instead of standard subprocess
* Made kernel and ram disk be deleted in xen api upon instance termination
* Snapshot correctly
* merged recent version. no conflict, no big/important change to this branch
* wharrgarbl
* merge jk0 branch (with trunk merge) which added additional columns for instance_types (which are openstack api specific)
* corrected model for table lookup
* More fixes
* Derp
* fix for bug #716847 - if a volume has not been assigned to a host, then delete from db and skip rpc
* added call to reset_network from openstack api down to vmops
* merging with trunk
* Got rid of BadParameter, just using standard python ValueError
* Merged trunk
* support for multiple IPs per network
* Fix DescribeRegion answer by using specific 'listen' configuration parameter instead of overloading ec2_host
* Fixed tables creation order and added clearing db after errors
* Modified S3ImageService to return the format defined in BaseService to allow EC2 API's DescribeImages to work against Glance
* re-add input_chain because it got deleted at some point
* Launchpad automatic translations update
* Fixes a typo in the auth checking for DescribeAvailabilityZones
* Fixes describe_security_groups by forcing it to return a list instead of a generator
* return a list instead of a generator from describe_groups
* Hi guys
* Added missing doc string and made a few style tweaks
* fix typo in auth checking for describe_availability_zones
* now sorting by project, then by group
* Launchpad automatic translations update
* Made a few tweaks to format of S3 service implementation
* Merged trunk
* First attempt to make all image services use similar schemas
* fix :returns: and add pep-0257
* Preliminary fix for issue, need more thorough testing before pushing to lp
* Launchpad automatic translations update
* More typos
* More typos
* More typos
* More typos
* More typos
* fixed exceptions import from python migrate
* Cast to host
* This fixes a lazy-load issue in describe-instances, which causes a crash. The solution is to specifically load the network table when retrieving an instance
* added instance_type_purge() to actually remove records from db
* updated tests and added more error checking
* Merged trunk
* more error checking on inputs and better errors returned
* Added more columns to instance_types tables
* Added LOG line to describe groups function to find out what's going
* joinedload network so describe_instances continues to work
* zone api tests passing
* Create a new AMQP connection by default
* First, not all
* Merged to trunk and fixed merge conflict in Authors
* rough cut at zone api tests
* Following Rick and Jay's suggestions: - Fixed LOG.debug for translation - improved vm_utils.VM_Helper.ensure_free_mem
* Create a new AMQP connection by default
* after hours of tracking his prey, ken slowly crept behind the elusive wilderbeast test import hiding in the libvirt_conn.py bushes and gutted it with his steely blade
* fixed destroy calls
* Forgot the metadata includes
* added get IPs by instance
* added resetnetwork to the XenAPIPlugin.dispatch dict
* Forgot the metadata includes
* Forgot the metadata includes
* Typo fixes and some stupidity about the models
* passing instance to reset_network instead of vm_ref, also not converting to an opaque ref before making plugin call
* Define sql_idle_timeout flag to be an integer
* forgot to add network_get_all_by_instance to db.api
* template adjusted to NOVA_TOOLS, zone db & os api layers added
* Spawn from disk
* Some more cleanup
* sql_idle_timeout should be an integer
* merged model change: flavorid needs to unique in model
* testing refactor
* flavorid needs to unique in model
* Add forwarding rules for floating IPs to the OUTPUT chain on the network node in addition to the PREROUTING chain
* typo
* refactored api call to use instance_types
* Use a NullPool for sqlite connections
* Get a fresh connection in rpc.cast rather than using a recycled one
* Make rpc.cast create a fresh amqp connection. Each API request has its own thread, and they don't multiplex well
* Only use NullPool when using sqlite
* Also add floating ip forwarding to OUTPUT chain
* trunk merge
* removed ZoneCommands from nova-manage
* Try using NullPool instead of SingletonPool
* Try setting isolation_level=immediate
* This branch fixes bug #708347: RunInstances: Invalid instance type gives improper error message
* Wrap line to under 79 characters
* Launchpad automatic translations update
* adding myself to Authors file
* 1. Merged to rev654(?) 2. Fixed bug continuous request. if user continuouslly send live-migration request to same host, concurrent request to iptables occurs, and iptables complains. This version add retry for this issue
* forgot to register new instance_types table
* Plugin tidying and more migration implementation
* fixed overlooked mandatory changes in Xen
* Renamed migration plugin
* A lot of stuff
* - population of public and private addresses containers in openstack api - replacement of sqlalchemy model in instance stub with dict
* Fixes the ordering of init_host commands so that iptables chains are created before they are used
* Pass timestamps to the db layer in fixed_ip_disassociate_all_by_timeout rather than converting to strings ahead of time, otherwise comparison between timestamps would often fail
* Added support for 'SAN' style volumes. A SAN's big difference is that the iSCSI target won't normally run on the same host as the volume service
* added support to pull list of ALL instance types even those that are marked deleted
* Indent args to ssh_connect correctly
* Fix PEP8 violations
* Added myself to Authors
* 1) Moved tests for limiter to test_common.py (from __init__.py) and expanded test suite to include bad inputs and tests for custom limits (#2)
* Added my mail alias (Part of an experiment in using github, which got messy fast...)
* Fixed pep8 error in vm_utils.py
* Add my name to AUTHORS, remove parentheses from the substitution made in the previous commit
* Don't convert datetime objects to a string using .isoformat(). Leave it to sqlalchmeny (or pysqlite or whatever it is that does the magic) to work it out
* Added test case for 'not enough memory' Successfully ran unit tests Fixed pep8 errors
* Give a better error message if the instance type specified is invalid
* Launchpad automatic translations update
* added testing for instance_types.py and refactored nova-manage to use instance_types.py instead of going directly to db
* added create and delete methods to instance_types in preparation to call them from nova-manage
* added testing for nova-manage instance_type
* additional error checking for nova-manage instance_type
* Typos and primary keys
* Automates the setup for FlatDHCP regardless of whether the interface has an ip address
* add docstring and revert set_ip changes as they are unnecessary
* Commas help
* Changes and bug fixes
* avoiding HOST_UNAVAILABLE exception: if there is not enough free memory does not spawn the VM at all. instance state is set to "SHUTDOWN"
* merge lp:nova at revision #654
* merge with lp:nova
* Fixed pep8 errors Unit tests passed
* merge source and remove ifconfig
* fixes #713766 and probably #710959, please test the patch before committing it
* use route -n instead of route to avoid chopped names
* Updates to the multinode install doc based on Wayne's findings. Merged with trunk so should easily merge in
* Checks whether the instance id is a list or not before assignment. This is to fix a bug relating to nova/boto. The AWK-SDK libraries pass in a string, not a list. The euca tools pass in a list
* Launchpad automatic translations update
* Catching all socket errors in _get_my_ip, since any socket error is likely enough to cause a failure in detection
* Catching all socket errors in _get_my_ip, since any socket error is likely enough to cause a failure in detection
* blargh
* Some stuff
* added INSTANCE_TYPES to test for compatibility with current tests
* Checking whether the instance id is a list or not before assignment. This is to fix a bug relating to nova/boto. The AWK-SDK libraries pass in a string, not a list. the euca tools pass in a list
* Added data_transfer xapi plugin
* Another quick fix to multinode install doc
* Made updates to multinode install doc
* fixed instance_types methods to use database backend
* require user context for most flavor/instance_type read calls
* added network_get_all_by_instance(), call to reset_network in vmops
* added new parameter --dhcp_domain to set the used domain by dnsmasq in /etc/nova/nova.conf
* minor
* Fix for bug #714709
* A few changes
* fixed format according to PEP8
* replaced all calls to ifconfig with calls to ip
* added myself to the Authors file
* applied http://launchpadlibrarian.net/63698868/713434.patch
* Launchpad automatic translations update
* aliased flavor to instance_types in nova-manage. will probably need to make flavor a full fledged class as users will want to list flavors by flavor name
* simplified instance_types db calls to return entire row - we may need these extra columns for some features and there seems to be little downside in including them. still need to fix testing calls
* refactor to remove ugly code in flavors
* updated api.create to use instance_type table
* added preliminary testing for bin/nova-manage while i am somewhat conflicted about the path these tests have taken, i think it is better than no tests at all
* rewrote nova-manage instance_type to use correct db.api returned objects and have more robust error handling
* instance_types should return in predicatable order (by name currently)
* flavorid and name need to be unique in the database for the ec2 and openstack apis, repectively
* corrected db.instance_types to return expect dict instead of lists. updated openstack flavors to expect dicts instead of lists. added deleted column to returned dict
* converted openstack flavors over to use instance_types table. a few pep changes
* added FIXME(kpepple) comments for all constant usage of INSTANCE_TYPES. updated api/ec2/admin.py to use the new instance_types db table
* Launchpad automatic translations update
* allow for bridge to be the public interface
* Removed (newly) unused exception variables
* Didn't mean to actually make changes to the glance plugin
* Added a bunch of stubbed out functionality
* Moved ssh_execute to utils; moved comments to docstring
* Fixes for Vish & Devin's feedback
* Fixes https://bugs.launchpad.net/nova/+bug/681417
* Don't swallow exception stack traces by doing 'raise e'; just use 'raise'
* Implementation of 'SAN' volumes A SAN volume is 'special' because the volume service probably won't run on the iSCSI target. Initial support is for Solaris with COMSTAR (Solaris 11)
* merging
* Fixed PEP8 test problems, complaining about too many blank lines at line 51
* Adds logging.basicConfig() to run_tests.py so that attempting to log debug messages from tests will work
* Launchpad automatic translations update
* flagged all INSTANCE_TYPES usage with FIXME comment. Added basic usage to nova-manage (needs formatting). created api methods
* added seed data to migration
* Don't need a route for guests. Turns out the issue with routing from the guests was due to duplicate macs
* Changes the behavior of run_test.sh so that pep8 is only run in the default case (when running all tests). It will no longer run when individual test cases are being given as in:
* open cactus
* some updates to HACKING to describe the docstrings
* Casting to the scheduler
* moves driver.init_host into the base class so it happens before floating forwards and sets up proper iptables chains

2011.1rc1
---------

* Set FINAL = True in version.py
* Open Cactus development
* Set FINAL = True in version.py
* pass the set_ip from ensure_vlan_bridge
* don't fail on ip add exists and recreate default route on ip move if needed
* initial support for dynamic instance_types: db migration and model, stub tests and stub methods
* better setup for flatdhcp
* added to inject networking data into the xenstore
* forgot context param for network_get_all
* Fixes bug #709057
* Add and document the provider_fw method in virt/FakeConnection
* Fix for LP Bug #709510
* merge trunk
* fix pep8 error :/
* Changed default handler for uncaughted exceptions. It uses logging instead print to stderr
* Launchpad automatic translations update
* rpartition sticks the rhs in [2]
* Fix for LP Bug #709510
* change ensure_bridge so it doesn't overwrite existing ips
* Fix for LP Bug #709510
* Enabled modification of projects using the EC2 admin API
* Reorder insance rules for provider rules immediately after base, before secgroups
* Merged trunk
* Match the initial db version to the actual Austin release db schema
* 1. Discard nova-manage host list Reason: nova-manage service list can be replacement. Changes: nova-manage
* Only run pep8 after tests if running all the tests
* add logging.basicConfig() to tests
* fix austin->bexar db migration
* woops
* trivial cleanup for context.py
* Made adminclient get_user return None instead of throwing EC2Exception if requested user not available
* pep8
* Added modify project to ec2 admin api
* incorporate feedback from devin - use sql consistently in instance_destroy also, set deleted_at
* Fixed whitespace
* Made adminclient get_user return None instead of throwing EC2Exception if requested user not available
* OS-55: Fix typo for libvirt_conn operation
* merge trunk
* remove extraneous line
* Fixed pep8 errors
* Changed default handler for uncaughted exceptions. Logging with level critical instead of print to stderr
* Disassociate all floating ips on terminate instance
* Fixes simple scheduler to able to be run_instance by admins + availability zones
* Makes having sphinx to build docs a conditional thing - if you have it, you can get docs. If you don't, you can't
* Fixed a pep8 spacing issue
* fixes for bug #709057
* Working on api / manager / db support for zones
* Launchpad automatic translations update
* Adds security group output to describe_instances
* Use firewall_driver flag as expected with NWFilterFirewall. This way, either you use NWFilterFirewall directly, or you use IptablesFirewall, which creates its own instance of NWFilterFirewall for the setup_basic_filtering command. This removes the requirement that LibvirtConnection would always need to know about NWFirewallFilter, and cleans up the area where the flag is used for loading the firewall class
* simplify get and remove extra reference to import logging
* Added a test that checks for localized strings in the source code that contain position-based string formatting placeholders. If found, an exception message is generated that summarizes the problem, as well as the location of the problematic code. This will prevent future trunk commits from adding localized strings that cannot be properly translated
* Made changes based on code review
* makes sure that : is in the availability zone before it attempts to use it to send instances to a particular host
* Makes sure all instance and volume commands that raise not found are changed to show the ec2_id instead of the internal id
* remove all floating addresses on terminate instance
* Merged in trunk changes
* Fixed formatting issues in current codebase
* Added the test for localized string formatting
* Fixes NotFound messages in api to show the ec2_id
* Changed cpu limit to a static value of 100000 (100%) instead of using the vcpu value of 1. There is no weight/limit variable now so I see no other solution than the static max limit
* Make nova.virt.images fetch images from a Glance URL when Glance is used as the image service (rather than unconditionally fetch them from an S3/objectstore URL)
* Fixed spacing... AGAIN
* Make unit tests clean up their mess in /tmp after themselves
* Make xml namespace match the API version requested
* Missing import in xen plugin
* Shortened comment for 80char limt
* Added missing import
* Naive, low-regression-risk fix enabling Glance to work with libvirt/hyperv
* Add unit test for xmlns version matching request version
* Properly pulling the name attribute from security_group
* adding testcode
* Fix Bug #703037. ra_server is None
* Fix regression in s3 image service. This should be a feature freeze exception
* I have a feeling if we try to migrate from imageId to id we'll be tracking it down a while
* more instanceId => id fixes
* Fix regression in imageId => id field rename in s3 image service
* Apply lp:707675 to this branch to be able to test
* merge trunk
* A couple of bugfixes
* Fixes a stupid mistake I made when I moved this method from a module into a class
* Add dan.prince to Authors
* Make xml namespace match the API version requested
* Fix issue in s3.py causing where '_fix_image_id' is not defined
* added mapping parameter to write_network_config_to_xenstore
* OS-55: Added a test case for XenAPI file-based network injection OS-55: Stubbed out utils.execute for all XenAPI VM tests, including command simulation where necessary
* Simple little changes related to openstack api to work better with glance
* Merged trunk
* Cleaned up _start() and _shutdown()
* Added missing int to string conversion
* Simple little changes related to openstack api to work better with glance
* use 'ip addr change'
* Fix merge miss
* Changed method signature of create_network
* merged r621
* Merged with http://bazaar.launchpad.net/~vishvananda/nova/lp703037
* Merged with vish branch
* Prefixed ending multi-line docstring with a newline
* Fixing documentation strings. Second attempt at pep8
* Removal of image tempdir in test tearDown. Also, reformatted a couple method comments to match the file's style
* Add DescribeInstanceTypes to admin api. This lets the dashboard know what sizes can be launched (using the -t flag in euca-run-instances, for example) and what resources they provide
* Rename Mock, since it wasn't a Mock
* Add DescribeInstanceTypes to admin api (dashboard uses it)
* Fix for LP Bug #699654
* Change how libvirt firewall drivers work to have meaningful flags
* Fixed pep8 errors
* This branch updates docs to reflect the db sync addition. It additionally adds some useful errors to nova-manage to help people that are using old guides. It wraps sqlalchemy errors in generic DBError. Finally, it updates nova.sh to use current settings
* Added myself to the authors list
* fix pep8 issue (and my commit hook that didn't catch it)
* Add a host argument to virt drivers's init_host method. It will be set to the name of host it's running on
* merged trunk
* Wraps the NotFound exception at the api layer to print the proper instance id. Does the same for volume. Note that euca-describe-volumes doesn't pass in volume ids properly, so you will get no error messages on euca-describe-volumes with improper ids. We may also need to wrap a few other calls as well
* Fixes issue with SNATTING chain not getting created or added to POSTROUTING when nova-network starts
* Fix for bug #702237
* Moving init_host before metadata_forward, as metadata_forward modifies prerouting rules
* another trunk merge
* Limit all lines to a maximum of 79 characters
* Perform same filtering for OUTPUT as FORWARD in iptables
* Fixed up a little image_id return
* Trunk merged
* This patch:
* Trunk merged
* In instance chains and rules for ipv4 and ipv6, ACCEPT target was missing
* moved imageId change to s3 client
* Migration for provider firewall rules
* Updates for provider_fw_rules in admin api
* Adds driver.init_host() call to flatdhcp driver
* Fixed pep8 errors
* Fixed pep8 errors
* No longer hard coding to "/tmp/nova/images/". Using tempdir so tests run by different people on the same development machine pass
* Perform same filtering for OUTPUT as FORWARD in iptables. This removes a way around the filtering
* Fix pep-8 problem from prereq branch
* Add a host argument to virt driver's init_host method. It will be set to the name of host it's running on
* updated authors since build is failing
* Adds conditional around sphinx inclusion
* merge with trunk
* Fixes project and role checking when a user's naming attribute is not uid
* I am new to nova, and wanted to fix a fairly trivial bug in order to understand the process
* Fix for LP Bug #707554
* Added iptables rule to IptablesFirewallDriver like in Hisaharu Ishii patch with some workaround
* Set the default number of IP's to to reserve for VPN to 0
* Merged with r606
* Properly fixed spacing issue for pep8
* Fixed spacing issue for pep8
* Fixed merge conflict
* Added myself to ./Authors file
* Switches from project_get_network to network_get_by_instance, which actually works with all networking modes. Also removes a couple duplicate lines from a bad merge
* Set the default number of IP's to to reserver for VPN to 0
* Localized strings that employ formatting should not use positional arguments, as they prevent the translator from re-ordering the translated text; instead, they should use mappings (i.e., dicts). This change replaces all localized formatted strings that use more than one formatting placeholder with a mapping version
* add ip and network to nwfilter test
* merged ntt branch
* use network_get_by_instance
* Added myself (John Dewey) to Authors
* corrected nesting of the data dictionary
* Updated a couple data structures to pass pep8
* Added static cpu limit of 100000 (100%) to hyperv.py instead of using the vcpu value of 1
* PEP8 fixes
* Changes __dn_to_uid to return the uid attribute from the user's object
* OS-55: PEP8 fixes
* merged branch to name net_manager.create_networks args
* the net_managers expect different args to create_networks, so nova-manage's call to net_manager.create_networks was changed to use named args to prevent argument mismatching
* OS-55: Post-merge fixes
* Fix describe_regions by changing renamed flags. Also added a test to catch future errors
* changed nova-manage to use named arguments to net_manager.create_networks
* Merged trunk
* Removed tabs form source. Merged trunk changes
* allow docs to build in virtualenv prevent setup.py from failing with sphinx in virtualenv
* fixes doc build and setup.py fail in virtualenv
* fix reversed assignment
* fixes and refactoring of smoketests
* remove extra print
* add test and fix describe regions
* merged trunk
* This patch skips VM shutdown if already in the halted state
* Use Glance to relate machine image with kernel and ramdisk
* Skip shutdown if already halted
* Refactoring _destroy into steps
* i18n!
* merged trunk fixed whitespace in rst
* wrap sqlalchemy exceptions in a generic error
* Wrap instance at api layer to print the proper error. Use same logic for volumes
* This patch adds two flags:
* Using new style logging
* Adding ability to remap VBD device
* Resolved trunk merge conflicts
* Adds gettext to pluginlib_nova.py. Fixes #706029
* Adding getttext to pluginlib_nova
* Add provider_fw_rules awareness to iptables firewall driver
* No longer chmod 0777 instance directories, since nova works just fine without them
* Updated docs for db sync requirements; merged with Vish's similar doc updates
* Change default log formats so that: * they include a timestamp (necessary to correlate logs) * no longer display version on every line (shorter lines) * use [-] instead of [N/A] (shorter lines, less scary-looking) * show level before logger name (better human-readability)
* OS55: pylint fixes
* OS-55: Added unit test for network injection via xenstore
* fixed typo
* OS-55: Fix current unit tests
* Fixed for pep8
* Merged with rev597
* No longer chmod 0777 instance directories
* Reverted log type from error to audit
* undid moving argument
* Fix for LP Bug #699654
* moved argument for label
* fixed the migration
* really added migration for networks label
* added default label to nova-manage and create_networks
* syntax
* syntax error
* added plugin call for resetnetworking
* Fix metadata using versions other than /later. Patch via ~ttx
* should be writing some kindof network info to the xenstore now, hopefully
* Use ttx's patch to be explict about paths, as urlmap doesn't work as I expected
* Doc changes for db sync
* Fixes issue with instance creation throwing errors when non-default groups are used
* Saving a database call by getting the security groups from the instance object
* Fixes issue with describe_instances requiring an admin context
* OS-55: pylint fixes
* Fixing another instance of getting a list of ids instead of a list of objects
* Adds security group output to describe_instances
* Finds and fixes remaining strings for i18n. Fixes bug #705186
* Pass a PluginManager to nose.config.Config(). This lets us use plugins like coverage, xcoverage, etc
* i18n's strings that were missed or have been added since initial i18n strings branch
* OS-55: Only modify Linux image with no or injection-incapable guest agent OS-55: Support network configuration via xenstore for Windows images
* A couple of copypasta errors
* Keep exception tracing as it was
* Pass a PluginManager to nose.config.Config(). This lets us use plugins like coverage, xcoverage, etc
* Also print version at nova-api startup, for consistency
* Add timestamp to default log format, invert name and level for better readability, log version once at startup
* When radvd is already running, not to hup, but to restart
* fix ipv6 conditional
* more smoketest fixes
* Passing in an elevated context instead of making the call non-elevated
* Added changes to make errors and recovery for volumes more graceful:
* Fetches the security group from ID, allowing the object to be used properly, later
* Changing service_get_all_by_host to not require admin context as it is used for describing instances, which any user in a project can do
* Exclude vcsversion.py from pep8 check. It's not compliant, but out of our control
* Exclude vcsversion.py from pep8 check. It's not compliant, but out of our control
* Include paste config in tarball
* Add etc/ directory to tarball
* Fixes for bugs:
* Return non-zero if either unit tests or pep8 fails
* Eagerly load fixed_ip.network in instance_get_by_id
* Add Rob Kost to Authors
* Return non-zero if either unit tests or pep8 fails
* Merged trunk
* merge trunk
* Add paste and paste.deploy installation to nova.sh, needed for api server
* Updated trunk changes to work with localization
* Implement provider-level firewall rules in nwfilter
* Whitespace (pep8) cleanups
* Exception string lacking 'G' for gigabytes unit
* Fixes **params unpacking to ensure all kwargs are strings for compatibility with python 2.6.1
* make sure params have no unicode keys
* Removed unneeded line
* Merged trunk
* Refactor run_tests.sh to allow us to run an extra command after the tests
* update the docs to reflect db sync as well
* add helpful error messages to nova-manage and update nova.sh
* Fixed unit tests
* Merged trunk
* fixed pep8 error
* Eagerly load instance's fixed_ip.network attribute
* merged trunk changes
* minor code cleanup
* minor code cleanup
* remove blank from Authors
* .mailmap rewrite
* .mailmap updated
* Refactor run_tests.sh to allow us to run an extra command after the tests
* Add an apply_instance_filter method to NWFilter driver
* PEP-8 fixes
* Revert Firewalldriver
* Replace an old use of ec2_id with id in describe_addresses
* various fixes to smoketests, including allowing admin tests to run as a user, better timing, and allowing volume tests to run on non-udev linux
* merged trunk
* replace old ec2_id with proper id in describe_addresses
* merge vish's changes (which merged trunk and fixed a pep8 problem)
* merged trunkand fixed conflicts and pep error
* get_my_linklocal raises exception
* Completed first pass at converting all localized strings with multiple format substitutions
* Allows moving from the Austin-style db to the Bexar-style
* move db sync into nosetests package-level fixtures so that the existing nosetests attempt in hudson will pass
* previous commit breaks volume.driver. fix it.
* per vish's feedback, allow admin to specify volume id in any of the acceptable manners (vol-, volume-, and int)
* Merged trunk
* Fixed unit tests
* Fix merge conflict
* add two more columns, set string lengths)
* Enable the use_ipv6 flag in unit tests by default
* Fixed unit tests
* merge from upstream and fix small issues
* merged to trunk rev572
* fixed based on reviewer's comment
* Basic stubbing throughout the stack
* Enable the use_ipv6 flag in unit tests by default
* Add an apply_instance_filter method to NWFilter driver
* update status to 'error_deleting' on volumes where deletion fails
* Merged trunk
* This disables ipv6 by default. Most use cases will not need it on and it makes dependencies more complex
* The live_migration branch ( https://code.launchpad.net/~nttdata/nova/live-migration/+merge/44940 ) was not ready to be merged
* merge from upstream to fix conflict
* Trunk merge
* s/cleanup/volume. volume commands will need their own ns in the long run
* disable ipv6 by default
* Merged trunk
* Plug VBD to existing instance and minor cleanup
* fixes related to #701749. Also, added nova-manage commands to recover from certain states:
* Implement support for streaming images from Glance when using the XenAPI virtualization backend, as per the bexar-xenapi-support-for-glance blueprint
* Works around the app-armor problem of requiring disks with backing files to be named appropriately by changing the name of our extra disks
* fix test to respect xml changes
* merged trunk
* Add refresh_security_group_* methods to nova/virt/fake.py, as FakeConnection is the reference for documentation and method signatures that should be implemented by virt connection drivers
* added paste pastedeploy to nova.sh
* authors needed for test
* revert live_migration branch
* This removes the need for the custom udev rule for iscsi devices. It instead attaches the device based on /dev/disk/by-path/ which should make the setup of nova-volume a little easier
* Merged trunk
* Risk of Regression: This patch don’t modify existing functionlities, but I have added some. 1. nova.db.service.sqlalchemy.model.Serivce (adding a column to database) 2. nova.service ( nova-compute needes to insert information defined by 1 above)
* Docstrings aren't guaranteed to exist, so split() can't automatically be called on a method without first checking for the method docstring's existence. Fixes Bug #704447
* Removes circular import issues from bin/stack and replaces utils.loads with json.loads. Fixes Bug#704424
* ComputeAPI -> compute.API in bin/nova-direct-api. Fixes LP#704422
* Fixed apply_instance_filter is not implemented in NWFilterFirewall
* pep8
* I might have gone overboard with documenting _members
* Add rules to database, cast refresh message and trickle down to firewall driver
* Fixed error message in get_my_linklocal
* openstack api fixes for glance
* Stubbed-out code for working with provider-firewalls
* Merged trunk
* Merged with trunk revno 572
* Better shutdown handling
* Change where paste.deploy factories live and how they are called. They are now in the nova.wsgi.Application/Middleware classes, and call the __init__ method of their class with kwargs of the local configuration of the paste file
* Further decouple api routing decisions and move into paste.deploy configuration. This makes paste back the nova-api binary
* Clean up openstack api test fake
* Merged trunk
* Add Start/Shutdown support to XenAPI
* The Openstack API requires image metadata to be returned immediately after an image-create call
* merge trunk
* Fixing whitespace
* Returning image_metadata from snapshot()
* Merging trunk
* Merged trunk
* merged trunk rev569
* merged to rev 561 and fixed based on reviewer's comment
* Adds a developer interface with direct access to the internal inter-service APIs and a command-line tool based on reflection to interact with them
* merge from upstream
* pep8 fixes... largely to things from trunk?
* merge from upstream
* pep8
* remove print statement
* This branch fixes two outstanding bugs in compute. It also fixes a bad method signature in network and removes an unused method in cloud
* Re-removes TrialTestCase. It was accidentally added in by some merges and causing issues with running tests individually
* removed rpc in cloud
* merged trial fix again
* fix bad function signature in create_networks
* undo accidental removal of fake_flags
* Merged trunk
* merged lp:~vishvananda/nova/lp703012
* remove TrialTestCase again and fix merge issues
* import re, remove extra call in cloud.py. Move get_console_output to compute_api
* Create and use a generic handler for RPC calls to compute
* Create and use a generic handler for RPC calls to compute
* Create and use a generic handler for RPC calls
* Merged trunk
* OS-55: Inject network settings in linux images
* Merged with trunk revno 565
* use .local and .rescue for disk images so they don't make app-armor puke
* Implements the blueprint for enabling the setting of the root/admin password on an instance
* OpenStack Compute (Nova) IPv4/IPv6 dual stack support http://wiki.openstack.org/BexarIpv6supportReadme
* Merged to rev.563
* This change introduces support for Sheepdog (distributed block storage system) which is proposed in https://blueprints.launchpad.net/nova/+spec/sheepdog-support
* Sort Authors
* Update Authors
* merge from upstream:
* pep8 fixes
* update migration script to add new tables since merge
* sort Authors
* Merged with r562
* This modifies libvirt to use CoW images instead of raw images. This is much more efficient and allows us to use the snapshotting capabilities available for qcow2 images. It also changes local storage to be a separate drive instead of a separate partition
* pep8. Someday I'll remember 2 blank lines between module methods
* remove ">>>MERGE" iin nova/db/sqlalchemy/api.py
* checking based on pep8
* merged trunk
* Modified per sorens review
* Fix for Pep-8
* Merged with r561
* Moved commands which needs sudo to nova.sh
* Added netaddr for pip-requires
* Marking snapshots as private for now
* Merging Trunk
* Fixing Image ID workaround and typo
* Fixed based on the comments from code review. Merged to trunk rev 561
* Add a new method to firewall drivers to tell them to stop filtering a particular instance. Call it when an instance has been destroyed
* merged to trunk rev 561
* Merged trunk
* merge trunk rev560
* Fixes related to how EC2 ids are displayed and dealt with
* Get reviewed and fixed based on comments. Merged latest version
* Make libvirt and XenAPI play nice together
* Spelling is hard. Typing even moreso
* Revert changes to version.py
* Minor code cleanups
* Minor code cleanups
* Minor code cleanups
* Make driver calls compatible
* Merged trunk
* Stubbed out XenServer rescue/unrescue
* Added unit tests for the Diffie-Hellman class. Merged recent trunk changes
* Bring NWFilter driver up to speed on unfilter_instance
* Replaced home-grown Diffie-Hellman implementation with the M2Crypto version supplied by Soren
* Instead of a set() to keep track of instances and security groups, use a dict(). __eq__ for stuff coming out of sqlalchemy does not do what I expected (probably due to our use of sessions)
* Fixes broken call to __generate_rc in auth manager
* Fixes bug #701055. Moves code for instance termination inline so that the manager doesn't prematurely mark an instance as deleted. Prematurely doing so causes find calls to fail, prevents instance data from being deleted, and also causes some other issues
* Revert r510 and r512 because Josh had already done the same work
* merged trunk
* Fixed Authors
* Merged with 557
* Fixed missing _(). Fixed to follow logging to LOG changes. Fixed merge miss (get_fixed_ip was moved away). Update some missing comments
* merge from upstream and fix leaks in console tests
* make sure get_all returns
* Fixes a typo in the name of a variable
* Fixes #701055. Move instance termination code inline to prevent manager from prematurely marking it as destroyed
* fix invalid variable reference in cloud api
* fix indentation
* add support for database migration
* fix changed call to generate_rc
* merged with r555
* fixed method signature of modify_rules fixed unit_test for ipv6
* standardize volume ids
* standardize volume ids
* standardize on hex for ids, allow configurable instance names
* correct volume ids for ec2
* correct formatting for volume ids
* Fix test failures on Python 2.7 by eagerly loading the fixed_ip attribute on instances. No clue why it doesn't affect python 2.6, though
* Adding TODO to clarify status
* Merging trunk
* Do joinedload_all('fixed_ip.floating_ips') instead of joinedload('fixed_ip')
* Initialize logging in nova-manage so we don't see errors about missing handlers
* _wait_with_callback was changed out from under suspend/resume. fixed
* Make rescue/unrescue available to API
* Stop error messages for logs when running nova-manage
* Fixing stub so tests pass
* Merging trunk
* Merging trunk, small fixes
* This branch adds a backend for using RBD (RADOS Block Device) volumes in nova via libvirt/qemu. This is described in the blueprint here: https://blueprints.launchpad.net/nova/+spec/ceph-block-driver
* Fix url matching for years 2010-forward
* Update config for launching logger with cleaner factory
* Update paste config for ec2 request logging
* merged changes from trunk
* cleaned up prior merge mess
* Merged trunk
* My previous modifications to novarc had CLOUDSERVER_AUTH_URL pointing to the ec2 api port. Now it's correctly pointing to os api port
* Check for whole pool name in check_for_setup_error
* change novarc template from cc_port to osapi_port. Removed osapi_port from bin scripts
* Start to add rescue/unrescue support
* fixed pause and resume
* Fixed another issue in _stream_disk, as it did never execute _write_partition. Fixed fake method accordingly. Fixed pep8 errors
* pep8 fixes
* Fixing the stub for _stream_disk as well
* Fix for _stream_disk
* Merged with r551
* Support IPv6 firewall with IptablesFirewallDriver
* Fixed syntax errors
* Check whether 'device_path' has ':' before splitting it
* PEP8 fixes, and switch to using the new LOG in vm_utils, matching what's just come in from trunk
* Merged with trunk
* Merged with Orlando's recent changes
* Added support of availability zones for compute. models.Service got additional field availability_zone and was created ZoneScheduler that make decisions based on this field. Also replaced fake 'nova' zone in EC2 cloud api
* Eagerly load fixed_ip property of instances
* Had to abandon the other branch (~annegentle/nova/newscript) because the diffs weren't working right for me. This is a fresh branch that should be merged correctly with trunk. Thanks for your patience. :)
* Added unit tests for the xenapi-glance integration. This adds a glance simulator that can stub in place of glance.client.Client, and enhances the xapi simulator to add the additional calls that the Glance-specific path requires
* Merged with 549
* Change command to get link local address Remove superfluous code
* This branch adds web based serial console access. Here is an overview of how it works (for libvirt):
* Merged with r548
* Fixed bug
* Add DescribeInstanceV6 for backward compatibility
* Fixed test environments. Fixed bugs in _fetch_image_objecstore and _lookup_image_objcestore (objectstore was broken!) Added tests for glance
* Fixed for pep8 Remove temporary debugging
* changed exception class
* Changing DN creation to do searches for entries
* Fixes bug #701575: run_tests.sh fails with a meaningless error if virtualenv is not installed. Proposed fix tries to use easy_install to install virtualenv if not present
* merge trunk, fix conflict
* more useful prefix and fix typo in string
* use by-path instead of custom udev script
* Quick bugfix. Also make the error message more specific and unique in the equivalent code in the revoke method
* remove extra whitspaces
* Raise meaningful exception when there aren't enough params for a sec group rule
* bah - pep8 errors
* resolve pylint warnings
* Removing script file
* Read Full Spec for implementation details and notes on how to boot an instance using OS API. http://etherpad.openstack.org/B2RK0q1CYj
* Added my name to Authors list
* Changes per Edays comments
* Fixed a number of issues with the iptables firewall backend: * Port specifications for firewalls come back from the data store as integers, but were compared as strings. * --icmp-type was misspelled as --icmp_type (underscore vs dash) * There weren't any unit tests for these issues
* merged trunk changes
* Removed unneeded SimpleDH code from agent plugin. Improved handling of plugin call failures
* Now tries to install virtualenv via easy_install if not present
* Merging trunk
* fixed issue in pluginlib_nova.py
* Trunk merge and conflcts resolved
* Implementation of xs-console blueprint (adds support for console proxies like xvp)
* Fixed a number of issues with the iptables firewall backend: * Port specifications for firewalls come back from the data store as integers, but were compared as strings. * --icmp-type was misspelled as --icmp_type (underscore vs dash) * There weren't any unit tests for these issues
* Add support for EBS volumes to the live migration feature. Currently, only AoE is supported
* Changed shared_ip_group detail routing
* Changed shared_ip_group detail routing
* A few more changes to the smoeketests. Allows smoketests to find the nova package from the checkout. Adds smoketests for security groups. Also fixes a couple of typos
* Fixes the metadata forwarding to work by default
* Adds support to nova-manage to modify projects
* Add glance to pip-requires, as we're now using the Glance client code from Nova
* Now removing kernel/ramdisk VDI after copy Code tested with PV and HVM guests Fixed pep8 errors
* merged trunk changes
* consolidate boto_extensions.py and euca-get-ajax-console, fix bugs from previous trunk merge
* Fixed issues raised by reviews
* xenapi_conn was not terminating utils/LoopingCall when an exception was occurring. This was causing the eventlet Event to have send_exception() called more than once (a no-no)
* merge trunk
* whups, fix accidental change to nova-combined
* remove uneeded superclass
* Bugfix
* Adds the requisite infrastructure for automating translation templates import/export to Launchpad
* Added babel/gettext build support
* Can now correctly launch images with external kernels through glance
* re-merged in trunk to correct conflict
* Fix describe_availablity_zones versobse
* Typo fix
* merged changes from trunk
* Adding modify option for projects
* Fixes describe_instances to filter by a list of instance_ids
* Late import module for register_models() so it doesn't create the db before flags are loaded
* Checks for existence of volume group using vgs instead of checking to see if /dev/nova-volumes exists. The dev is created by udev and isn't always there even if the volume group does exist
* Add a new firewall backend for libvirt, based on iptables
* Create LibvirtConnection directly, rather than going through libvirt_conn.get_connection. This should remove the dependency on libvirt for tests
* Fixed xenapi_conn wait_for_task to properly terminate LoopingCall on exception
* Fixed xenapi_conn wait_for_task to properly terminate LoopingCall on exception
* Fixed xenapi_conn wait_for_task to properly terminate LoopingCall on exception
* optimize to call get if instance_id is specified since most of the time people will just be requesting one id
* fix describe instances + test
* Moved get_my_ip into flags because that is the only thing it is being used for and use it to set a new flag called my_ip
* fixes Document make configuration by updating nova version mechanism to conform to rev530 update
* alphbetized Authors
* added myself to authors and fixed typo to follow standard
* typo correction
* fixed small glitch in _fetch_image_glance virtual_size = imeta['size']
* fixed doc make process for new nova version (rev530) machanism
* late import module for register_models() so it doesn't create the db before flags are loaded
* use safer vgs call
* Return proper region info in describe_regions
* change API classname to match the way other API's are done
* small cleanups
* First cut at implementing partition-adding in combination with the Glance streaming. Untested
* some small cleanups
* merged from upstream and made applicable changes
* Adds a mechanism to programmatically determine the version of Nova. The designated version is defined in nova/version.py. When running python setup.py from a bzr checkout, information about the bzr branch is put into nova/vcsversion.py which is conditionally imported in nova/version.py
* Return region info in the proper format
* Now that we aren't using twisted we can vgs to check for the existence of the volume group
* s/canonical_version/canonical_version_string/g
* Fix indentation
* s/string_with_vcs/version_string_with_vcs/g
* Some fixes to _lookup_image_glance: fix the return value from lookup_image, attach the disk read-only before running pygrub, and add some debug logging
* Reverted formatting change no longer necessary
* removed a merge conflict line I missed before
* merged trunk changes
* set the hostname factory in the service init
* incorporated changes suggested by eday
* Add copyright and license info to version.py
* Fixes issue in trunk with downloading s3 images for instance creation
* Fix pep8 errors
* Many fixes to the Glance integration
* Wrap logs so we can: * use a "context" kwarg to track requests all the way through the system * use a custom formatter so we get the data we want (configurable with flags) * allow additional formatting for debug statements for easer debugging * add an AUDIT level, useful for noticing changes to system components * use named logs instead of the general logger where it makes sesnse
* pep8 fixes
* Bug #699910: Nova RPC layer silently swallows exceptions
* Bug #699912: When failing to connect to a data store, Nova doesn't log which data store it tried to connect to
* Bug #699910: Nova RPC layer silently swallows exceptions
* pv/hvm detection with pygrub updated for glance
* Bug #699912: When failing to connect to a data store, Nova doesn't log which data store it tried to connect to
* Resolved merge differences
* Additional cleanup prior to pushing
* Merged with trunk
* Fixing unescaped quote in nova-CC-install.sh script plus formatting fixes to multinode install
* getting ready to push for merge prop
* Fixing headers line by wrapping the headers in single quotes
* Less code generation
* grabbed the get_info fix from my other branch
* merged changes from trunk
* Remove redundant import of nova.context. Use db instance attribute rather than module directly
* Merging trunk
* Removing some FIXMEs
* Reserving image before uploading
* merge
* Half-finished implementation of the streaming from Glance to a VDI through nova-compute
* Fix Nova not to immediately blow up when talking to Glance: we were using the wrong URL to get the image metadata, and ended up getting the whole image instead (and trying to parse it as json)
* another merge with trunk to remedy instance_id issues
* merge
* Include date in API action query
* Review feedback
* This branch implements lock functionality. The lock is stored in the compute worker database. Decorators have been added to the openstack API actions which alter instances in any way
* Review feedback
* Review feedback
* Review feedback
* typo
* refers to instance_id instead of instance_ref[instance_id]
* passing the correct parameters to decorated function
* accidentally left unlocked in there, it should have been locked
* various cleanup and fixes
* merged trunk
* pep8
* altered argument handling
* Got the basic 'set admin password' stuff working
* Include date in action query
* Let documentation get version from nova/version.py as well
* Add default version file for developers
* merge pep8 fixes from newlog2
* Track version info, and make available for logging
* pep8
* Merged trunk
* merge pep8 and tests from wsgirouter branch
* Remove test for removed class
* Pep8
* pep8 fix
* merged trunk changes
* commit before merging trunk
* Fixes format_instances error by passing reservation_id as a kwarg instead of an arg. Also removes extraneous yields in test_cloud that were causing tests to pass with broken code
* Remove module-level factory methods in favor of having a factory class-method on wsgi components themselves. Local options from config are passed to the __init__ method of the component as kwargs
* fix the broken tests that allowed the breakage in format to happen
* Fix format_run_instances to pass in reservation id as a kwarg
* Add factories into the wsgi classes
* Add blank __init__ file for fixing importability. The stale .pyc masked this error locally
* merged trunk changes
* Introduces basic support for spawning, rebooting and destroying vms when using Microsoft Hyper-V as the hypervisor. Images need to be in VHD format. Note that although Hyper-V doesn't accept kernel and ramdisk separate from the image, the nova objectstore api still expects an image to have an associated aki and ari. You can use dummy aki and ari images -- the hyper-v driver won't use them or try to download them. Requires Python's WMI module
* merged trunk changes
* Renamed 'set_root_password' to 'set_admin_password' globally
* merge with trunk
* renamed sharedipgroups to shared_ip_groups and fixed tests for display_name
* Fix openstack api tests and add a FaultWrapper to turn exceptions to faults
* Fixed display_name on create_instance
* fix some glitches due to someone removing instanc.internal_id (not that I mind) remove accidental change to nova-combined script
* Fixed trunk merge conflicts as spotted by dubs
* OS API parity: map image ID to numeric ID. Ensure all other OS operations are at least stubbed out and callable
* add in separate public hostname for console hosts. flesh out console api data
* allow smoketests to find nova package and add security rules
* Fix a bunch of pep8 stuff
* This addition to the docs clarifies that it is a requirement for contributors to be listed in the Authors file before their commits can be merged to trunk
* merge trunk
* another merge from trunk to the latest rev
* pulled changes from trunk added console api to openstack api
* Removed dependencies on nova server components for the admin client
* Remove stale doc files so the autogeneration extension for sphinx will work properly
* Add to Authors and mailmap
* Make test case work again
* This branch contains the internal API cleanup branches I had previously proposed, but combined together and with all the UUID key replacement ripped out. This allows multiple REST interfaces (or other tools) to use the internal API directly, rather than having the logic tied up in the ec2 cloud.py file
* socat will need to be added to our nova sudoers
* merged trunk changes
* intermediate work
* Created a XenAPI plugin that will allow nova code to read/write/delete from xenstore records for a given instance. Added the basic methods for working with xenstore data to the vmops script, as well as plugin support to xenapi_conn.py
* Merged trunk
* Recover from a lost data store connection
* Updated register_models() docstring
* simplify decorator into a wrapper fn
* add in xs-console worker and tests
* pep8 cleanup
* more fixes, docstrings
* fix injection and xml
* Fixing formatting problems with multinode install document
* Split internal API get calls to get and get_all, where the former takes an ID and returns one resource, and the latter can optionally take a filter and return a list of resources
* missing _()
* Fixed for pep8
* Fixed:Create instance fails when use_ipv6=False
* Removed debug message which is not needed
* Fixed misspelled variable
* Fixed bug in nova_project_filter_v6
* The _update method in base Instance class overides dns_name_v6,so fixed it
* self.XENAPI..
* Changed Paused power state from Error to Paused
* fixed json syntax error
* stop using partitions and first pass at cow images
* Remove stale doc files
* pep8
* tests fixed up
* Better method for eventlet.wsgi.server logging
* Silence eventlet.wsgi.server so it doesn't go to stdout and pollute our logs
* Declare a flag for test to run in isolation
* Build app manually for test_api since nova.ec2.API is gone
* Recover from a lost data store connection
* Added xenstore plugin changed
* merged changes from trunk
* some more cleanup
* need one more newline
* Redis dependency no longer needed
* Make test_access use ec2.request instead of .controller and .action
* Revert some unneeded formatting since twistd is no longer used
* pep8 fixes
* Remove flags and unused API class from openstack api, since such things are specified in paste config now
* i18n logging and exception strings
* remove unused nova/api/__init__.py
* Make paste the default api pattern
* Rework how routing is done in ec2 endpoint
* Change all 2010 Copyright statements to 2010-2011 in doc source directory only
* rename easy to direct in the scripts
* fix typo in stack tool
* rename Easy API to Direct API
* Moved __init__ api code to api.py and changed allowed_instances quota method argument to accept all type data, not just vcpu count
* Made the plugin output fully json-ified, so I could remove the exception handlers in vmops.py. Cleaned up some pep8 issues that weren't caught in earlier runs
* merged from trunk
* Renamed argument to represent possible types in volume_utils
* Removed leftover UUID reference
* Removed UUID keys for instance and volume
* Merged trunk
* Final edits to multi-node doc and install script
* Merged trunk changes
* Some Bug Fix
* Fixed bug in libvirt
* Fixed bug
* Fixed for pep8
* Fixed conflict with r515
* Merged and fiexed conflicts with r515
* some fixes per vish's feedback
* Don't know where that LOG went..
* Final few log tweaks, i18n, levels, including contexts, etc
* Apply logging changes as a giant patch to work around the cloudpipe delete + add issue in the original patch
* dabo fix to update for password reset v2
* krm_mapping.json sample file added
* dabo fix to update for password reset
* added cloudserver vars to novarc template
* Update Authors
* Add support for rbd volumes
* Fixes LP688545
* First pass at feature parity. Includes Image ID hash
* Fixing merge conflicts with new branch
* merged in trunk changes
* Fixing merge conflicts
* Fixes LP688545
* Make sure we point to the right PPA's everywhere
* Editing note about the database schema available on the wiki
* Modifying based on reviewer comments
* Uses paste.deploy to make application running configurable. This includes the ability to swap out middlewares, define new endpoints, and generally move away from having code to build wsgi routers and middleware chains into a configurable, extensible method for running wsgi servers
* Modifications to the nova-CC-installer.sh based on review
* Adds the pool_recycle option to the sql engine startup call. This enables connection auto-timeout so that connection pooling will work properly. The recommended setting (per sqlalchemy FAQ page) has been provided as a default for a new configuration flag. What this means is that if a db connection sits idle for the configured # of seconds, the engine will automatically close the connection and return it to the available thread pool. See Bug #690314 for info
* Add burnin support. Services are now by default disabled, but can have instances and volumes run on them using availability_zone = nova:HOSTNAME. This lets the hardware be put through its paces without being put in the generally available pool of hardware. There is a 'service' subcommand for nova-manage where you can enable, disable, and list statuses of services
* pep8 fixes
* Merged compute-api-cleanup branch
* Removed compute dependency in quota.py
* add timeout constant, set to 5 minutes
* removed extra whitespace chars at the end of the changed lines
* Several documentation corrections and formatting fixes
* Minor edits prior to merging changes to the script file
* add stubs for xen driver
* merge in trunk
* merged latest trunk
* merge trunk
* merge trunk
* temp
* Stop returning generators in the refresh_security_group_{rules,members} methods
* Don't lie about which is the default firewall implementation
* Move a closing bracket
* Stub out init_host in libvirt driver
* Adjust test suite to the split between base firewall rules provided by nwfilter and the security group filtering
* Fix a merge artifact
* Remove references to nova-core/ppa and openstack/ppa PPA's
* Updated the password generation code
* Add support for Sheepdog volumes
* Add support for various block device types (block, network, file)
* Added agent.py plugin. Merged xenstore plugin changes
* fixed pep8 issues
* Added OpenStack's copyright to the xenstore plugin
* fixed pep8 issues
* merged in trunk and xenstore-plugin changes
* Ignore CA/crl.pem
* Before merge with xenstore-plugin code
* Corrected the sloppy import in the xenstore plugin that was copied from other plugins
* Ignore CA/crl.pem
* Merged trunk
* Merged trunk
* deleting README.livemigration.txt and nova/livemigration_test/*
* Merged trunk
* Merged trunk
* 最新バージョンにマージ。変更点は以下の通り。 Authorsに自分の所属を追加 utils.pyのgenerate_uidがおかしいのでインスタンスIDがオーバーフローしていたが、 その処理を一時撤廃。後で試験しなおしとすることにした。
* Merged trunk
* Auth Tokens assumed the user_id was an int, not a string
* Removed dependencies on flags.py from adminclient
* Make InstanceActions and live diagnostics available through the Admin API
* Cleanup
* Improved test
* removed some debugging code left in previous push
* Converted the pool_recycle setting to be a flag with a default of 3600 seconds
* completed the basic xenstore read/write/delete functionality
* Removed problematic test
* PEP8 fix
* * Fix bad query in __project_to_dn * use __find_dns instead of __find_objects in __uid_to_dn and __project_to_dn
* Moved network operation code in ec2 api into a generic network API class. Removed a circular dependency with compute/quota
* Oopsies
* merge trunk
* merge trunk
* Make compute.api methods verbs
* Fail
* Review feedback
* Cleans up the output of run_tests.sh to look closer to Trial
* change exit code
* Changing DN creation to do searches for entries
* Merged trunk
* Implemented review feedback
* This patch is beginning of XenServer snapshots in nova. It adds:
* Merged trunk
* Calling compute api directly from OpenStack image create
* Several documentation corrections
* merge recent revision(version of 2010/12/28) Change: 1. Use greenthread instead of defer at nova.virt.libvirt_conn.live_migration. 2. Move nova.scheduler.manager.live_migration to nova.scheduler.driver 3. Move nova.scheduler.manager.has_enough_resource to nova.scheduler.driver 4. Any check routine in nova-manage.instance.live_migration is moved to nova.scheduler.driver.schedule_live_migration
* Merging trunk
* Note that contributors are required to be listed in Authors file before work can be merged into trunk
* Mention Authors and .mailmap files in Developer Guide
* pep 8
* remove cloudpipe from paste config
* Clean up how we determine IP to bind to
* Converted a few more ec2 calls to use compute api
* Cleaned up the compute API, mostly consistency with other parts of the system and renaming redundant module names
* fixed the compute lock test
* altered the compute lock test
* removed tests.api.openstack.test_servers test_lock, to hell with it. i'm not even sure if testing lock needs to be at this level
* fixed up the compute lock test, was failing because the context was always admin
* syntax error
* moved check lock decorator from the compute api to the come manager... when it rains it pours
* removed db.set_lock, using update_instance instead
* added some logging
* typo, trying to hurry.. look where that got me
* altered error exception/logging
* altered error exception/logging
* fixd variables being out of scope in lock decorator
* moved check lock decorator to compute api level. altered openstack.test_servers according and wrote test for lock in tests.test_compute
* Moved ec2 volume operations into a volume API interface for other components to use. Added attach/detach as compute.api methods, since they operate in the context of instances (and to avoid a dependency loop)
* pep8 fix, and add in flags that don't refernece my laptop
* apt-get install socat, which is used to connect to the console
* removed lock check from show and changed returning 404 to 405
* fix lp:695182, scheduler tests needed to DECLARE flag to run standalone
* removed () from if (can't believe i did that) and renamed checks_lock decorator
* Add the pool_recycle setting to enable connection pooling features for the sql engine. The setting is hard-coded to 3600 seconds (one hour) per the recommendation provided on sqlalchemy's site
* i18n
* Pep-8 cleanup
* Fix scheduler testcase so it knows all flags and can run in isolation
* removed some code i didn't end up using
* fixed merge conflict with trunk
* pep8
* fixed up test for lock
* added tests for EC2 describe_instances
* PEP8 cleanup
* This branch fixes an issue where VM creation fails because of a missing flag definition for 'injected_network_template'. See Bug #695467 for more info
* Added tests
* added test for lock to os api
* refactor
* Re-added flag definition for injected_network_template. Tested & verified fix in the same env as the original bug
* forgot import
* syntax error
* Merged trunk
* Added implementation availability_zones to EC2 API
* Updating Authors
* merge
* Changes and error fixes to help ensure basic parity with the Rackspace API. Some features are still missing, such as shared ip groups, and will be added in a later patch set
* initial lock functionality commit
* Merged with trunk
* Additional edits in nova.concepts.rst while waiting for script changes
* Bug #694880: nova-compute now depends upon Cheetah even when not using libvirt
* add ajax console proxy to nova.sh
* merge trunk
* Fix pep8 violations
* add in unit tests
* removed superfluous line
* Address bug #695157 by using a blank request class and setting an empty request path
* Defualt services to enabled
* Address bug #695157 by using a blank request class and setting an empty request path
* Add flag --enable_new_services to toggle default state of service when created
* merge from trunk
* This commit introduces scripts to apply XenServer host networking protections
* Whoops
* merge from upstream and fix conflicts
* Update .mailmap with both email addresses for Ant and myself
* Make action log available through Admin API
* Merging trunk
* Add some basic snapshot tests
* Added get_diagnostics placeholders to libvirt and fake
* Merged trunk
* Added InstanceAction DB functions
* merge trunk
* Bug #694890: run_tests.sh sometimes doesn't pass arguments to nosetest
* Output of run_tests.sh to be closer to trial
* I've added suspend along with a few changes to power state as well. I can't imagine suspend will be controversial but I've added a new power state for "suspended" to nova.compute.power_states which libvirt doesn't use and updated the xenapi power mapping to use it for suspended state. I also updated the mappings in nova.api.openstack.servers to map PAUSED to "error" and SUSPENDED to "suspended". Thoughts there are that we don't currently (openstack API v1.0) use pause, so if somehow an instance were to be paused an error occurred somewhere, or someone did something in error. Either way asking the xenserver host for the status would show "paused". Support for more power states needs to be added to the next version of the openstack API
* fixed a line length
* Bug #694880: nova-compute now depends upon Cheetah even when not using libvirt
* Bug #694890: run_tests.sh sometimes doesn't pass arguments to nosetest
* fix bug #lp694311
* Typo fix
* Renamed based on feedback from another branch
* Added stack command-line tool
* missed a couple of gettext _()
* Cleans up nova.api.openstack.images and fix it to work with cloudservers api. Previously "cloudservers image-list" wouldn't work, now it will. There are mappings in place to handle s3 or glance/local image service. In the future when the local image service is working, we can probably drop the s3 mappings
* Fixing snapshots, pep8 fixes
* translate status was returning the wrong item
* Fixing bad merge
* Converted Volume model and operation to use UUIDs
* inst -> item
* syntax error
* renaming things to be a bit more descriptive
* Merging trunk
* Converted instance references to GUID type
* Added custom guid type so we can choose the most efficient backend DB type easily
* backup schedule changes
* Merged trunk
* Merging trunk, fixing failed tests
* A few fixes
* removed \
* Moving README to doc/networking.rst per recommendation from Jay Pipes
* Merged trunk
* couple of pep8s
* merge trunk
* Fixed after Jay's review. Integrated code from Soren (we now use the same 'magic number' for images without kernel & ramdisk
* Fixed pep8 errors
* launch_at を前回コミット時に追加したが、lauched_atというカラムが既に存在し、 紛らわしいのでlauched_onにした。
* logs inner exception in nova/utils.py->import_class
* Fix Bug #693963
* remove requirement of sudo on tests
* merge trunk
* Merge
* adding zones to api
* Support IPv6
* test commit
* テスト項目表を再び追加した状態でコミット
* テスト項目表をローカルから一度削除した状態でコミット
* テスト項目表がなぜか消えたので追加
* nova.compute.managerがこれまでの修正でデグレしていたので修正 CPUID, その他のチェックルーチンをnova.scheduler.manager.live_migrationに追加
* nova.compute.managerがこれまでの修正でデグレしていたので修正 CPUID, その他のチェックルーチンをnova.scheduler.manager.live_migrationに追加
* Make nova work even when user has LANG or LC_ALL configured
* merged trunk, resolved trivial conflict
* merged trunk, resolved conflict
* Faked out handling for shared ip groups so they return something
* another typo
* applied power state conversion to test
* trying again
* typo
* fixed the os api image test for glance
* updated the xenstore methods to reflect that they write to the param record of xenstore, not the actual xenstore itself
* fixed typo
* Merged with trunk All tests passed Could not fix some pep8 errors in nova/virt/libvirt_conn.py
* fixed merge conflict
* updated since dietz moved the limited function
* fixed error occuring when tests used glance attributes, fixed docstrings
* Merged again from trunk
* fixed a few docstrings, added _() for gettext
* added _() for gettext and a couple of pep8s
* adds a reflection api
* unit test - should be reworked
* Moves implementation specific Openstack API code from the middleware to the drivers. Also cleans up a few areas and ensures all the API tests are passing again
* PEP8 fix
* One more time
* Pep8 cleanup
* Resolved merge conflict
* Merged trunk
* Trying to remove twisted dependencies, this gets everything working under nosetests
* Merged Monty's branch
* Merged trunk and resolved conflicts
* Working diagnostics API; removed diagnostics DB model - not needed
* merged trunk
* merged trunk
* Superfluous images include and added basic routes for shared ip groups
* Simplifies and improves ldap schema
* xenapi iscsi support + unittests
* Fixed trunk and PEP8 cleanup
* Merged trunk
* Added reference in setup.py so that python setup.py test works now
* merge lp:nova
* better bin name, and pep8
* pep8 fixes
* some pep8 fixes
* removing xen/uml specific switches. If they need special treatment, we can add it
* add license
* delete xtra dir
* move euca-get-ajax-console up one directory
* merge trunk
* move port range for ajaxterm to flag
* more tweaks
* add in license
* some cleanup
* rewrite proxy to not use twisted
* added power state logging to nova.virt.xenapi.vm_utils
* added suspend as a power state
* last merge trunk before push
* merge trunk, fixed unittests, added i18n strings, cleanups etc etc
* And the common module
* minor notes, commit before rewriting proxy with eventlet
* There were a few unclaimed addresses in mailmap
* first merge after i18n
* remove some notes
* Add Ryan Lane as well
* added tests to ensure the easy api works as a backend for Compute API
* fix commits from Anthony and Vish that were committed with the wrong email
* remove some yields that snuck in
* merge from trunk
* Basic Easy API functionality
* Fixes reboot (and rescue) to work even if libvirt doesn't know about the instance and the network doesn't exist
* merged trunk
* Fixes reboot (and rescue) to work even if libvirt doesn't know about the instance and the network doesn't exist
* Adds a flag to use the X-Forwarded-For header to find the ip of the remote server. This is needed when you have multiple api servers with a load balancing proxy in front. It is a flag that defaults to False because if you don't have a sanitizing proxy in front, users could masquerade as other ips by passing in the header manually
* Got basic xenstore operations working
* Merged trunk
* Modified InstanceDiagnostics and truncate action
* removed extra files
* merged trunk
* Moves the ip allocation requests to the from the api host into calls to the network host made from the compute host
* pep8 fix
* merged trunk and fixed conflicts
* Accidentally yanked the datetime line in auth
* remove extra files that slipped in
* merged trunk
* add missing flag
* Optimize creation of nwfilter rules so they aren't constantly being recreated
* use libvirt python bindings instead of system call
* fixed more conflicts
* merged trunk again
* add in support of openstack api
* merge trunk and upgrade to cheetah templating
* Optimize nwfilter creation and project filter
* Merging trunk
* fixed conflicts
* Adding more comments regarding XS snapshots
* working connection security
* WSGI middleware for lockout after failed authentications of ec2 access key
* Modifies nova-network to recreate important data on start
* Puts the creation of nova iptables chains into the source code and cleans up rule creation. This makes nova play more nicely with other iptables rules that may be created on the host
* Forgot the copyright info
* i18n support for xs-snaps
* Finished moving the middleware layers and fixed the API tests again
* Zone scheduler added
* Moved some things for testing
* Merging trunk
* Abstracted auth and ratelimiting more
* Getting Snapshots to work with cloudservers command-line tool
* merge trunk
* Minor bug fix
* Populate user_data field from run-instances call parameter, default to empty string to avoid metadata base64 decoding failure, LP: #691598
* Adding myself and Antony Messerli to the Authors file
* Fixes per-project vpns (cloudpipe) and adds manage commands and support for certificate revocation
* merge trunk
* merge antonymesserli's changes, fixed some formatting, and added copyright notice
* merged i8n and fixed conflicts
* Added networking protections readme
* Moved xenapi into xenserver specific directory
* after trunk merge
* Fixes documentation builds for gettext..
* committing so that I can merge trunk changes
* Log all XenAPI actions to InstanceActions
* Merged trunk
* merging trunk
* merging trunk
* Fix doc building endpoint for gettext
* All merged with trunk and let's see if a new merge prop (with no pre-req) works.
* Problem was with a missplaced parentheses. ugh
* Adding me in the Authors file
* Populate user_data field from run-instances call parameter, default to empty string to avoid metadata base64 decoding failure, LP: #691598
* connecting ajax proxy to rabbit to allow token based security
* remove a debugging line
* a few more fixes after merge with trunk
* merging in trunk
* move prototype code from api into compute worker
* Burnin support by specifying a specific host via availability_zone for running instances and volumes on
* Merged trunk
* This stops the nova-network dhcp ip from being added to all of the compute hosts
* prototype works with kvm. now moving call from api to compute
* Style correction
* fix reboot command to work even if a host is rebooted
* Filter templates and dom0 from list_instances()
* removed unused import and fix docstring
* merge fakerabbit fix and turn fake back on for cloud unit tests
* Reworked fakerabbit backend so each connection has it's own. Moved queues and exchanges to be globals
* PEP8 cleanup
* Refactored duplicate rpc.cast() calls in nova/compute/api.py. Cleaned up some formatting issues
* Log all XenAPI actions
* correct xenapi resume call
* activate fake rabbit for debugging
* change virtualization to not get network through project
* update db/api.py as well
* don't allocate networks when getting vpn info
* Added InstanceDiagnostics and InstanceActions DB models
* PEP8 cleanup
* Merged trunk
* merge trunk
* 1) Merged from trunk 2) 'type' parameter in VMHelper.fetch_image converted in enum 3) Fixed pep8 errors 4) Passed unit tests
* Remove ec2 config chain and move openstack versions to top-level application
* Use paste.deploy for running the api server
* pep8 and removed extra imports
* add missing greenthread import
* add a few extra joined objects to get instance
* remove extra print statements
* Tests pass after cleaning up allocation process
* Merging trunk
* Typo fix, stubbing out to use admin project for now
* Close devnull filehandle
* added suspend and resume
* Rewrite of vif_rules.py to meet coding standards and be more pythonic in general. Use absolute paths for iptables/ebtables/arptables in host-rules
* Add raw disk image support
* Add my @linux2go.dk address to .mailmap
* fixed some pep8 business
* directly copy ip allocation into compute
* Minor spellchecking fixes
* Adds support for Pause and Unpause of xenserver instances
* Make column names more generic
* don't add the ip to bridge on compute hosts
* PEP8 fixups
* Added InstanceActions DB model
* initial commit of xenserver host protections
* Merged trunk
* Fixed pep8 errors
* Integrated changes from Soren (raw-disk-images). Updated authors file. All tests passed
* pep8 (again again)
* pep8 (again)
* small clean up
* テストコードをレポジトリに追加 nova.compute.manager.pre_live_migration()について、異常終了しているのに正常終了の戻り値を返すことがあったため変更 - 正常終了の戻り値をTrueに変更 - fixed_ipが見つからないときにはRemoteErrorをraiseする - それに合わせてnova.compute.manager.live_migrationも変更
* テストコードをレポジトリに追加 nova.compute.manager.pre_live_migration()について、異常終了しているのに正常終了の戻り値を返すことがあったため変更 - 正常終了の戻り値をTrueに変更 - fixed_ipが見つからないときにはRemoteErrorをraiseする - それに合わせてnova.compute.manager.live_migrationも変更
* Support proxying api by using X-Forwarded-For
* eventlet merge updates
* Cleaned up TODOs, using flags now
* merge trunk and minor fix(for whatever reason validator_unittest did not get removed from run_test.py)
* fixed unittests and further clean-up post-eventlet merge
* All API tests finally pass
* Removing unneeded Trial specific code
* A few more tweaks to get the OS API tests passing
* Adding new install script plus changes to multinode install doc
* Removing unneeded Trial specific code
* Replaced the use of redis in fakeldap with a customized dict class. Auth unittests should now run fine without a redis server running, or without python-redis installed
* Adding Ed Leafe to Authors file
* Some tweaks
* Adding in Ed Leafe so we can land his remove-redis test branch
* Add wait_for_vhd_coalesce
* Some typo fixes
* pep8 cleanup
* Fixed some old code that was merged incorrectly
* Replaced redis with a modified dict class
* bug fixes
* first revision after eventlet merge. Currently xenapi-unittests are broken, but everything else seems to be running okay
* Integrated eventlet_merge patch
* Code reviewed
* XenAPI Snapshots first cut
* Fixed network test (thanks Vish!) and fixed run_tests.sh
* First pass at converting run_tests.py to nosetests. The network and objctstore tests don't yet work. Also, we need to manually remove the sqlite file between runs
* remerged for pep8
* pep8
* merged in project-vpns to get flag changes
* clean up use of iptables chains
* move some flags around
* add conditional bind to linux net
* make sure all network data is recreated when nova-network is rebooted
* merged trunk
* merged trunk, fixed conflicts and tests
* Added Instance Diagnostics DB model
* Put flags back in nova.virt.xenapi/vm_utils
* Removed unnecessary blank lines
* Put flags back in vm_utils
* This branch removes most of the dependencies on twisted and moves towards the plan described by https://blueprints.launchpad.net/nova/+spec/unified-service-architecture
* pep8 fixes for bin
* PEP8 cleanups
* use getent, update docstring
* pep8 fixes
* reviewed the FIXMEs, and spotted an uncaught exception in volume_utils...yay!
* fixed a couple of more syntax errors
* Moved implementation specific stuff from the middleware into their respective modules
* typo
* fixed up openstack api images index and detail
* fake session clean-up
* Removed FakeInstance and introduced stubout for DB. Code clean-up
* removed extra stuff used for debugging
* Restore code which was changed for testing reasons to the original state. Kudos to Armando for spotting this
* Make nova work even when user has LANG or LC_ALL configured
* Merged changes from trunk into the branch
* Hostテーブルのカラム名を修正 FlatManager, FlatDHCPManagerに対応
* merged with trunk. fixed compute.pause test
* fixup after merge with trunk
* memcached requires strings not unicode
* Fix 688220 Added dependency on Twisted>=10.1.0 to pip-requires
* Make sure we properly close the bzr WorkingTree in our Authors up-to-datedness unit test
* fixes for xenapi (thanks sandywalsh)
* clean up tests and add overriden time method to utils
* merged from upstream
* add missing import
* Adding back in openssh-lpk schema, as keys will likely be stored in LDAP again
* basic conversion of xs-pause to eventlet done
* brougth clean-up from unittests branch and tests
* I made pep8 happy
* * code cleanup * revised unittest approach * added stubout and a number of tests
* clean up code to use timeout instead of two keys
* final cleanup
* Restore alphabetical order in Authors file
* removed temporary comment lines
* Lots of PEP-8 work
* refresh_security_group renamed to refresh_security_group_rules
* added volume tests and extended fake to support them
* Make sure the new, consolidated template gets included
* Make sure we unlock the bzr tree again in the authors unit test
* The ppa was moved. This updates nova.sh to reflect that
* merged upstream
* remove some logging
* Merged from trunk and fixed merge issues. Also fixed pep8 issues
* Lockout middleware for ec2 api
* updates per review
* Initial work on i18n. This adds the installation of the nova domain in gettext to all the "endpoints", which are all the bin/* files and run_tests.py
* For some reason, I forgot to commit the other endpoints..
* Remove default_{kernel,ramdisk} flags. They are not used anymore
* Don't attempt to fiddle with partitions for whole-disk-images
* pep8
* Includes architecture on register. Additionally removes a couple lines of cruft
* nothing
* nothing
* nothing
* support for pv guests (in progress)
* merge trunk
* Now that we have a templating engine, let's use it. Consolidate all the libvirt templates into one, extending the unit tests to make sure I didn't mess up
* first cut of unittest framework for xenapi
* Added my contacts to Authors file
* final cleanup, after moving unittest work into another branch
* fixup after merge with trunk
* added callback param to fake_conn
* added not implemented stubs for libvirt
* merge with trey tests
* Fixed power state update with Twisted callback
* simplified version using original logic
* moving xenapi unittests changes into another branch
* Adds support to the ec2 api for filtering describe volumes by volume_ids
* Added LiveCD info as well as some changes to reflect consolidation of .conf files
* Fix exception throwing with wrong instance type
* Add myself
* removing imports that should have not been there
* second round for unit testing framework
* Added Twisted version dependency into pip-requires
* only needs work for distinguishing pv from hvm
* Move security group refresh logic into ComputeAPI
* Refactored smoketests to use novarc environment and to separate user and admin specific tests
* Changed OpenStack API auth layer to inject a RequestContext rather than building one everywhere we need it
* Elaborate a bit on ipsets comment
* Final round of marking translation strings
* First round of i18n-ifying strings in Nova
* Initial i18n commit for endpoints. All endpoints must install gettext, which injects the _ function into the builtins
* Fixed spelling errors in index.rst
* fix pep8
* Includes kernel and ramdisk on register. Additinally removes a couple lines of cruft
* port new patches
* merge-a-tat-tat upstream to this branch
* Format fixes and modification of Vish's email address
* There is always the odd change that one forgets!
* * pylint fixes * code clean-up * first cut for xenapi unit tests
* added pause and unpause to fake connection
* merged changes from sandy's branch
* added unittest for pause
* add back utils.default_flagflie
* removed a few more references to twisted
* formatting and naming cleanup
* remove service and rename service_eventlet to service
* get service unittests runnning again
* whitespace fix
* make nova binaries use eventlet
* Converted the instance table to use a uuid instead of a auto_increment ID and a random internal_id. I had to use a String(32) column with hex and not a String(16) with bytes because SQLAlchemy doesn't like non-unicode strings going in for String types. We could try another type, but I didn't want a primary_key on blob types
* remove debug messages
* merge with trey
* pause and unpause code/tests in place. To the point it stuffs request in the queue
* import module and not classe directely as per Soren recommendation
* Make XenServer VM diagnostics available through nova.virt.xenapi
* Merged trunk
* Added exception handling to get_rrd()
* Changed OpenStack API auth layer to inject a RequestContext rather than building one everywhere we need it
* changed resume to unpause
* Import module instead of function
* filter describe volumes by supplied ids. Includes unittest
* merging sandy's branch
* Make get_diagnostics async
* raw instances can now be launched in xenapi (only as hvm at the moment)
* pause from compute.manager <-> xenapi
* Merged Armando's XenAPI fix
* merge with trunk to pull in admin-api branch
* Flag to define which operations are exposed in the OpenStack API, disabling all others
* Fixed Authors conflict and re-merged with trunk
* fixes exception throwing with wrong instance type
* Ignore security group rules that reference foreign security groups
* fixed how the XenAPI library is loaded
* remove some unused files
* port volume manager to eventlet also
* intermediate commit to checkpoint progress
* some pylint caught changes to compute
* added to Authors
* adds bzr to the list of dependencies in pip-require so that upon checkout using run_tests.sh succeeds
* merge conflict
* merged upstream changes
* add bzr to the dev dependencies
* Fixed docstrings
* Merged trunk
* Got get_diagnostics in working order
* merged updates to trunk
* merge trunk
* typo fix
* removing extraneous config ilnes
* Finished cleaning up the openstack servers API, it no longer touches the database directly. Also cleaned up similar things in ec2 API and refactored a couple methods in nova.compute.api to accommodate this work
* Pushed terminate instance and network manager/topic methods into network.compute.api
* Merged trunk
* Moved the reboot/rescue methods into nova.compute.api
* PEP8 fixes
* Setting the default schema version to the new schema
* Adding support for choosing a schema version, so that users can more easily migrate from an old schema to the new schema
* merged with trunk. All clear!
* Removing novaProject from the schema. This change may look odd at first; here's how it works:
* test commit
* コメントを除去 README.live_migration.txtのレビュー結果を修正
* This change adds better support for LDAP integration with pre-existing LDAP infrastructures. A new configuration option has been added to specify the LDAP driver should only modify/add/delete attributes for user entries
* More pep8 fixes to remove deprecated functions
* pep8 fix
* Clarifying previously commited exception message
* Raising an exception if the user doesn't exist before trying to modify its attributes
* Removing redundant check
* Added livecd instructions plus fixed references to .conf files
* pylint fixes
* Initial diagnostics import -- needs testing and cleanup
* Added a script to use OpenDJ as an LDAP server instead of OpenLDAP. Also modified nova.sh to add an USE_OPENDJ option, that will be checked when USE_LDAP is set
* Reverting last change
* a few more things ironed out
* Make sure Authors check also works for pending merges (otherwise stuff can get merged that will make the next merge fail this check)
* It looks like Soren fixed the author file, can I hit the commit button?
* merge trunk
* Make sure Authors check also works for pending merges (otherwise stuff can get merged that will make the next merge fail this check)
* Add a helpful error message to nova-manage in case of NoMoreNetworks
* Add Ryan Lucio to Authors
* Adding myself to the authors list
* Add Ryan Lucio to Authors
* Addresses bug 677475 by changing the DB column for internal_id in the instances table to be unsigned
* importing XenAPI module loaded late
* Added docstring for get_instances
* small fixes on Exception handling
* first test commit
* and yet another pylint fix
* fixed pylint violations that slipped out from a previous check
* * merged with lp:~armando-migliaccio/nova/xenapi-refactoring * fixed pylint score * complied with HACKING guidelines
* addressed review comments, complied with HACKING guidelines
* adding README.livemigration.txt
* rev439ベースにライブマイグレーションの機能をマージ このバージョンはEBSなし、CPUフラグのチェックなし
* modified a few files
* Fixed conflicts with gundlach's fixes
* Remove dead test code
* Add iptables based security groups implementation
* Merged gundlach's fixes
* Don't wrap HTTPAccepted in a fault. Correctly pass kwargs to update_instance
* fixed import module in __init__.py
* minor changes to docstrings
* added interim solution for target discovery. Now info can either be passed via flags or discovered via iscsiadm. Long term solution is to add a few more fields to the db in the iscsi_target table with the necessary info and modify the iscsi driver to set them
* merge with lp:~armando-migliaccio/nova/xenapi-refactoring
* merge trunk
* moved XenAPI namespace definition into xenapi/__init__.py
* pylint and pep8 fixes
* Decreased the maximum value for instance-id generation from uint32 to int32 to avoid truncation when being entered into the instance table. Reverted fix to make internal_id column a uint
* Finished cleaning up the openstack servers API, it no longer touches the database directly. Also cleaned up similar things in ec2 API and refactored a couple methods in nova.compute.api to accomodate this work
* Merged reboot-rescue into network-manager
* Merged trunk
* Fixes a missing step (nova-manage network create IP/nn n nn) in the single-node install guide
* Tired of seeing various test files in bzr stat
* Updated sqlalchemy model to make the internal_id column of the instances table as unsigned integer
* * Removes unused schema * Removes MUST uid from novaUser * Changes isAdmin to isNovaAdmin * Adds two new configuration options: ** ldap_user_id_attribute, with a default of uid ** ldap_user_name_attribute, with a default of cn * ldapdriver.py has been modified to use these changes
* Pushed terminate instance and network manager/topic methods into network.compute.api
* Fix bugs that prevented OpenStack API from supporting server rename
* pep8
* Use newfangled compute_api
* Update tests to use proper id
* Fixing single node install doc
* Oops, update 'display_name', not 'name'. And un-extract-method
* Correctly translate instance ids to internal_ids in some spots we neglected
* Added test files to be ignored
* Consolidated the start instance logic in the two API classes into a single method. This also cleans up a number of small discrepencies between the two
* Moved reboot/rescue methods into nova.compute.api
* Merged trunk and resolved conflicts. Again
* Instances are assigned a display_name if one is not passed in -- and now, they're assigned a display_name even if None is explicitly passed in (as the EC2 API does.)
* Merged trunk and resolved conflicts
* Default Instance.display_name to a value even when None is explicitly passed in
* Refactor nwfilter code somewhat. For iptables based firewalls, I still want to leave it to nwfilter to protect against arp, mac, and ip spoofing, so it needed a bit of a split
* Add a helpful error message to nova-manage in case of NoMoreNetworks
* minor refactoring after merge
* merge lp:~armando-migliaccio/nova/refactoring
* merge trunk
* typo fix
* moved flags into xenapi/novadeps.py
* Add a simple abstraction for firewalls
* fix nova.sh to reflect new location of ppa
* Changed null_kernel flag from aki-00000000 to nokernel
* Guarantee that the OpenStack API's Server-related responses will always contain a "name" value. And get rid of a redundant field in models.py
* Going for a record commits per line changes ratio
* Oops, internal_id isn't available until after a save. This code saves twice; if I moved it into the DB layer we could do it in one save. However, we're moving to one sqlite db per compute worker, so I'd rather have two saves in order to keep the logic in the right layer
* Todd points out that the API doesn't require a display_name, so let's make a default. That way the OpenStack API can rest assured that its server responses will always have a name key
* Adds in more documentation contributions from Citrix
* Remove duplicate field and make OpenStack API return server.name for EC2-API-created instances
* Move cc_host and cc_port flags into nova/network/linux_net.py. They weren't used anywhere else
* Add include_package_data=True to setup.py
* With utils.default_flagfile() in its old location, the flagfile isn't being read -- twistd.serve() loads flags earlier than that point. Move the utils.default_flagfile() call earlier so the flagfile is included
* Removed a blank line
* Broke parts of compute manager out into compute.api to separate what gets run on the API side vs the worker side
* Move default_flagfile() call to where it will be parsed in time to load the flagfile
* minor refactoring
* Move cc_host and cc_port flags into nova/network/linux_net.py. They weren't used anywhere else
* Added a script to use OpenDJ as an LDAP server instead of OpenLDAP. Also modified nova.sh to add an USE_OPENDJ option, that will be checked when USE_LDAP is set
* Fixed termie's tiny bits from the prior merge request
* Delete unused flag in nova.sh
* Moving the openldap schema out of nova.sh into it's own files, and adding sun (opends/opendj/sun directory server/fedora ds) schema files
* OpenStack API returns the wrong x-server-management-url. Fix that
* Cleaned up pep8 errors
* brought latest changes from trunk
* iscsi volumes attach/detach complete. There is only one minor issue on how to discover targets from device_path
* Fix unit tests
* Fix DescribeImages EC2 API call
* merged Justin Santa Barbara's raw-disk-image back into the latest trunk
* If only I weren't so lazy
* Rename imageSet variable to images
* remove FAKE_subdomain reference
* Return the correct server_management_url
* Default flagfile moved in trunk recently. This updates nova.sh to run properly with the new flagfile location
* Correctly handle imageId list passed to DescribeImages API call
* update of nova.sh because default flagfile moved
* merged trunk
* Add a templating mechanism in the flag parsing
* Adjust state_path default setting so that api unit tests find things where they used to find them
* Import string instead of importing Template from string. This is how we do things
* brought the xenapi refactoring in plus trunk changes
* changes
* pep8 fixes and further round of refactoring
* Rename cloudServersFault to computeFault -- I missed this Rackspace branding when we renamed nova.api.rackspace to nova.api.openstack
* Make sure templated flags work across calls to ParseNewFlags
* Add include_package_data=True to setup.py
* fixed deps
* first cut of the refactoring of the XenAPIConnection class. Currently the class merged both the code for managing the XenAPI connection and the business logic for implementing Nova operations. If left like this, it would eventually become difficult to read, maintain and extend. The file was getting kind of big and cluttered, so a quick refactoring now will save a lot of headaches later
* other round of refactoring
* further refactoring
* typos and pep8 fixes
* first cut of the refactoring of the XenAPIConnection class. Currently the class merged both the code for managing the XenAPI connection and the business logic for implementing Nova operations. If left like this, it would eventually become difficult to read, maintain and extend. The file was getting kind of big and cluttered, so a quick refactoring now will save a lot of headaches later
* PEP fixes
* Adding support for modification only of user accounts
* This modification should have occured in a different branch. Reverting
* added attach_volume implementation
* work on attach_volume, with a few things to iron out
* A few more changes: * Fixed up some flags * Put in an updated nova.sh * Broke out metadata forwarding so it will work in flatdhcp mode * Added descriptive docstrings explaining the networking modes in more detail
* small conflict resolution
* first cut of changes for the attach_volume call
* The image server should throw not found errors, don't need to check in compute manager
* Consolidated the start instance logic in the two API classes into a single method. This also cleans up a number of small discrepencies between the two
* Setting "name" back to "cn", since id and name should be separate
* Adding support for modification only of user accounts
* don't error on edge case where vpn has been launched but fails to get a network
* Make sure all workers look for their flagfile in the same spot
* Fix typo "nova.util" -> "nova.utils"
* Fix typo "nova.util" -> "nova.utils"
* Added a .mailmap that maps addresses in bzr to people's real, preferred e-mail addresses. (I made a few guesses along the way, feel free to adjust according to what is actually the preferred e-mail)
* Add a placeholder in doc/build. Although bzr handles empty directories just fine, setuptools does not, so to actually ship this directory in the tarball, we need a file in it
* Add a placeholder in doc/build. Although bzr handles empty directories just fine, setuptools does not, so to actually ship this directory in the tarball, we need a file in it
* Merged trunk
* pep8
* merged trunk, added recent nova.sh
* fix typos in docstring
* docstrings, more flags, breakout of metadata forwarding
* doc/build was recently accidentally removed from VCS. This adds it back, which makes the docs build again
* Add doc/build dir back to bzr
* Make aws_access_key_id and aws_secret_access_key configurable
* add vpn ping and optimize vpn list
* Add an alias for Armando
* the serial returned by x509 is already formatted in hex
* Adding developer documentation - setting up dev environment and how to add to the OpenStack API
* Add a --logdir flag that will be prepended to the logfile setting. This makes it easier to share a flagfile between multiple workers while still having separate log files
* Address pep8 complaints
* Address PEP8 complaints
* Remove FAKE_subdomain from docs
* Adding more polish
* Adding developer howtos
* Remove FAKE_subdomain from docs
* Make aws_access_key_id and aws_secret_access_key configurable
* updated nova.sh
* added flat_interface for flat_dhcp binding
* changed bridge_dev to vlan_interface
* Add a --logdir flag that will be prepended to the logfile setting. This makes it easier to share a flagfile between multiple workers while still having separate log files
* added svg files (state.svg is missing because its source is a screen snapshot)
* Unify the location of the default flagfile. Not all workers called utils.default_flagfile, and nova-manage explicitly said to use the one in /etc/nova/nova-manage.conf
* Set and use AMQP retry interval and max retry FLAGS
* Incorporating security groups info
* Rename cloudServersFault (rackspace branding) to computeFault. Fixes bug lp680285
* Use FLAGS instead of constants
* Incorporating more networking info
* Make time.sleep() non-blocking
* Removed unnecessary continue
* Update Authors and add a couple of names to .mailmap (from people who failed to set bzr whoami properly)
* Refactor AMQP retry loop
* Allows user to specify hosts to listen on for nova-api and -objectstore
* Make sure all the libvirt templates are included in the tarball (by replacing the explicitly listed set with a glob pattern)
* fixed pep8 violations
* Set and use AMQP retry interval and max retry constants
* pep8 violations fix
* added placeholders
* added test for invalid handles
* Make sure all templates are included (at least rescue tempaltes didn't used to be included)
* Check for running AMQP instances
* Use logging.exception instead
* Reverted some changes
* Added some comments
* Adds images (only links one in), start for a nova-manage man file, and also documents all nova-manage commands. Can we merge it in even though the man page build isn't working?
* Added some comments
* Check for running AMQP instances
* first cut of fixes for bug #676128
* Removed .DS_Store files everywhere, begone!
* Moves the EC2 API S3 image service into nova.service. There is still work to be done to make the APIs align, but this is the first step
* PEP8 fixes, 2 lines were too long
* First step to getting the image APIs consolidated. The EC2 API was using a one-off S3 image service wrapper, but this should be moved into the nova.image space and use the same interface as the others. There are still some mismatches between the various image service implementations, but this patch was getting large and wanted to keep it within a resonable size
* Improved Pylint Score
* Fixes improper display of api error messages that happen to be unicode
* Make sure that the response body is a string and not unicode
* Soren updated setup.py so that the man page builds. Will continue working on man pages for nova-compute and nova-network
* Overwrite build_sphinx, making it run once for each of the html and man builders
* fixes flatdhcp, updates nova.sh, allows for empty bridge device
* Update version to 2011.1 as that is the version we expect to release next
* really adding images
* adding images
* Documenting all nova-manage commands
* Documenting all nova-manage commands
* Fixes eventlet race condition in cloud tests
* fix greenthread race conditions in trunk and floating ip leakage
* Testing man page build through conf.py
* Improved Pylint Score
* adjusting images size and bulleted list
* merged with trunk
* small edit
* Further editing and added images
* Update version to 2011.1 as that is the version we expect to release next
* ec2_api commands for describe_addresses and associate_address are broken in trunk. This happened during the switch to ec2_id and internal_id. We clearly didn't have any unit tests for this, so I've added a couple in addition to the three line change to actually fix the bugs
* delete floating ips after tests
* remove extra line and ref. to LOG that doesn't exist
* fix leaking floating ip from network unittests and use of fakeldap driver
* Adds nova-debug to tools directory, for debugging of instances that lose networking
* fixes errors in describe address and associate address. Adds test cases
* Ryan_Lane's code to handle /etc/network not existing when we try to inject /etc/network/interfaces into an image
* pep8
* First dump of content related to Nova RPC and RabbitMQ
* Add docstrings to any methods I touch
* pep8
* PEP8 fixes
* added myself to Authors file. Enjoy spiders
* Changed from fine-grained operation control to binary admin on/off setting
* Changed from fine-grained operation control to binary admin on/off setting
* Lots of documentation and docstring updates
* The docs are just going to be wrong for now. I'll file a bug upstream
* Change how wsgified doc wrapping happens to fix test
* merge to trunk
* pep8
* Adding contributors and names
* merge with trunk
* base commit
* saw a duplicate import ... statement in the code while reading through unit tests - this removes the dupe
* removed redundant unit test import
* add in bzr link
* adding a bit more networking documentation
* remove tab
* fix title
* tweak
* Fix heading
* merge in anne's changes
* tweak
* Just a few more edits, misspellings and the like
* fix spacing to enable block
* merge to remote
* unify env syntax
* Add sample puppet scripts
* fix install guide
* getting started
* create SPHINX_DEBUG env var. Setting this will disable aggressive autodoc generation. Also provide some sample for P syntax
* fix conf file from earlier merge
* notes, and add code to enable sorted "..todo:: P[1-5] xyz" syntax
* merge in more networking docs - still a work in progress
* anne's changes to the networking documentation
* Updated Networking doc
* anne gentle's changes to community page
* merge in heckj's corrections to multi-node install
* Added a .mailmap that maps addresses in bzr to people's real, preferred e-mail addresses. (I made a few guesses along the way, feel free to adjust according to what is actually the preferred e-mail)
* Updated community.rst to fix a link to the IRC logs
* merging in changes from ~anso/nova/trunkdoc
* fixed another spacing typo causing poor rendering
* fixed spacing typo causing poor rendering
* merge in anne's work
* add docs for ubuntu 4, 10, others
* Updated Cloud101 and admonition color
* merge heckj's multi install notes
* working on single node install
* updating install notes to reference Vish' nova.sh and installing in MYSQL
* Add Flat mode doc
* Add Flat mode doc
* Add Flat mode doc
* Add VLAN Mode doc
* Add VLAN Mode doc
* merge in anne's changes
* home page tweaks
* Updated CSS and community.rst file
* modifications and additions based on doc sprint
* incorporate some feedback from todd and anne
* merge in trunk
* working on novadoc structure
* add some info on authentication and keys
* Since we're autodocumenting from a sphinx ext, we can scrap it in Makefile
* Use the autodoc tools in the setup.py build_sphinx toolchain
* Fix include paths so setup.py build_sphinx works again
* Cleanups to doc process
* quieter doc building (less warnings)
* File moves from "merge" of termie's branch
* back out stacked merge
* Doc updates: * quieter build (fewer warnings) * move api reference out of root directory * auto glob api reference into a TOC * remove old dev entries for new-fangled auto-generated docs
* Normalization of Dev reference docs
* Switch to module-per-file for the module index
* Allow case-by-case overriding of autodocs
* add exec flags, apparently bzr shelve/unshelve does not keep track of them
* Build autodocs for all our libraries
* add dmz to flags and change a couple defaults
* Per-project vpns, certificates, and revocation
* remove finished todo
* Fix docstrings for wsigfied methods
* fix default twitter username
* shrink tweet text a bit
* Document nova.sh environment
* add twitter feed to the home page
* Community contact info
* small tweaks before context switch
* use include to grab todd's quickstart
* add in custom todo, and custom css
* Format TODO items for sphinx todo extension
* additions to home page
* Change order of secions so puppeting is last, add more initial setup tasks
* update types of services that may run on machines
* Change directory structure for great justice!
* Refactored smoketests to use novarc environment and to separate user and admin specific tests
* start adding info to multi-node admin guide
* document purpose of documentation
* Getting Started Guide
* Nova quickstart: move vish's novascript into contrib, and convert reademe.md to a quickstart.rst
* merge trunk
* Add a templating mechanism in the flag parsing. Add a state_path flag that will be used as the top-level dir for all other state (such as images, instances, buckets, networks, etc). This way you only need to change one flag to put all your state in e.g. /var/lib/nova
* add missing file
* Cleanup nova-manage section
* have "contents" look the same as other headings
* Enables the exclusive flag for DirectConsumer queues
* Ensures that keys for context from the queue are passed to the context constructor as strings. This prevents hangs on older versions of python that can't handle unicode kwargs
* Fix for bug #640400, enables the exclusive flag on the temporary queues
* pep8 whitespace and line length fixes
* make sure context keys are not unicode so they can be passed as kwargs
* merged trunk
* merged source
* prettier theme
* Added an extra argument to the objectstore listen to separate out the listening host from the connecting host
* Change socket type in nova.utils.get_my_ip() to SOCK_DGRAM. This way, we don't actually have to set up a connection. Also, change the destination host to an IP (chose one of Google's DNS's at random) rather than a hostname, so we avoid doing a DNS lookup
* Fix for bug#613264, allowing hosts to be specified for nova-api and objectstore listeners
* Fixes issue with security groups not being associated with instances
* Doc cleanups
* Fix flags help display
* Change socket type in nova.utils.get_my_ip() to SOCK_DGRAM. This way, we don't actually have to set up a connection. Also, change the destination host to an IP (chose one of Google's DNS's at random) rather than a hostname, so we avoid doing a DNS lookup
* ISCSI Volume support
* merged
* more descriptive title for cloudpipe
* update of the architecture and fix some links
* Fixes after trunk merge
* removed some old instructions and updated concepts
* merge
* Documentation on Services, Managers, and Drivers
* Document final undocumented python modules
* merged trunk
* cloudpipe docs
* Fixed --help display for non-twisted bin/* commands
* Adds support for multiple API ports, one for each API type (OS, EC2)
* Fixed tests to work with new default API argument
* Added support for OpenStack and EC2 APIs to run on different ports
* More docs
* Language change for conformity
* Add ec2 api docs
* Exceptions docs
* API endpoint documentation
* basics to get proxied ajaxterm working with virsh
* :noindex: on the fakes page for virt.fakes which is included in compute.rst
* Virt documentation
* Change retrieval of security groups from kwargs so they are associated properly and add test to verify
* don't check for vgroup in fake mode
* merged trunk, just in case
* Update compute/disk.py docs
* Change volume TODO list
* Volume documentation
* Remove fakes duplication
* Update database docs
* Add support for google analytics to only the hudson-produced docs
* Changes to conf.py
* Updated location of layout.html and change conf.py to use a build variable
* Update database page a bit
* Fakes cleanup (stop duplicate autodoc of FakeAOEDriver)
* Document Fakes
* Remove "nova Packages and Dependencies"
* Finished TODO item
* Pep-257
* Pep-257 cleanups
* Clean up todos and the like for docs
* A shell script for showing modules that aren't documented in .rst files
* merge trunkdoc
* link binaries section to concepts
* :func: links to python functions in the documentation
* Todo cleanups in docs
* cleanup todos
* fix title levels
* wip architecture, a few auth formatting fixes, binaries, and overview
* volume cleanups
* Remove objectstore, not referenced anywhere
* Clean up volumes / storage info
* Moves db writes into compute manager class. Cleans up sqlalchemy model/api to remove redundant calls for updating what is really a dict
* Another heading was too distracting, use <strong> instead
* Fix underlining -> heading in rst file
* Whitespace and docstring cleanups
* Remove outdated endpoint documentation
* Clean up indentation error by preformatting
* Add missing rst file
* clean up the compute documentation a bit
* Remove unused updated_data variable
* Fix wiki link
* added nova-manage docs
* merged and fixed conflicts
* updates to auth, concepts, and network, fix of docstring
* cleanup rrd doc generation
* Doc skeleton from collaborative etherpad hack session
* OK, let's try this one more time
* Doc updates
* updates from review, fix models.get and note about exception raising
* Style cleanups and review from Eric
* New structure for documentation
* Fixes PEP8 violations from the last few merges
* More PEP8 fixes that were introduced in the last couple commits
* Adding Google Analytics code to nova.openstack.org
* Fixes service unit tests after tornado excision
* Added Google Analytics code
* renamed target_id to iscsi_target
* merged gundlach's excision
* Oops, didn't mean to check this one in. Ninja-patch
* Delete BaseTestCase and with it the last reference to tornado
* fix completely broken ServiceTestCase
* Removes some cruft from sqlalchemy/models.py like unused imports and the unused str_id method
* Adds rescue and unrescue commands
* actually remove the conditional
* fix tests by removing missed reference to prefix and unnecessary conditional in generate_uid
* Making net injection create /etc/network if non-existant
* Documentation was missing; added
* Moving the openldap schema out of nova.sh into it's own files, and adding sun (opends/opendj/sun directory server/fedora ds) schema files
* validates device parameter for attach-volume
* add nova-debug to setup.py
* nova-debug, relaunch an instance with a serial console
* Remove the last vestigial bits of tornado code still in use
* pep8 cleanup
* print the exception on fail, because it doesn't seem to reraise it
* use libvirt connection for attaching disks and avoid the symlink
* update error message
* Exceptions in the OpenStack API will be converted to Faults as they should be, rather than barfing a stack trace to the user
* pep8
* pep8
* Duplicate the two trivial escaping functions remaining from tornado's code and remove the dependency
* more bugfixes, flag for local volumes
* fix bugs, describe volumes, detach on terminate
* ISCSI Volume support
* Removed unused imports and left over references to str_id
* logging.warn not raise logging.Warn
* whitespace
* move create_console to cloud.py from admin.py
* merge lp:nova
* add NotFound to fake.py and document it
* add in the xen rescue template
* pep 8 cleanup and typo in resize
* add methods to cloud for rescue and unrescue
* update tests
* merged trunk and fixed conflicts/changes
* part way through porting the codebase off of twisted
* Another pep8 cleanup branch for nova/tests, should be merged after lp:~eday/nova/pep8-fixes-other. After this, the pep8 violation count is 0!
* Changes block size for dd to a reasonable number
* Another pep8 cleanup branch for nova/api, should be merged after lp:~eday/nova/pep8-fixes
* Created Authors file
* Actually adding Authors file
* Created Authors file and added to manifest for Austin Release
* speed up disk generation by increasing block size
* PEP8 cleanup in nova/tests, except for tests. There should be no functional changes here, just style changes to get violations down
* PEP8 cleanup in nova/*, except for tests. There should be no functional changes here, just style changes to get violations down
* PEP8 cleanup in nova/db. There should be no functional changes here, just style changes to get violations down
* PEP8 cleanup in nova/api. There should be no functional changes here, just style changes to get violations down
* PEP8 and pylint cleanup. There should be no functional changes here, just style changes to get violations down
* Moves db writes into compute manager class. Cleans up sqlalchemy model/api to remove redundant calls for updating what is really a dict
* validate device in AttachDisk
* Cleanup of doc for dependencies (redis optional, remove tornado, etc). Please check for accuracy
* Delays the creation of the looping calls that that check the queue until startService is called
* Made updates based on review comments
* Authorize image access instead of just blindly giving it away
* Checks the pid of dnsmasq to make sure it is actually referring to the right process
* change boto version from 1.9b1 to 1.9b in pip-requires
* Check the pid to make sure it refers to the correct dnsmasq process
* make sure looping calls are created after service starts and add some tests to verify service delegation works
* fix typo in boto line of pip-requires
* Updated documentation
* Update version set in setup.py to 2010.1 in preparation for Austin release
* Also update version in docs
* Update version to 2010.1 in preparation for Austin release
* * Fills out the Parallax/Glance API calls for update/create/delete and adds unit tests for them. * Modifies the ImageController and GlanceImageService/LocalImageService calls to use index and detail routes to comply perfectly with the RS/OpenStack API
* Makes disk.partition resize root drive to 10G, unless it is m1.tiny which just leaves it as is. Larger images are just used as is
* reverted python-boto version in pip-requires to 1.9b1
* Construct exception instead of raising a class
* Authorize Image before download
* Add unit test for XML requests converting errors to Faults
* Fixes https://bugs.launchpad.net/nova/+bug/663551 by catching exceptions at the top level of the API and turning them into Faults
* Adds reasonable default local storage gb to instance sizes
* reverted python-boto version in pip-requires to 1.9b1.\
* Fix typo in test case
* Remember to call limited() on detail() in image controller
* Makes nova-dhcpbridge notify nova-network on old network lease updates
* add reasonable gb to instance types
* it is flags.DEFINE_integer, not FLAGS.define_int
* Makes disk.partition resize root drive to 10G, unless it is m1.tiny which just leaves it as is. Larger images are just used as is
* update leases on old leases as well
* Adds a simple nova-manage command called scrub to deallocate the network and remove security groups for a projeect
* Refresh MANIFEST.in to make the tarball include all the stuff that belongs in the tarball
* Added test case to reproduce bug #660668 and provided a fix by using the user_id from the auth layer instead of the username header
* Add the last few things to MANIFEST.in
* Also add Xen template to manifest
* Fix two problems with get_console_log: * libvirt has this annoying "feature" where it chown()s your console to the uid running libvirt. That gets in the way of reading it. Add a call to "sudo chown ...." right before we read it to make sure it works out well. * We were looking in the wrong directory for console.log. *blush*
* This branch converts incoming data to the api into the proper type
* Fixes deprecated use of context in nova-manage network create
* Add a bunch of stuff to MANIFEST.in that has been added to the tree over the last couple of months
* Fix the --help flag for printing help on twistd-based services
* Fix two problems with get_console_log: libvirt has this annoying "feature" where it chown()s your console to the uid running libvirt. That gets in the way of reading it. We were looking in the wrong directory for console.log. *blush*
* Fix for bug 660818 by adding the resource ID argument
* Reorg the image services code to push glance stuff into its own directory
* Fix some unit tests: * One is a race due to the polling nature of rpc in eventlet based unit tests. * The other is a more real problem. It was caused by datastore.py being removed. It wasn't caught earlier because the .pyc file was still around on the tarmac box
* Add a greenthread.sleep(0.3) in get_console_output unit test. This is needed because, for eventlet based unit tests, rpc polls, and there's a bit of a race. We need to fix this properly later on
* Perform a redisectomy on bin/nova-dhcpbridge
* Removed 'and True' oddity
* use context for create_networks
* Make Redis completely optional:
* make --help work for twistd-based services
* trivial style change
* prevent leakage of FLAGS changes across tests
* run_tests.sh presents a prompt:
* Also accept 'y'
* A few more fixes for deprecations
* make run_tests.sh's default perform as expected
* Added test case to reproduce bug #660668 and provided a fix by using the user_id from the auth layer instead of the username header
* get flags for nova-manage and fix a couple more deprecations
* Fix for bug#660818, allows tests to pass since delete expects a resource ID
* This branch modifies the fixes all of the deprecation warnings about empty context. It does this by adding the following fixes/features * promotes api/context.py to context.py because it is used by the whole system * adds more information to the context object * passes the context through rpc * adds a helper method for promoting to admin context (elevate()) * modifies most checks to use context.project_id instead of context.project.id to avoid trips to the database
* timestamps are passed as unicode
* Removed stray spaces that were causing an unnecessary diff line
* merged trunk
* Minimized diff, fixed formatting
* remove nonexistent exception
* Merged with trunk, fixed broken stuff
* revert to generic exceptions
* fix indent
* Fixes LP Bug#660095
* Move Redis code into fakeldap, since it's the only thing that still uses it. Adjust auth unittests to skip fakeldap tests if Redis isn't around. Adjust auth unittests to actually run the fakeldap tests if Redis /is/ around
* fix nosetests
* Fixes a few concurrency issues with creating volumes and instances. Most importantly it adds retries to a number of the volume shell commands and it adds a unique constraint on export_devices and a safe create so that there aren't multiple copies of export devices in the database
* unit tests and fix
* call stuff project_id instead of project
* review fixes
* fix context in bin files
* add scrub command to clean up networks and sec groups
* merged trunk
* merged concurrency
* review comments
* Added a unit test but not integrated it
* merged trunk
* fix remaining tests
* cleaned up most of the issues
* remove accidental paste
* use context.project_id because it is more efficient
* elevate in proper places, fix a couple of typos
* merged trunk
* Fixes bug 660115
* Address cerberus's comment
* Fix several problems keeping AuthMiddleware from functioning in the OpenStack API
* Implement the REST calls for create/update/delete in Glance
* Adds unit test for WSGI image controller for OpenStack API using Glance Service
* Fixes LP Bug#660095
* Xen support
* Adds flat networking + dhcpserver mode
* This patch removes the ugly network_index that is used by VlanManager and turns network itself into a pool. It adds support for creating the networks through an api command: nova-manage network create # creates all of the networks defined by flags or nova-manage network create 5 # create the first five networks
* Newlines again, reorder imports
* Remove extraneous newlines
* Fix typo, fix import
* merged upstream
* cleanup leftover addresses
* super teardown
* fix tests
* merged trunk
* merged trunk
* merged trunk
* merged trunk
* Revert the conversion to 64-bit ints stored in a PickleType column, because PickleType is incompatible with having a unique constraint
* Revert 64 bit storage and use 32 bit again. I didn't notice that we verify that randomly created uids don't already exist in the DB, so the chance of collision isn't really an issue until we get to tens of thousands of machines. Even then we should only expect a few retries before finding a free ID
* Add design doc, docstrings, document hyper-v wmi, python wmi usage. Adhere to pep-8 more closely
* This patch adds support for EC2 security groups using libvirt's nwfilter mechanism, which in turn uses iptables and ebtables on the individual compute nodes. This has a number of benefits: * Inter-VM network traffic can take the fastest route through the network without our having to worry about getting it through a central firewall. * Not relying on a central firewall also removes a potential SPOF. * The filtering load is distributed, offering great scalability
* Change internal_id from a 32 bit int to a 64 bit int
* 32 bit internal_ids become 64 bit. Since there is no 64 bit native type in SqlAlchemy, we use PickleType which uses the Binary SqlAlchemy type under the hood
* Make Instance.name a string again instead of an integer
* Now that the ec2 id is not the same as the name of the instance, don't compare internal_id [nee ec2_id] to instance names provided by the virtualization driver. Compare names directly instead
* Fix bug 659330
* Catch exception.NotFound when getting project VPN data
* Improve the virt unit tests
* Remove spurious project_id addition to KeyPair model
* APIRequestContext.admin is no more.
* Rename ec2_id_list back to instance_id to conform to EC2 argument spec
* Fix bug 657001 (rename all Rackspace references to OpenStack references)
* Extracts the kernel and ramdisk id from manifests and puts in into images' metadata
* Fix EC2 GetConsoleOutput method and add unit tests for it
* Rename rsapi to osapi, and make the default subdomain for OpenStack API calls be 'api' instead of 'rs'
* Fix bug 658444
* Adds --force option to run_tests.sh to clear virtualenv. Useful when dependencies change
* If machine manifest includes a kernel and/or ramdisk id, include it in the image's metadata
* Rename ec2 get_console_output's instance ID argument to 'instance_id'. It's passed as a kwarg, based on key in the http query, so it must be named this way
* if using local copy (use_s3=false) we need to know where to find the image
* curl not available on Windows for s3 download. also os-agnostic local copy
* Register the Hyper-V module into the list of virt modules
* hyper-v driver created
* Twisted pidfile and other flag parameters simply do not function on Windows
* Renames every instance of "rackspace" in the API and test code base. Also includes a minor patch for the API Servers controller to use images correctly in the absence of Glance
* That's what I get for not using a good vimrc
* Mass renaming
* Start stripping out the translators
* Remove redis dependency from RS Images API
* Remove redis dependency from Images controller
* Since FLAGS.images_path was not set for nova-compute, I could not launch instances due to an exception at _fetch_local_image() trying to access to it. I think that this is the reason of Bug655217
* Imported images_path from nova.objectstore for nova-compute. Without its setting, it fails to launch instances by exception at _fetch_local_image
* Defined images_path for nova-compute. Without its setting, it fails to launch instances by exception at _fetch_local_image
* Cleans up a broken servers unit test
* Huge sweeping changes
* Adds stubs and tests for GlanceImageService and LocalImageService. Adds basic plumbing for ParallaxClient and TellerClient and hooks that into the GlanceImageService
* Typo
* Missed an ec2_id conversion to internal_id
* Cleanup around the rackspace API for the ec2 to internal_id transition
* merge prop fixes
* A little more clean up
* Replace model.Instance.ec2_id with an integer internal_id so that both APIs can represent the ID to external users
* Fix clause comparing id to internal_id
* Adds unit test for calling show() on a non-existing image. Changes return from real Parallax service per sirp's recommendation for actual returned dict() values
* Remove debugging code, and move import to the top
* Make (some) cloud unit tests run without a full-blown set up
* Stub out ec2.images.list() for unit tests
* Make rpc calls work in unit tests by adding extra declare_consumer and consume methods on the FakeRabbit backend
* Add a connect_to_eventlet method
* Un-twistedify get_console_ouptut
* Create and destroy user appropriately. Remove security group related tests (since they haven't been merged yet)
* Run the virt tests by default
* Keep handles to loggers open after daemonizing
* merged trunk and fixed tests
* Cleans up the unit tests that are meant to be run with nosetests
* Update Parallax default port number to match Glance
* One last bad line
* merge from gundlach ec2 conversion
* Adds ParallaxClient and TellerClient plumbing for GlanceImageService. Adds stubs FakeParallaxClient and unit tests for LocalImageService and GlanceImageService
* Fix broken unit tests
* Matches changes in the database / model layer with corresponding fixes to nova.virt.xenapi
* Replace the embarrasingly crude string based tests for to_xml with some more sensible ElementTree based stuff
* A shiny, new Auth driver backed by SQLAlchemy. Read it and weep. I did
* Move manager_class instantiation and db.service_* calls out of nova.service.Service.__init__ into a new nova.service.Service.startService method which gets called by twisted. This delays opening db connections (and thus sqlite file creation) until after privileges have been shed by twisted
* Add pylint thingamajig for startService (name defined by Twisted)
* Revert r312
* Add a context of None to the call to db.instance_get_all
* Honour the --verbose flag by setting the logging level to DEBUG
* Accidentally renamed volume related stuff
* More clean up and conflict resolution
* Move manager_class instantiation and db.service_* calls out of nova.service.Service.__init__ into a new nova.service.Service.startService method which gets called by twisted. This delays opening db connections (and thus sqlite file creation) until after privileges have been shed by twisted
* Bug #653560: AttributeError in VlanManager.periodic_tasks
* Bug #653534: NameError on session_get in sqlalchemy.api.service_update
* Fixes to address the following issues:
* s/APIRequestContext/get_admin_context/ <-- sudo for request contexts
* Bug #654034: nova-manage doesn't honour --verbose flag
* Bug #654025: nova-manage project zip and nova-manage vpn list broken by change in DB semantics when networks are missing
* Bug #654023: nova-manage vpn commands broken, resulting in erroneous "Wrong number of arguments supplied" message
* fix typo in setup_compute_network
* pack and unpack context
* add missing to_dict
* Bug #653651: XenAPI support completely broken by orm-refactor merge
* Bug #653560: AttributeError in VlanManager.periodic_tasks
* Bug #653534: NameError on session_get in sqlalchemy.api.service_update
* Adjust db api usage according to recent refactoring
* Make _dhcp_file ensure the existence of the directory containing the files it returns
* Keep handles to loggers open after daemonizing
* Adds BaseImageService and flag to control image service loading. Adds unit test for local image service
* Cleans up the unit tests that are meant to be run with nosetests
* Refactor sqlalchemy api to perform contextual authorization
* automatically convert strings passed into the api into their respective original values
* Fix the deprecation warnings for passing no context
* Address a few comments from Todd
* Merged trunk
* Locked down fixed ips and improved network tests
* merged remove-network-index
* Fixed flat network manager with network index gone
* merged trunk
* show project ids for groups instead of user ids
* create a new manager for flat networking including dhcp
* First attempt at a uuid generator -- but we've lost a 'topic' input so i don't know what that did
* Find other places in the code that used ec2_id or get_instance_by_ec2_id and use internal_id as appropriate
* Convert EC2 cloud.py from assuming that EC2 IDs are stored directly in the database, to assuming that EC2 IDs should be converted to internal IDs
* Method cleanup and fixing the servers tests
* merged trunk, removed extra quotas
* Adds support for periodic_tasks on manager that are regularly called by the service and recovers fixed_ips that didn't get disassociated properly
* Replace database instance 'ec2_id' with 'internal_id' throughout the nova.db package. internal_id is now an integer -- we need to figure out how to make this a bigint or something
* merged trunk
* refactoring
* refactoring
* Includes changes for creating instances via the Rackspace API. Utilizes much of the existing EC2 functionality to power the Rackspace side of things, at least for now
* Get rid of mention of mongo, since we are using openstack/swift
* Mongo bad, swift good
* Add a DB backend for auth manager
* Bug #652103: NameError in exception handler in sqlalchemy API layer
* Bug #652103: NameError in exception handler in sqlalchemy API layer
* Bug #651887: xenapi list_instances completely broken
* Grabbed the wrong copyright info
* Cleaned up db/api.py
* Refactored APIRequestContext
* Bug #651887: xenapi list_instances completely broken
* Simplified authorization with decorators" "
* Removed deprecated bits from NovaBase
* Wired up context auth for keypairs
* Completed quota context auth
* Finished context auth for network
* Finished instance context auth
* Finished instance context auth
* Made network tests pass again
* Whoops, forgot the exception handling bit
* Missed a few attributes while mirroring the ec2 instance spin up
* pylint and pep8 cleanup
* Forgot the context module
* Some minor cleanup
* Servers stuff
* merge rsapi_reboot from gundlach
* Wired up context auth for services
* Server creation up to, but not including, network configuration
* Progress on volumes Fixed foreign keys to respect deleted flag
* Support reboot in api.rackspace by extracting reboot function from api.ec2 into api.cloud
* Make Fault raiseable, and add a test to verify that
* Make Fault raiseable by inheriting from webob.exc.HTTPException
* Related: https://code.launchpad.net/~anso/nova/authupdate/+merge/36925
* Remove debuggish print statement
* Make update work correctly
* Server update name and password
* Support the pagination interface in RS API -- the &offset and &limit parameters are now recognized
* Update from trunk to handle one-line merge conflict
* Support fault notation in error messages in the RS API
* Limit entity lists by &offset and &limit
* After update from trunk, a few more exceptions that need to be converted to Faults
* fix ordering of rules to actually allow out and drop in
* fix the primary and secondary join
* autocreate the models and use security_groups
* Began wiring up context authorization
* Apply patch from Vish to fix a hardcoded id in the unit tests
* removed a few extra items
* merged with soren's branch
* fix loading to ignore deleted items
* Add user-editable name & notes/description to volumes, instances, and images
* merged trunk
* patch for test
* fix join and misnamed method
* fix eagerload to be joins that filter by deleted == False
* * Create an AuthManager#update_user method to change keys and admin status. * Refactor the auth_unittest to not care about test order * Expose the update_user method via nova-manage
* Updates the fix-iptables branch with a number of bugfixes
* Fixes reversed arguments in nova-manage project environment
* Makes sure that multiple copies of nova-network don't create multiple copies of the same NetworkIndex
* Fix a few errors in api calls related to mistyped database methods for floating_ips: specifically describe addresses and and associate address
* Merged Termie's branch that starts tornado removal and fixed rpc test cases for twisted. Nothing is testing the Eventlet version of rpc.call though yet
* Adds bpython support to nova-manage shell, because it is super sexy
* Adds a disabled flag to service model and check for it when scheduling instances and volumes
* Adds bpython support to nova-manage shell, because it is super sexy
* Added random ec2 style id's for volumes and instances
* fix security group revoke
* Fixed tests
* Removed str_id from FixedIp references
* missed a comma
* improved commenting
* Fault support
* fix flag defaults
* typo s/boo/bool
* merged and removed duplicated methods
* fixed merge conflicts
* removed extra code that slipped in from a test branch
* Fixed name property on instance model
* Implementation of the Rackspace servers API controller
* Added checks for uniqueness for ec2 id
* fix test for editable image
* Add authorization info for cloud endpoints
* Remove TODO, since apparently newer boto doesn't die on extra fields
* add disabled column to services and check for it in scheduler
* Hook the AuthManger#modify_user method into nova-manage commands
* Refactored adminclient to support multiple regions
* merged network-lease-fix
* merged floating-ips
* move default group creation to api
* Implemented random instance and volume strings for ec2 api
* Adds --force option to run_tests.sh to clear virtualenv. Useful when dependencies change
* merge from trunk
* Instance & Image renaming fixes
* merge from gundlach
* Testing testing testing
* get rid of network indexes and make networks into a pool
* Add Serializer.deserialize(xml_or_json_string)
* merged trunk
* return a value if possible from export_device_create_safe
* merged floating-ip-by-project
* merged network-lease-fix
* merged trunk
* Stop trying to install nova-api-new (it's gone). Install nova-scheduler
* Call out to 'sudo kill' instead of using os.kill. dnsmasq runs as root or nobody, nova may or may not be running as root, so os.kill won't work
* Make sure we also start dnsmasq on startup if we're managing networks
* Improve unit tests for network filtering. It now tracks recursive filter dependencies, so even if we change the filter layering, it still correctly checks for the presence of the arp, mac, and ip spoofing filters
* Make sure arguments to string format are in the correct order
* Make the incoming blocking rules take precedence over the output accept rules
* db api call to get instances by user and user checking in each of the server actions
* More cleanup, backup_schedules controller, server details and the beginnings of the servers action route
* This is getting ridiculous
* Power state mapping
* Set priority of security group rules to 300 to make sure they override the defaults
* Recreate ensure_security_group_filter. Needed for refresh
* Clean up nwfilter code. Move our filters into the ipv4 chain
* If neither a security group nor a cidr has been passed, assume cidr=0.0.0.0/0
* More re-work around the ORM changes and testing
* Support content type detection in serializer
* If an instance never got scheduled for whatever reason, its host will turn up as None. Filter those out to make sure refresh works
* Only call _on_set_network_host on nova-network hosts
* Allow DHCP requests through, pass the IP of the gateway as the dhcp server
* Add a flag the specifies where to find nova-dhcpbridge
* Ensure dnsmasq can read updates to dnsmasq conffile
* Set up network at manager instantiation time to ensure we're ready to handle the networks we're already supposed to handle
* Add db api methods for retrieving the networks for which a host is the designated network host
* Apply IP configuration to bridge regardless of whether it existed before. The fixes a race condition on hosts running both compute and network where, if compute got there first, it would set up the bridge, but not do IP configuration (because that's meant to happen on the network host), and when network came around, it would see the interface already there and not configure it further
* Removed extra logging from debugging
* reorganize iptables clear and make sure use_nova_chains is a boolean
* allow in and out for network and compute hosts
* Modification of test stubbing to match new domain requirements for the router, and removal of the unnecessary rackspace base controller
* Minor changes to be committed so trunk can be merged in
* disable output drop for the moment because it is too restrictive
* add forwarding ACCEPT for outgoing packets on compute host
* fix a few missed calls to _confirm_rule and 80 char issues
* allow mgmt ip access to api
* flush the nova chains
* Test the AuthManager interface explicitly, in case the user/project wrappers fail or change at some point. Those interfaces should be tested on their own
* Update auth manager to have a update_user method and better tests
* add a reset command
* Merged Termie's branch and fixed rpc test cases for tesited. Nothing is testing the Eventlet version of rpc.call though yet
* improved the shell script for iptables
* Finished making admin client work for multi-region
* Install nova-scheduler
* nova-api-new is no more. Don't attempt to install it
* Add multi region support for adminclient
* Merging in changes from rs_auth, since I needed something modern to develop on while waiting for Hudson to right itself
* whatever
* Put EC2 API -> eventlet back into trunk, fixing the bits that I missed when I put it into trunk on 9/21
* Apply vish's patch
* Applied vish's fixes
* Implementation of Rackspace token based authentication for the Openstack API
* fixed a few missing params from iptables rules
* removed extra line in manage
* made use of nova_ chains a flag and fixed a few typos
* put setup_iptables in the right dir
* Fixed rpc consumer to use unique return connection to prevent overlap. This could be reworked to share a connection, but it should be a wait operation and not a fast poll like it was before. We could also keep a cache of opened connections to be used between requests
* fixed a couple of typos
* Re-added the ramdisk line I accidentally removed
* Added a primary_key to AuthToken, fixed some unbound variables, and now all unit tests pass
* Missed the model include, and fixed a broken test after the merge
* Some more refactoring and another unit test
* Refactored the auth branch based on review feedback
* Replaced the existing Rackspace Auth Mechanism with one that mirrors the implementation in the design document
* Merged gundlach's branch
* renamed ipchains to iptables
* merged trunk
* Fixed cloudpipe lib init
* merged fix-iptables
* When calculating timedeltas make sure both timestamps are in UTC. For people ahead of UTC, it makes the scheduler unit tests pass. For people behind UTC, it makes their services time out after 60 seconds without a heart beat rather than X hours and 60 seconds without a heart beat (where X is the number of hours they're behind UTC)
* Spot-fix endpoint reference
* Wrap WSGI container in server.serve to make it properly handle command line arguments as well as daemonise properly. Moved api and wsgi imports in the main() function to delay their inclusion until after python-daemon has closed all the file descriptors. Without this, eventlet's epoll fd gets opened before daemonize is called and thus its fd gets closed leading to very, very, very confusing errors
* Apply vish's patch
* Added FLAGS.FAKE_subdomain letting you manually set the subdomain for testing on localhost
* Address Vishy's comments
* All timestamps should be in UTC. Without this patch, the scheduler unit tests fail for anyone sufficiently East of Greenwich
* Compare project_id to '' using == (equality) rather than 'is' (identity). This is needed because '' isn't the same as u''
* Various loose ends for endpoint and tornado removal cleanup, including cloudpipe API addition, rpc.call() cleanup by removing tornado ioloop, and fixing bin/* programs. Tornado still exists as part of some test cases and those should be reworked to not require it
* Re-add root and metadata request handlers to EC2 API
* Re-added the ramdisk line I accidentally removed
* Soren's patch to fix part of ec2
* Add user display fields to instances & volumes
* Responding to eday's feedback -- make a clearer inner wsgi app
* Added a primary_key to AuthToken, fixed some unbound variables, and now all unit tests pass
* merge from trunk
* typo in instance_get
* typo in instance_get
* User updatable name & description for images
* merged trunk and fixed errors
* cleaned up exception handling for fixed_ip_get
* Added server index and detail differentiation
* merged trunk
* typo s/an/a
* Reenable access_unittest now that it works with new rbac
* Rewrite rbac tests to use Authorizer middleware
* Missed the model include, and fixed a broke test after the merge
* Delete nova.endpoint module, which used Tornado to serve up the Amazon EC2 API. Replace it with nova.api.ec2 module, which serves up the same API via a WSGI app in Eventlet. Convert relevant unit tests from Twisted to eventlet
* Remove eventlet test, now that eventlet 0.9.10 has indeed been replaced by 0.9.12 per mtaylor
* In desperation, I'm raising eventlet.__version__ so I can see why the trunk tests are failing
* merged trunk
* bpython is amazing
* Fix quota unittest and don't run rbac unit tests for the moment
* merged trunk
* Some more refactoring and another unit test
* Implements quotas with overrides for instances, volumes, and floating ips
* Renamed cc_ip flag to cc_host
* Moves keypairs out of ldap and into the common datastore
* Fixes server error on get metadata when instances are started without keypairs
* allows api servers to have a list of regions, allowing multi-cluster support if you have a shared image store and user database
* Don't use something the shell will escape as a separator. | is now =
* Added modify project command to auth manager to allow changing of project manager and description
* merged trunk
* merged trunk
* Refactored the auth branch based on review feedback
* Whitespace fixes
* Support querying version list, per the RS API spec. Fixes bug 613117
* Undo run_tests.py modification in the hopes of making this merge
* Add a RateLimitingMiddleware to the Rackspace API, implementing the rate limits as defined by the current Cloud Servers spec. The Middleware can do rate counting in memory, or (for deployments that have more than one API Server) can offload to a rate limiting service
* Use assertRaises
* A small fix to the install_venv program to allow us to run it on the tarmac box as part of the tarmac build
* Removes second copy of ProcessExecutionError that creeped in during a bad merge
* Adds an omitted yield in compute manager detach_volume
* Move the code that extracts the console output into the virt drivers. Move the code that formats it up into the API layer. Add support for Xen console
* Add Xen template and use it by default if libvirt_type=xen
* added rescue mode support and made reboot work from any state
* Adds timing fields to instances and volumes to track launch times and schedule times
* Fixes two errors in cloud.py in the nova_orm branch: a) self.network is actually called network_manager b) the logic for describe-instances check on is_admin was reversed
* Adds timing fields to instances and volumes to track launch times and schedule times
* updated docstring
* add in a few comments
* s/\t/ /g, and add some comments
* add in support for ajaxterm console access
* add security and session timeout to ajaxterm
* initial commit of ajaxterm
* Replaced the existing Rackspace Auth Mechanism with one that mirrors the implementation in the design document
* Whitespace fixes
* Added missing masquerade rules
* Fix things not quite merged perfectly -- all tests now pass
* Better error message on the failure of a spawned process, and it's a ProcessExecutionException irrespective of how the process is run (twisted or not)
* Added iptables host initial configuration
* Added iptables host initial configuration
* Proposing merge to get feedback on orm refactoring. I am very interested in feedback to all of these changes
* Support querying version list
* Add support for middleware proxying to a ratelimiting.WSGIApp, for deployments that use more than one API Server and thus can't store ratelimiting counters in memory
* Test the WSGIApp
* RateLimitingMiddleware tests
* Address a couple of the TODO's: We now have half-decent input validation for AuthorizeSecurityGroupIngress and RevokeDitto
* Clean up use of ORM to remove the need for scoped_session
* Roll back my slightly over-zealous clean up work
* More ORM object cleanup
* Clean up use of objects coming out of the ORM
* RateLimitingMiddleware
* Add ratelimiting package into Nova. After Austin it'll be pulled out into PyPI
* When destroying a VM using the XenAPI backend, if the VM is still running (the usual case) the destroy fails. It needs to be powered-off first
* Leave out the network setting from the interfaces template. It does not get passed anymore
* Network model has network_str attribute
* Cast process input to a str. It must not be unicode, but stuff that comes out of the database might very well be unicode, so using such a value in a template makes the whole thing unicode
* Make refresh_security_groups play well with inlineCallbacks
* Fix up rule generation. It turns out nwfilter gets very, very wonky indeed if you mix <ip> rules and <tcp> rules. Setting a TCP rule adds an early rule to ebtables that ends up overriding the <ip> rules which are last in that table
* Add a bunch of TODO's to the API implementation
* Multiple security group support
* Remove power state constants that have ended up duplicated following a bad merge. They were moved from nova.compute.node.Instance into nova.compute.power_state at the same time that Instance was moved into nova.compute.service. We've ended up with these constants in both places
* now we can run files - thanks vish
* Move vol.destroy() call out of the _check method in test_multiple_volume_race_condition test and into a callback of the DeferredList. This should fix the intermittent failure of that test. I /think/ test_too_many_volumes's failure was caused by test_multiple_volume_race_condition failure, since I have not been able to reproduce its failure after fixing this one
* Adds 'shell run' to nova manage, which spawns a shell with flags properly imported
* Finish pulling S3ImageService out of this mergeprop
* Pull S3ImageService out of this mergeprop
* Correctly pass ip_address to templates
* Fix call to listNWFilters
* Make changes to security group rules propagate to the relevant compute nodes
* Filters all get defined when running an instance
* added missing yield in detach_volume
* multiple network controllers will not create duplicate indexes
* renamed _get_quota to get_quota and moved int(size) into quota.py
* add a shell to nova-manage, which respects flags (taken from django)
* Move vol.destroy() call out of the _check method in test_multiple_volume_race_condition test and into a callback of the DeferredList. This should fix the intermittent failure of that test. I /think/ test_too_many_volumes's failure was caused by test_multiple_volume_race_condition failure, since I have not been able to reproduce its failure after fixing this one
* removed second copy of ProcessExecutionError
* move the warnings about leasing ips
* simplified query
* missed a space
* set leased = 0 as well on disassociate update
* speed up the query and make sure allocated is false
* workaround for mysql select in update
* Periodic callback for services and managers. Added code to automatically disassociate stale ip addresses
* fixed typo
* flag for retries on volume commands
* auto all and start all exceptions should be ignored
* generalized retry into try_execute
* more error handling in volume driver code
* handle exceptions thrown by vblade stop and vblade destroy
* merged trunk
* deleting is set by cloud
* re added missing volume update
* Integrity error is in a different exc file
* allow multiple volumes to run ensure_blades without creating duplicates
* fixed name for unique constraint
* export devices unique
* merged instance time and added better concurrency
* make fixed_ip_get_by_address return the instance as well so we don't run into concurrency issues where it is disassociated in between
* disassociate floating is supposed to take floating_address
* speed up generation of dhcp_hosts and don't run into None errors if instance is deleted
* don't allocate the same floating ip multiple times
* don't allow deletion or attachment of volume unless it is available
* fixed reference to misnamed method
* manage command for project quotas
* merged trunk
* implement floating_ip_get_all_by_project and renamed db methods that get more then one to get_all_by instead of get_by
* fixed reversed args in nova-manage project environment
* merged scheduler
* fix instance time
* move volume to the scheduler
* tests for volumes work
* update query and test
* merged quotas
* use gigabytes and cores
* use a string version of key name when constructing mpi dict because None doesn't work well in lookup
* db not self.db
* Security Group API layer cleanup
* merged trunk
* added terminated_at to volume and moved setting of terminated_at into cloud
* remerged scheduler
* merged trunk
* merged trunk
* merged trunk
* merged trunk
* fixed reversed admin logic on describe instances
* fixed typo network => network_manager in cloud.py
* fixed old key reference and made keypair name constistent -> key_pair
* typo fixes, add flag to nova-dhcpbridge
* fixed tests, added a flag for updating dhcp on disassociate
* simplified network instance association
* fix network association issue
* merged trunk
* improved network error case handling for fixed ips
* it is called regionEndpoint, and use pipe as a separator
* move keypair generation out of auth and fix tests
* Fixed manager_user reference in create_project
* Finished security group / project refactor
* delete keypairs when a user is deleted
* remove keypair from driver
* moved keypairs to db using the same interface
* multi-region flag for describe regions
* make api error messages more readable
* Refactored to security group api to support projects
* set dnsName on describe
* merged orm and put instance in scheduling state
* just warn if an ip was already deallocated
* fix mpi 500 on fixed ip
* hostname should be string id
* dhcpbridge needed host instead of node name
* add a simple iterator to NovaBase to support converting into dictionary
* Adjust a few things to make the unit tests happy again
* First pass of nwfilter based security group implementation. It is not where it is supposed to be and it does not actually do anything yet
* couple more errors in metadata
* typo in metadata call
* fixed messed up call in metadata
* added modify project command to allow project manager and description to be updated
* Change "exn" to "exc" to fit with the common style
* Create and delete security groups works. Adding and revoking rules works. DescribeSecurityGroups returns the groups and rules. So, the API seems to be done. Yay
* merged describe_speed
* merged scheduler
* set host when item is scheduled
* remove print statements
* removed extra quotes around instance_type
* don't pass topic into schedule_run_instance
* added scheduled_at to instances and volumes
* quotas working and tests passing
* address test almost works
* quota tests
* merged orm
* fix unittest
* merged orm
* fix rare condition where describe is called before instance has an ip
* merged orm
* make the db creates return refs instead of ids
* add missing files for quota
* kwargs don't work if you prepend an underscore
* merged orm, added database methods for getting volume and ip data for projects
* database support for quotas
* Correct style issues brought up in termie's review
* mocking out quotas
* don't need to pass instance_id to network on associate
* floating_address is the name for the cast
* merged support code from orm branch
* faster describe_addresses
* added floating ip commands and launched_at terminated_at, deleted_at for objects
* merged orm
* solution that works with this version
* fix describe addresses
* remove extraneous get_host calls that were requiring an extra db trip
* pass volume['id'] instead of string id to delete volume
* fix volume delete issue and volume hostname display
* fix logging for scheduler to properly display method name
* fixed logic in set_state code to stop endless loops
* Authorize and Revoke access now works
* list command for floating ips
* merged describe speed
* merged orm
* floating ip commands
* removed extraneous rollback
* speed up describe by loading fixed and floating ips
* AuthorizeSecurityGroupIngress now works
* switch to using utcnow
* Alright, first hole poked all the way through. We can now create security groups and read them back
* don't fail in db if context isn't a dict, since we're still using a class based context in the api
* logging for backend is now info instead of error
* merged orm
* merged orm
* set state everywhere
* put soren's fancy path code in scheduler bin as well
* missing deleted ref
* merged orm
* merged orm
* consistent naming for instance_set_state
* Tests turn things into inlineCallbacks
* Missed an instance of attach_to_tornado
* Remove tornado-related code from almost everything
* It's annoying and confusing to have to set PYTHONPATH to point to your development tree before you run any of the scripts
* deleted typo
* merged orm
* merged orm
* fixed missing paren
* merge orm
* make timestamps for instances and volumes, includes additions to get deleted objects from db using deleted flag
* merged orm
* remove end of line slashes from models.py
* Make the scripts in bin/ detect if they're being run from a bzr checkout or an extracted release tarball or whatever and adjust PYTHONPATH accordingly
* merged orm
* merged orm branch
* set state moved to db layer
* updated to the new orm code
* changed a few unused context to _context
* a few formatting fixes and moved exception
* fixed a few bugs in volume handling
* merged trunk
* Last of cleanup, including removing fake_storage flage
* more fixes from code review
* review db code cleanup
* review cleanup for compute manager
* first pass at cleanup rackspace/servers.py
* dhcpbridge fixes from review
* more fixes to session handling
* few typos in updates
* don't log all sql statements
* one more whitespace fix
* whitespace fixes
* fix for getting reference on service update
* clean up of session handling
* New version of eventlet handles Twisted & eventlet running at the same time
* fix docstrings and formatting
* Oops, APIRequestContext's signature has changed
* merged orm
* fix floating_ip to follow standard create pattern
* Add stubbed out handler for AuthorizeSecurityGroupIngress EC2 API call
* merged orm_deux
* Merged trunk
* Add a clean-traffic filterref to the libvirt templates to prevent spoofing and snooping attacks from the guests
* Lots of fixes to make the nova commands work properly and make datamodel work with mysql properly
* Bug #630640: Duplicated power state constants
* Bug #630636: XenAPI VM destroy fails when the VM is still running
* removed extra equals
* Just a couple of UML-only fixes: * Due to an issue with libvirt, we need to chown the disk image to root. * Just point UML's console directly at a file, and don't bother with the pty. It was only used for debugging
* removed extra file and updated sql note
* merged fixed format instances from orm
* fixed up format_instances
* merged server.py change from orm branch
* reverting accidental search/replace change to server.py
* merged orm
* removed model from nova-manage
* merged orm branch
* removed references to compute.model
* send ultimate topic in to scheduler
* more scheduler tests
* test for too many instances work
* merged trunk
* fix service unit tests
* removed dangling files
* merged orm branch
* merged trunk and cleaned up test
* renamed daemon to service and update db on create and destroy
* pass all extra args from service to manager
* fix test to specify host
* inject host into manager
* Servers API remodeling and serialization handling
* Move nova.endpoint.images to api.ec2 and delete nova.endpoint
* Cloud tests pass
* OMG got api_unittests to pass
* send requests to the main API instead of to the EC2 subset -- so that it can parse out the '/services/' prefix. Also, oops, match on path_info instead of path like we're supposed to
* Remove unused APIRequestContext.handler
* Use port that boto expects
* merged orm branch
* scheduler + unittests
* removed underscores from used context
* updated models a bit and removed service classes
* Small typos, plus rework api_unittest to use WSGI instead of Tornado
* Replace an if/else with a dict lookup to a factory method
* Nurrr
* Abstractified generalization mechanism
* Revert the changes to the qemu libvirt template and make the appropriate changes in the UML template where they belong
* Create console.log ahead of time. This ensures that the user running nova-compute maintains read privileges
* This improves the changelog generated as part of "setup.py sdist". If you look at it now, it says that Tarmac has done everything and every little commit is listed. With this patch, it only logs the "top-most" commit and credits the author rather than the committer
* Fix simple errors to the point where we can run the tests [but not pass]
* notes -- conversion 'complete' except now the unit tests won't work and surely i have bugs :)
* Moved API tests into a sub-folder of the tests/ and added a stubbed-out test declarations to mirror existing API tickets
* Delete rbac.py, moving @rbac decorator knowledge into api.ec2.Authorizer WSGI middleware
* Break Router() into Router() and Executor(), and put Authorizer() (currently a stub) in between them
* Return error Responses properly, and don't muck with req.params -- make a copy instead
* merged orm branch
* pylint clean of manager and service
* pylint cleanup of db classes
* rename node_name to host
* merged trunk
* Call getInfo() instead of getVersion() on the libvirt connection object. virConnectGetVersion was not exposed properly in the python bindings until quite recently, so this makes us rather more backwards compatible
* Better log formatter for Nova. It's just like gnuchangelog, but logs the author rather than the committer
* Remove all Twisted defer references from cloud.py
* Remove inlineCallbacks and yield from cloud.py, as eventlet doesn't need it
* Move cloudcontroller and admincontroller into new api
* Adjust setup.py to match nova-rsapi -> nova-api-new rename
* small import cleanup
* Get rid of some convoluted exception handling that we don't need in eventlet
* First steps in reworking EC2 APIRequestHandler into separate Authenticate() and Router() WSGI apps
* Call getInfo() instead of getVersion() on the libvirt connection object. virConnectGetVersion was not exposed properly in the python bindings until quite recently, so this makes us rather more backwards compatible
* Fix up setup.py to match nova-rsapi -> nova-api-new rename
* a little more cleanup in compute
* pylint cleanup of tests
* add missing manager classes
* volume cleanup
* more cleanup and pylint fixes
* more pep8
* more pep8
* pep8 cleanup
* add sqlalchemy to pip requires
* merged trunk, fixed a couple errors
* Delete __init__.py in prep for turning apirequesthandler into __init__
* Move APIRequestContext into its own file
* Move APIRequest into its own file
* run and terminate work
* Move class into its own file
* fix daemon get
* Notes for converting Tornado to Eventlet
* undo change to get_my_ip
* all tests pass again
* rollback on exit
* merged session from devin
* Added session.py
* Removed get_backup_schedules from the image test
* merged devin's sqlalchemy changes
* Making tests pass
* Reconnect to libvirt on broken connection
* pylint fixes for /nova/virt/connection.py
* pylint fixes for nova/objectstore/handler.py
* ip addresses work now
* Add Flavors controller supporting
* Resolve conflicts and merge trunk
* Detect if libvirt connection has been broken and reestablish it
* instance runs
* Dead code removal
* remove creation of volume groups on boot
* tests pass
* Making tests pass
* Making tests pass
* Refactored orm to support atomic actions
* moved network code into business layer
* move None context up into cloud
* split volume into service/manager/driver
* moved models.py
* removed the last few references to models.py
* chown disk images to root for uml. Due to libvirt dropping CAP_DAC_OVERRIDE for uml, root needs to have explicit access to the disk images for stuff to work
* Create console.log ahead of time. This ensures that the user running nova-compute maintains read privileges
* fixed service mox test cases
* Renamed test.py and moved a test as per merge proposal feedback
* fixed volume unit tests
* work endpoint/images.py into an S3ImageService. The translation isn't perfect, but it's a start
* get to look like trunk
* Set UML guests to use a file as their console. This halfway fixes get-console-output for them
* network tests pass again
* Fixes issue with the same ip being assigned to multiple instances
* merged trunk and fixed tests
* Support GET /<controller>/detail
* Moved API tests into a sub-folder of the tests/ and added a stubbed-out test declarations to mirror existing API tickets
* Turn imageid translator into general translator for rackspace api ids
* move network_type flag so it is accesible in data layer
* Use compute.instance_types for flavor data instead of a FlavorService
* more data layer breakouts, lots of fixes to cloud.py
* merged jesse
* Initial support for Rackspace API /image requests. They will eventually be backed by Glance
* Fix a pep8 violation
* improve the volume export - sleep & check export
* missing context and move volume_update to before the export
* update volume create code
* A few small changes to install_venv to let venv builds work on the tarmac box
* small tweaks
* move create volume to work like instances
* work towards volumes using db layer
* merge vish
* fix setup compute network
* merge vish
* merge vish
* use vlan for network type since it works
* merge vish
* more work on getting running instances to work
* merge vish
* more cleanup
* Flavors work
* pep8
* Delete unused directory
* Move imageservice to its own directory
* getting run/terminate/describe to work
* OK, break out ternary operator (good to know that it slowed you down to read it)
* Style fixes
* fix some errors with networking rules
* typo in release_ip
* run instances works
* Ensure that --gid and --uid options work for both twisted and non-twisted daemons
* Fixes an error in setup_compute_network that was causing network setup to fail
* add back in the needed calls for dhcpbridge
* removed old imports and moved flags
* merge and fixes to creates to all return id
* bunch more fixes
* moving network code and fixing run_instances
* jesse's run_instances changes
* fix daemons and move network code
* Rework virt.xenapi's concurrency model. There were many places where we were inadvertently blocking the reactor thread. The reworking puts all calls to XenAPI on background threads, so that they won't block the reactor thread
* merged trunk and fixed merge errors
* Refactored network model access into data abstraction layer
* Get the output formatting correct
* Typo
* Don't serialize in Controller subclass now that wsgi.Controller handles it for us
* Move serialize() to wsgi.Controller so __call__ can serialize() action return values if they are dicts
* Serialize properly
* Support opaque id to rs int id as well
* License
* Moves auth.manager to the data layer
* Add db abstraction and unittets for service.py
* Clarified what the 'Mapped device not found' exception really means. Fixed TODO. Some formatting to be closer to 80 chars
* Added missing "self."
* Alphabetize the methods in the db layer
* fix concurrency issue with multiple instances getting the same ip
* small fixes to network
* Fixed typo
* Better error message on subprocess spawn fail, and it's a ProcessExecutionException irrespective of how the process is run
* Check exit codes when spawning processes by default Also pass --fail to curl so that it sets exit code when download fails
* PEP8/pylint cleanup in bin and nova/auth
* move volume code into datalayer and cleanup
* Complete the Image API against a LocalImageService until Glance's API exists (at which point we'll make a GlanceImageService and make the choice of ImageService plugin configurable.)
* Added unit tests for WSGI helpers and base WSGI API
* merged termies abstractions
* Move deferredToThread into utils, as suggested by termie
* Remove whitespace to match style guide
* Data abstraction for compute service
* this file isn't being used
* Cleaned up pep8/pylint style issues in nova/auth. There are still a few pylint warnings in manager.py, but the patch is already fairly large
* More pylintrc updates
* fix report state
* Removed old cloud_topic queue setup, it is no longer used
* last few test fixes
* More bin/ pep8/pylint cleanup
* fixing more network issues
* Added '-' as possible charater in module rgx
* Merged with trunk
* Updated the tests to use webob, removed the 'called' thing and just use return values instead
* Fix unit test bug this uncovered: don't release_ip that we haven't got from issue_ip
* Fix to better reflect (my believed intent) as to the meaning of error_ok (ignore stderr vs accept failure)
* Merged with trunk
* use with_lockmode for concurrency issues
* First in a series of patches to port the API from Tornado to WSGI. Also includes a few small style fixes in the new API code
* Pull in ~eday/nova/api-port
* Merged trunk
* Merged api-port into api-port-1
* Since pylint=0.19 is our version, force everyone to use the disable-msg syntax
* Missed one
* Removed the 'controllers' directory under 'rackspace' due to full class name redundancy
* pep8 typo
* Changed our minds: keep pylint equal to Ubuntu Lucid version, and use disable-msg throughout
* Fixed typo
* Image API work
* Newest pylint supports 'disable=', not 'disable-msg='
* Fix pep8 violation
* tests pass
* network tests pass
* Added unittests for wsgi and api
* almost there
* progress on tests passing
* remove references to deleted files so tests run
* fix vpn access for auth
* merged trunk
* removed extra files
* network datamodel code
* In an effort to keep new and old API code separate, I've created a nova.api to put all new API code under. This means nova.endpoint only contains the old Tornado implementation. I also cleaned up a few pep8 and other style nits in the new API code
* No longer installs a virtualenv automatically and adds new options to bypass the interactive prompt
* Stylistic improvements
* Add documentation to spawn, reboot, and destroy stating that those functions should return Deferreds. Update the fake implementations to do so (the libvirt ones already do, and making the xenapi ones do so is the subject of a current merge request)
* start with model code
* clean up linux_net
* merged refresh from sleepsonthefloor
* See description of change... what's the difference between that message and this message again?
* Move eventlet-using class out of endpoint/__init__.py into its own submodule, so that twisted-related code using endpoint.[other stuff] wouldn't run eventlet and make unit tests throw crazy errors about eventlet 0.9.10 not playing nicely with twisted
* Remove duplicate definition of flag
* The file that I create automates this step in http://wiki.openstack.org/InstallationNova20100729 :
* Simpler installation, and, can run install_venv from anywhere instead of just from checkout root
* Use the argument handler specified by twistd, if any
* Fixes quite a few style issues across the entire nova codebase bringing it much closer to the guide described in HACKING
* merge from trunk
* merged trunk
* merged trunk and fixed conflicts
* Fixes issues with allocation and deallocation of fixed and elastic addresses
* Added documentation for the nova.virt connection interface, a note about the need to chmod the objectstore script, and a reference for the XenAPI module
* Make individual disables for R0201 instead of file-level
* All controller actions receive a 'req' parameter containing the webob Request
* improve compatibility with ec2 clients
* PEP8 and name corrections
* rather comprehensive style fixes
* fix launching and describing instances to work with sqlalchemy
* Add new libvirt_type option "uml" for user-mode-linux.. This switches the libvirt URI to uml:///system and uses a different template for the libvirt xml
* typos
* don't try to create and destroy lvs in fake mode
* refactoring volume and some cleanup in model and compute
* Add documentation to spawn, reboot, and destroy stating that those functions should return Deferreds. Update the fake implementations to do so (the libvirt ones already do, and making the xenapi ones do so is the subject of a current merge request)
* Rework virt.xenapi's concurrency model. There were many places where we were inadvertently blocking the reactor thread. The reworking puts all calls to XenAPI on background threads, so that they won't block the reactor thread
* add refresh on model
* merge in latedt from vish
* Catches and logs exceptions for rpc calls and raises a RemoteError exception on the caller side
* Removes requirement of internet connectivity to run api server
* Fixed path to keys directory
* Update cloud_unittest to match renamed internal function
* Removes the workaround for syslog-ng of removing newlines
* Fixes bug lp:616312 by reversing the order of args in nova-manage when it calls AuthManager.get_credentials
* merged trunk
* Sets a hostname for instances that properly resolves and cleans up network classes
* merged fix-hostname and fixed conflict
* Implemented admin client / admin api for fetching user roles
* Improves pep8 compliance and pylint score in network code
* Bug #617776: DescribeImagesResponse contains type element, when it should be called imageType
* Bug 617913: RunInstances response doesn't meet EC2 specification
* remove more direct session interactions
* refactor to have base helper class with shared session and engine
* ComputeConnectionTestCase is almost working again
* more work on trying to get compute tests passing
* re-add redis clearing
* make the fake-ldap system work again
* got run_tests.py to run (with many failed tests)
* Bug #617776: DescribeImagesResponse contains type element, when it should be called imageType
* initial commit for orm based models
* Add a few unit tests for libvirt_conn
* Move interfaces template into virt/, too
* Refactor LibvirtConnection a little bit for easier testing
* Remove extra "uml" from os.type
* Fixes out of order arguments in get_credentials
* pep8 and pylint cleanup
* Support JSON and XML in Serializer
* Added note regarding dependency upon XenAPI.py
* Added documentation to the nova.virt interface
* make rpc.call propogate exception info. Includes tests
* Undo the changes to cloud.py that somehow diverged from trunk
* Mergeprop cleanup
* Mergeprop cleanup
* Make WSGI routing support routing to WSGI apps or to controller+action
* Make --libvirt_type=uml do the right thing: Sets the correct libvirt URI and use a special template for the XML
* renamed missed reference to Address
* die classmethod
* merged fix-dhcpbridge
* remove class method
* typo allocated should be relased
* rename address stuff to avoid name collision and make the .all() iterator work again
* keep track of leasing state so we can delete ips that didn't ever get leased
* remove syslog-ng workaround
* Merged with trunk
* Implement the same fix as lp:~vishvananda/nova/fix-curl-project, but for virt.xenapi
* Fix exception in get_info
* Move libvirt.xml template into nova/virt
* Parameterise libvirt URI
* Merged with trunk
* fix dhcpbridge issues
* Adapts the run_tests.sh script to allow interactive or automated creation of virtualenv, or to run tests outside of a virtualenv
* Prototype implementation of Servers controller
* Working router that can target WSGI middleware or a standard controller+action
* Added a xapi plugin that can pull images from nova-objectstore, and use that to get a disk, kernel, and ramdisk for the VM
* Serializing in middleware after all... by tying to the router. maybe a good idea?
* Merged with trunk
* Actually pass in hostname and create a proper model for data in network code
* Improved roles functionality (listing & improved test coverage)
* support a hostname that can be looked up
* updated virtualenv to add eventlet, which is now a requirement
* Changes the run_tests.sh and /tools/install_venv.py scripts to be more user-friendly and not depend on PIP while not in the virtual environment
* Fixed admin api for user roles
* Merged list_roles
* fix spacing issue in ldapdriver
* Fixes bug lp:615857 by changing the name of the zip export method in nova-manage
* Wired up admin api for user roles
* change get_roles to have a flag for project_roles or not. Don't show 'projectmanager' in list of roles
* Throw exceptions for illegal roles on role add
* Adds get_roles commands to manager and driver classes
* more pylint fixes
* Implement VIF creation in the xenapi module
* lots more pylint fixes
* work on a router that works with wsgi and non-wsgi routing
* Pylint clean of vpn.py
* Further pylint cleanup
* Oops, we need eventlet as well
* pylint cleanup
* pep8 cleanup
* merged trunk
* pylint fixes for nova/objectstore/handler.py
* rename create_zip to zipfile so lazy match works
* Quick fix on location of printouts when trying to install virtualenv
* Changes the run_tests.sh and /tools/install_venv.py scripts to be more user-friendly and not depend on PIP while not in the virtual environment. Running run_tests.sh should not just work out of the box on all systems supporting easy_install..
* 2 changes in doing PEP8 & Pylint cleaning: * adding pep8 and pylint to the PIP requirements files for Tools * light cleaning work (mostly formatting) on nova/endpoints/cloud.py
* More changes to volume to fix concurrency issues. Also testing updates
* Merge
* Merged nova-tests-apitest into pylint
* Merged nova-virt-connection into nova-tests-apitest
* Pylint fixes for /nova/tests/api_unittest.py
* pylint fixes for nova/virt/connection.py
* merged trunk, fixed an error with releasing ip
* fix releasing to work properly
* Add some useful features to our flags
* pylint fixes for /nova/test.py
* Fixes pylint issues in /nova/server.py
* importing merges from hudson branch
* fixing - removing unused imports per Eric & Jay review
* initial cleanup of tests for network
* Implement the same fix as lp:~vishvananda/nova/fix-curl-project, but for virt.xenapi
* Run correctly even if called while in tools/ directory, as 'python install_venv.py'
* This branch builds off of Todd and Michael's API branches to rework the Rackspace API endpoint and WSGI layers
* separated scheduler types into own modules
* Fix up variable names instead of disabling pylint naming rule. Makes variables able to be a single letter in pylintrc
* Disables warning about TODO in code comments in pylintrc
* More pylint/pep8 cleanup, this time in bin/* files
* pylint fixes for nova/server.py
* remove duplicated report_state that exists in the base class more pylint fixes
* Fixed docstring format per Jay's review
* pylint fixes for /nova/test.py
* Move the xenapi top level directory under plugins, as suggested by Jay Pipes
* Pull trunk merge through lp:~ewanmellor/nova/add-contains
* Pull trunk merge through lp:~ewanmellor/nova/xapi-plugin
* Merged with trunk again
* light cleanup - convention stuff mostly
* convention and variable naming cleanup for pylint/pep8
* Used new (clearer) flag names when calling processes
* Merged with trunk
* Greater compliance with pep8/pylint style checks
* removing what appears to be an unused try/except statement - nova.auth.manager.UserError doesn't exist in this codebase. Leftover? Something intended to be there but never added?
* variable name cleanup
* attempting some cleanup work
* adding pep8 and pylint for regular cleanup tasks
* Cleaned up pep8/pylint for bin/* files. I did not fix rsapi since this is already cleaned up in another branch
* Merged trunk
* Reworked WSGI helper module and converted rackspace API endpoint to use it
* Changed the network imports to use new network layout
* merged with trunk
* Change nova/virt/images.py's _fetch_local_image to accept 4 args, since fetch() tries to call it with that many
* Merged Todd and Michael's changes
* pep8 and pylint cleanups
* Some pylink and pep8 cleanups. Added a pylintrc file
* fix copyrights for new files, etc
* a few more commands were putting output on stderr. In general, exceptions on stderr output seems like a bad idea
* Moved Scheduler classes into scheduler.py. Created a way to specify scheduler class that the SchedulerService uses..
* Make network its own worker! This separates the network logic from the api server, allowing us to have multiple network controllers. There a lot of stuff in networking that is ugly and should be modified with the datamodel changes. I've attempted not to mess with those things too much to keep the changeset small(ha!)
* Fixed instance model associations to host (node) and added association to ip
* Fixed write authorization for public images
* Fixes a bug where if a user was removed from a group after he had a role, he could not be re-added
* fix search/replace error
* merged trunk
* Start breaking out scheduler classes..
* WsgiStack class, eventletserver.serve. Trying to work toward a simple API that anyone can use to start an eventlet-based server composed of several WSGI apps
* Use webob to simplify wsgi middleware
* Made group membership check only search group instead of subtree. Roles in a group are removed when a user is removed from that group. Added test
* Fixes bug#614090 -- nova.virt.images._fetch_local_image being called with 4 args but only has 3
* Fixed image modification authorization, API cleanup
* fixed doc string
* compute topic for a node is compute.node not compute:node!
* almost there on random scheduler. not pushing to correct compute node topic, yet, apparently..
* First pass at making a file pass pep8 and pylint tests as an example
* merged trunk
* rename networkdata to vpn
* remove extra line accidentally added
* compute nodes should store total memory and disk space available for VMs
* merged from trunk
* added bin/nova-listinstances, which is mostly just a duplication of euca-describe-instances but doesn't go through the API
* Fixes various concurrency issues in volume worker
* Changed volumes to use a pool instead of globbing filesystem for concurrency reasons. Fixed broken tests
* clean up nova-manage. If vpn data isn't set for user it skips it
* method is called set_network_host
* fixed circular reference and tests
* renamed Vpn to NetworkData, moved the creation of data to inside network
* fix rpc command line call, remove useless deferreds
* fix error on terminate instance relating to elastic ip
* Move the xenapi top level directory under plugins, as suggested by Jay Pipes
* fixed tests, moved compute network config call, added notes, made inject option into a boolean
* fix extra reference, method passing to network, various errors in elastic_ips
* use iteritems
* reference to self.project instead of context.project + self.network_model instead of network_model
* fixes in get public address and extra references to self.network
* method should return network topic instead of network host
* use deferreds in network
* don't __ module methods
* inline commands use returnValue
* it helps to save files BEFORE committing
* Added note to README
* Fixes the curl to pass in the project properly
* Adds flag for libvirt type (hvm, qemu, etc)
* Fix deprecation warning in AuthManager. __new__ isn't allowed to take args
* created assocaition between project and host, modified commands to get host async, simplified calls to network
* use get to retrieve node_name from initial_state
* change network_service flag to network_type and don't take full class name
* vblade commands randomly toss stuff into stderr, ignore it
* delete instance doesn't fail if instances dir doesn't exist
* Huge network refactor, Round I
* Fixes boto imports to support both beta and older versions of boto
* Get IP doesn't fail of you not connected to the intetnet
* updated doc string and wrapper
* add copyright headers
* Fix exception in get_info
* Implement VIF creation
* Define __contains__ on BasicModel, so that we can use "x in datamodel"
* Fixed instance model associations to host (node) and added association to ip
* Added a xapi plugin that can pull images from nova-objectstore, and use that to get a disk, kernel, and ramdisk for the VM. The VM actually boots!
* Added project as parameter to admin client x509 zip file download
* Turn the private _image_url(path) into a public image_url(image). This will be used by virt.xenapi to instruct xapi as to which images to download
* Merged in configurable libvirt_uri, and fixes to raw disk images from the virtualbox branch
* Fixed up some of the raw disk stuff that broke in the abstraction out of libvirt
* Merged with raw disk image
* Recognize 'magic' kernel value that means "don't use a kernel" - currently aki-00000000
* Fix Tests
* Fixes nova volumes. The async commands yield properly. Simplified the call to create volume in cloud. Added some notes
* another try on fix boto
* use user.access instead of user.id
* Fixes access key passing in curl statement
* Accept a configurable libvirt_uri
* Added Cheetah to pip-requires
* Removed duplicate toXml method
* Merged with trunk
* Merged with trunk, added note about suspicious behaviour
* Added exit code checking to process.py (twisted process utils). A bit of class refactoring to make it work & cleaner. Also added some more instructive messages to install_venv.py, because otherwise people that don't know what they're doing will install the wrong pip... i.e. I did :-)
* Make nodaemon twistd processes log to stdout
* Make nodaemon twistd processes log to stdout
* use the right tag
* flag for libvirt type
* boto.s3 no longer imports connection, so we need to explicitly import it
* Added project param to admin client zip download
* boto.utils import doesn't work with new boto, import boto instead
* fix imports in endpoint/images.py boto.s3 no longer imports connection, so we need to explicitly import it
* Added --fail argument to curl invocations, so that HTTP request fails get surfaced as non-zero exit codes
* Merged with trunk
* Merged with trunk
* strip out some useless imports
* Add some useful features to our flags
* Fixed pep8 in run_test.py
* Blank commit to get tarmac merge to pick up the tags
* Fixed assertion "Someone released me too many times: too many tokens!"
* Replace the second singleton unit test, lost during a merge
* Merged with trunk to resolve merge conflicts
* oops retry and add extra exception check
* Fix deprecation warning in AuthManager. __new__ isn't allowed to take args
* Added ChangeLog generation
* Implemented admin api for rbac
* Move the reading of API parameters above the call to _get_image, so that they have a chance to take effect
* Move the reading of API parameters above the call to _get_image, so that they have a chance to take effect
* Adds initial support for XenAPI (not yet finished)
* More merges from trunk. Not everything came over the first time
* Allow driver specification in AuthManager creation
* pep8
* Fixed pep8 issues in setup.py - thanks redbo
* Use default kernel and ramdisk properly by default
* Adds optional user param to the get projects command
* Ensures default redis keys are lowercase like they were in prior versions of the code
* Pass in environment to dnsmasq properly
* Releaed 0.9.0, now on 0.9.1
* Merged trunk
* Added ChangeLog generation
* Wired up get/add/remove project members
* Merged lp:~vishvananda/nova/lp609749
* Removes logging when associating a model to something that isn't a model class
* allow driver to be passed in to auth manager instead of depending solely on flag
* make redis name default to lower case
* Merged get-projects-by-user
* Merged trunk
* Fixed project api
* Specify a filter by user for get projects
* Create a model for storing session tokens
* Fixed a typo from the the refactor of auth code
* Makes ldap flags work again
* bzr merge lp:nova/trunk
* Tagged 0.9.0 and bumped the version to 0.9.1
* Silence logs when associated models aren't found. Also document methods used ofr associating things. And get rid of some duplicated code
* Fix dnsmasq commands to pass in environment properly

0.9.0
-----

* Got the tree set for debian packaging
* use default kernel and ramdisk and check for legal access
* import ldapdriver for flags
* Removed extra include
* Added the gitignore files back in for the folks who are still on the git
* Added a few more missing files to MANIFEST.in and added some placeholder files so that setup.py would carry the empty dir
* Updated setup.py file to install stuff on a python setup.py install command
* Removed gitignore files
* Made run_tests.sh executable
* Put in a single MANIFEST.in file that takes care of things
* Changed Makefile to shell script. The Makefile approach completely broke debhelper's ability to figure out that this was a python package
* fixed typo from auth refactor
* Add sdist make target to build the MANIFEST.in file
* Removes debian dir from main tree. We'll add it back in in a different branch
* Merged trunk
* Wired up user:project auth calls
* Bump version to 0.9.0
* Makes the compute and volume daemon workers use a common base class called Service. Adds a NetworkService in preparation for splitting out networking code. General cleanup and standardizarion of naming
* fixed path to keys directory
* Fixes Bug lp:610611: deleted project vlans are deleted from the datastore before they are reused
* Add a 'sdist' make target. It first generates a MANIFEST.in based on what's in bzr, then calls python setup.py sdist
* properly delete old vlans assigned to deleted projects
* Remove debian/ from main branch
* Bump version to 0.9.0. Change author to "OpenStack". Change author_email to nova@lists.launchpad.net. Change url to http://www.openstack.org/. Change description to "cloud computing fabric controller"
* Make "make test" detect whether to use virtualenv or not, thus making virtualenv optional
* merged trunk
* Makes the objectstore require authorization, checks it properly, and makes nova-compute provide it when fetching images
* Automatically choose the correct type of test (virtualenv or system)
* Ensure that boto's config has a "Boto" section before attempting to set a value in it
* fixes buildpackage failing with dh_install: missing files
* removed old reference from nova-common.install and fixed spacing
* Flag for SessionToken ttl setting
* resolving conflict w/ merge, cleaning up virtenv setups
* resolving conflict w/ merge, cleaning up virtenv setups
* Fixes bug#610140. Thanks to Vish and Muharem for the patch
* A few minor fixes to the virtualenv installer that were breaking on ubuntu
* Give SessionToken an is_expired method
* Refactor of auth code
* Fixes bug#610140. Thanks to Vish and Muharem for the patch
* Share my updates to the Rackspace API
* Fixes to the virtualenv installer
* Ensure consistent use of filename for dhcp bridge flag file
* renamed xxxservice to service
* Began wiring up rbac admin api
* fix auth_driver flag to default to usable driver
* Adds support scripts for installing deps into a virtualenv
* In fact, it should delete them
* Lookup should only not return expired tokens
* Adds support scripts for installing deps into a virtualenv
* default flag file full path
* moved misnamed nova-dchp file
* Make _fetch_s3_image pass proper AWS Authorization headers so that image downloads work again
* Make image downloads work again in S3 handler. Listing worked, but fetching the images failed because I wasn't clever enough to use twisted.web.static.File correctly
* Move virtualenv installation out of the makefile
* Expiry awareness for SessionToken
* class based singleton for SharedPool
* Basic standup of SessionToken model for shortlived auth tokens
* merged trunk
* merged trunk
* Updated doc layout to the Sphinx two-dir layout
* Replace hardcoded "nova" with FLAGS.control_exchange
* Add a simple set of tests for S3 API (using boto)
* Fix references to image_object. This caused an internal error when using euca-deregister
* Set durable=False on TopicPublisher
* Added missing import
* Replace hardcoded example URL, username, and password with flags called xenapi_connection_url, xenapi_connection_username, xenapi_connection_password
* Fix instance cleanup
* Fix references to image_object. This caused an internal error when using euca-deregister
* removed unused assignment
* More Cleanup of code
* Fix references to get_argument, fixing internal error when calling euca-deregister
* Changes nova-volume to use twisted
* Fixes up Bucket to throw proper NotFound and NotEmpty exceptions in constructor and delete() method, and fixes up objectstore_unittest to properly use assertRaises() to check for proper exceptions and remove the assert_ calls
* Adds missing yield statement that was causing partitioning to intermittently fail
* Merged lp:~ewanmellor/nova/lp609792
* Merged lp:~ewanmellor/nova/lp609791
* Replace hardcoded "nova" with FLAGS.control_exchange
* Set durable=False on TopicPublisher, so that it matches the flag on TopicConsumer. This ensures that either redeclaration of the control_exchange will use the same flag, and avoid AMQPChannelException
* Add an import so that nova-compute sees the images_path flag, so that it can be used on the command line
* Return a 404 when attempting to access a bucket that does not exist
* Removed creation of process pools. We don't use these any more now that we're using process.simple_execute
* Fix assertion "Someone released me too many times: too many tokens!" when more than one process was running at the same time. This was caused by the override of SharedPool.__new__ not stopping ProcessPool.__init__ from being run whenever process.simple_execute is called
* Always make sure to set a Date headers, since it's needed to calculate the S3 Auth header
* Updated the README file
* Updated sphinx layout to a two-dir layout like swift. Updated a doc string to get rid of a Sphinx warning
* Updated URLs in the README file to point to current locations
* Add missing import following merge from trunk (cset 150)
* Merged with trunk, since a lot of useful things have gone in there recently
* fixed bug where partition code was sometimes failing due to initial dd not being yielded properly
* Fixed bug 608505 - was freeing the wrong address (should have freed 'secondaddress', was freeing 'address')
* renamed xxxnode to xxservice
* Add (completely untested) code to include an Authorization header for the S3 request to fetch an image
* Check signature for S3 requests
* Fixes problem with describe-addresses returning all public ips instead of the ones for just the user's project
* Fix for extra spaces in export statements in scripts relating to x509 certs
* Adds a Makefile to fill dependencies for testing
* Fix syslogging of exceptions by stripping newlines from the exception info
* Merged fix for bug 608505 so unit tests pass
* Check exit codes when spawning processes by default
* Nobody wants to take on this twisted cleanup. It works for now, but could be much nicer if twisted has a nice hook-point for exception mapping
* syslog changes
* typo fixes and extra print statements removed
* added todo for ABC
* Fixed bug 608505 - was freeing the wrong address (should have freed 'secondaddress', was freeing 'address')
* Merged trunk, fixed extra references to fake_users
* refactoring of imports for fakeldapdriver
* make nova-network executable
* refactor daemons to use common base class in preparation for network refactor
* reorder import statement and remove commented-out test case that is the same as api_unittest in objectstore_unittest
* Fixes up Bucket to throw proper NotFound and NotEmpty exceptions in constructor and delete() method, and fixes up objectstore_unittest to properly use assertRaises() to check for proper exceptions and remove the assert_ calls
* Fix bug 607501. Raise 403, not exception if Authorization header not passed. Also added missing call to request.finish() & Python exception-handling style tweak
* merge with twisted-volume
* remove all of the unused saved return values from attach_to_twisted
* fix for describe addresses showing everyone's public ips
* update the logic for calculating network sizes
* Locally administered mac addresses have the second least significant bit of the most significant byte set. If this byte is set then udev on ubuntu doesn't set persistent net rules
* use a locally administered mac address so it isn't saved by udev
* Convert processpool to a singleton, and switch node.py calls to use it. (Replaces passing a processpool object around all the time.)
* Fixed the broken reference to
* remove spaces from export statements in scripts relating to certs
* Cleanups
* Able to set up DNS, and remove udev network rules
* Move self.ldap to global ldap to make changes easier if we ever implement settings
* Cleanup per suggestions
* network unittest clean up
* Test cleanup, make driver return dictionaries and construct objects in manager
* Able to boot without kernel or ramdisk. libvirt.xml.template is now a Cheetah template
* Merged https://code.launchpad.net/~justin-fathomdb/nova/copy-error-handling
* Merged bug fixes
* Map exceptions to 404 / 403 codes, as was done before the move to twisted. However, I don't think this is the right way to do this in Twisted. For example, exceptions thrown after the render method returns will not be mapped
* Merged lp:~justin-fathomdb/nova/bug607501
* Merged trunk. Fixed new references to UserManager
* I put the call to request.finish() in the wrong place. :-(
* More docstrings, don't autocreate projects
* Raise 401, not exception if Authorization header not passed. Also minor fixes & Python exception-handling style tweak
* LdapDriver cleanup: docstrings and parameter ordering
* Ask curl to set exit code if resource was not found
* Fixes to dhcp lease code to use a flagfile
* merged trunk
* Massive refactor of users.py
* Hmm, serves me right for not understanding the request, eh? :) Now too_many_addresses test case is idempotent in regards to running in isolation and uses self.flags.network_size instead of the magic number 32
* Redirect STDERR to output to an errlog file when running run_tests.py
* Send message ack in rpc.call and make queues durable
* Fixed name change caused by remove-vendor merge
* Replace tornado objectstore with twisted web
* merged in trunk and fixed import merge errors
* First commit of XenAPI-specific code (i.e. connections to the open-source community project Xen Cloud Platform, or the open-source commercial product Citrix XenServer)
* Remove the tight coupling between nova.compute.monitor and libvirt. The libvirt-specific code was placed in nova.virt.libvirt_conn by the last changeset. This greatly simplifies the monitor code, and puts the libvirt-specific XML record parsing in a libvirt-specific place
* In preparation for XenAPI support, refactor the interface between nova.compute and the hypervisor (i.e. libvirt)
* Fixed references to nova.utils that were broken by a change of import statement in the remove-vendor merge
* Remove s3_internal_port setting. Objectstore should be able to handle the beatings now. As such, nginx is no longer needed, so it's removed from the dependencies and the configuration files are removed
* Replace nova-objectstore with a twistd style wrapper. Add a get_application method to objectstore handler
* Minor post-merge fixes
* Fixed _redis_name and _redis_key
* Add build_sphinx support
* fix conf file to no longer have daemonize=1 because twistd daemonizes by default
* make nova-volume start with twisteds daemonize stuff
* Makin the queues non-durable by default
* Ack messages during call so rabbit leaks less
* simplify call to simple_execute
* merge extra singleton-pool changes
* Added a config file to let setup.py drive building the sphinx docs
* make simple method wrapper for process pool simple_execute
* change volume code to use twisted
* remove calls to runthis from node
* merge with singleton pool
* Removed unused Pool from process.py, added a singleton pool called SharedPool, changed calls in node to use singleton pool
* Fixes things that were not quite right after big merge party
* Make S3 API handler more idiomatic Twisted Web-y
* _redis_name wasn't picking up override_type correctly, and _redis_key wasn't using it
* Quick fix to variable names for consistency in documentation..
* Adds a fix to the idempotency of the test_too_many_addresses test case by adding a simple property to the BaseNetwork class and calculating the number of available IPs by asking the network class to tell the test how many static and preallocated IP addresses are in use before entering the loop to "blow up" the address allocation..
* Adds a flag to redirect STDERR when running run_tests.py. Defaults to a truncate-on-write logfile named run_tests.err.log. Adds ignore rule for generated errlog file
* no more print in storage unittest
* reorder imports spacing
* Fixes to dhcp lease code to use a flagfile
* merged trunk
* This branch fixes some unfortunate interaction between Nova and boto
* Make sure we pass str objects instead of unicode objects to boto as our credentials
* remove import of vendor since we have PPA now
* Updates the test suite to work
* Disabled a tmpdir cleanup
* remove vendor
* update copyrights
* Volume_ID identifier needed a return in the property. Also looking for race conditions in the destructor
* bin to import images from canonical image store
* add logging import to datastore
* fix merge errors
* change default vpn ports and remove complex vpn ip iteration
* fix reference to BasicModel and imports
* Cleanups related to BasicModel (whitespace, names, etc)
* Updating buildbot address
* Fixed buildbot
* work on importing images
* When destroying an Instance, disassociate with Node
* Smiteme
* Smiteme
* Smiteme
* Smiteme
* Move BasicModel into datastore
* Smiteme
* Smiteme
* Whitespace change
* unhardcode the binary name
* Fooish
* Finish singletonizing UserManager usage
* Debian package additions for simple network template
* Foo
* Whitespace fix
* Remove debug statement
* Foo
* fix a typo
* Added build-deps to debian/control that are needed to run test suite. Fixed an error in a test case
* optimization to not load all instances when describe instances is called
* More buildbot testing
* More buildbot testing
* More buildbot testing
* More buildbot testing
* More buildbot testing
* More buildbot testing
* Addin buildbot
* Fix merge changelog and merge errors in utils.py
* Fixes from code review
* release 0.2.2-10
* fix for extra space in vblade-persist
* Avoid using s-expr, pkcs1-conv, and lsh-export-key
* release 0.2.2-9
* fixed bug in auth group_exists
* Move nova related configuration files into /etc/nova/
* move check for none before get mpi data
* Refactored smoketests flags
* Fixes to smoketest flags
* Minor smoketest refactoring
* fixes from code review
* typo in exception in crypto
* datetime import typo
* added missing isotime method from utils
* release 0.2.2-8
* missed a comma
* release 0.2.2-7
* use a flag for cert subject
* whitespace fixes and header changes
* Fixed the os.environ patch (bogus)
* Fixes as per Vish review (whitespace, import statements)
* Off by one error in the allocation test (can someone check my subnet math?)
* Adding more tests, refactoring for dhcp logic
* Got dhcpleasor working, with test ENV for testing, and rpc.cast for real world
* Capture signals from dnsmasq and use them to update network state
* Relax the Twisted dependency to python-twisted-core (rather than the full stack)
* releasing version 0.3.0+really0.2.2-0ubuntu0ppa3
* If set, pass KernelId and RamdiskId from RunInstances call to the target compute node
* Add a default flag file for nova-manage to help it find the CA
* Ship the CA directory in nova-common
* Add a dependency on nginx from nova-objectsstore and install a suitable configuration file
* releasing version 0.3.0+really0.2.2-0ubuntu0ppa2
* Don't pass --daemonize=1 to nova-compute. It's already daemonising by default
* Add debian/nova-common.dirs to create var/lib/nova/{buckets,CA,images,instances,keys,networks}
* keeper_path is really caled datastore_path
* Fixed package version
* Move templates from python directories to /usr/share/nova
* Added --network_path setting to nova-compute's flagfile
* releasing version 0.3.0+really0.2.2-0ubuntu0ppa1
* Use rmdir instead of rm -rf to remove a tempdir
* Set better defaults in flagfiles
* Fixes and add interface template
* Simple network injection
* Simple Network avoids vlans
* clean a few merge errors from network
* Add curl as a dependency of nova-compute
* getting started update
* getting started update
* Remove _s errors from merge
* fix typos in node from merge
* remove spaces from default cert
* Make sure get_assigned_vlans and BaseNetwork.hosts always return a dict, even if the key is currently empty in the KVS
* Add _s instance attribute to Instance class. It's referenced in a bunch of places, but is never set. This is unlikely to be the right fix (why have two attributes pointing to the same object?), but it seems to make ends meet
* Replace spaces in x509 cert subject with underscores. It ends up getting split(' ')'ed and passed to subprocess.Popen, so it needs to not have spaces in it, otherwise openssl gets very upset
* Expand somewhat on the short and long descriptions in debian/control
* Use separate configuration files for the different daemons
* Removed trailing whitespace from header
* Updated licenses
* Added flags to smoketests. General cleanup
* removed all references to keeper
* reformatting
* Vpn ips and ports use redis
* review reformat
* code review reformat
* We need to be able to look up Instance by Node (live migration)
* Get rid of RedisModel
* formatting fixes and refactoring from code review
* reformatting to fit within 80 characters
* simplified handling of tempdir for Fakes
* fix for multiple shelves for each volume node
* add object class violation exception to fakeldap
* remove spaces from default cert
* remove silly default from generate cert
* fix of fakeldap imports and exceptions
* More Comments, cleanup, and reformatting
* users.py cleanup for exception handling and typo
* Make fakeldap use redis
* Refactor network.Vlan to be a BasicModel, since it touched Redis
* bugfix: rename _s to datamodel in Node in some places it was overlooked
* fix key injection script
* Fixes based on code review 27001
* added TODO
* Admin API + Worker Tracking
* fixed typo
* style cleanup
* add more info to vpn list
* Use flag for vpn key suffix instead of hardcoded string
* don't fail to create vpn key if dir exists
* Create Volume should only take an integer between 0 and 1000
* Placeholders for missing describe commands
* Set forward delay to zero (partial fix to bug #518)
* more comment reformatting
* fit comment within 80 lines
* removed extraneous reference to rpc in objectstore unit test
* Fix queue connection bugs
* Fix deletion of user when he is the last member of the group
* Fix error message for checking for projectmanager role
* Installer now creates global developer role
* Removed trailing whitespace from header
* added nova-instancemonitor debian config
* Updated licenses
* Added flags to smoketests. General cleanup
* A few missing files from the twisted patch
* Tweaks to get instancemonitor running
* Initial commit of nodemonitor
* Create DescribeImageAttribute api method
* release 0.2.2-6
* disk.py needed input for key injection to work
* release 2.2-5
* message checking callbacks only need to run 10 times a second
* release 2.2-4
* trackback formatting isn't logging correctly
* documentation updates
* fix missing tab in nova-manage
* Release 2.2-3
* use logger to print trace of unhandled exceptions
* add exit status to nova-manage
* fix fakeldap so it can use redis keeper
* fix is_running failing because state was stored as a string
* more commands in nova-manage for projects and roles
* More volume test fixes
* typo in reboot instances
* Fix mount of drive for test image
* don't need sudo anymore
* Cleaning up smoketests
* boto uses instance_type not size
* Fix to volume smoketests
* fix display of project name for admin in describe instances
* make sure to deexpress before we remove the host since deexpress uses the host
* fix error in disassociate address
* fixed reversed filtering logic
* filter keypairs for vpn keys
* allow multiple vpn connections with the same credentials
* Added admin command to restart networks
* hide vpn instances unless you are an admin and allow run_instances to launch vpn image even if it is private
* typo in my ping call
* try to ping vpn instances
* sensible defaults for instance types
* add missing import to pipelib
* Give vpns the proper ip address
* Fix format addresses
* Release 0.2.2-2
* fix more casing errors and make attachment set print
* removed extraneous .volume_id
* don't allow volumes to be attached to the same mountpoint
* fix case for volume attributes
* fix sectors off by one
* Don't use keeper for instances
* fix default state to be 0 instead of pending
* Release 0.2.2
* Fix for mpi cpu reporting
* fix detach volume
* fix status code printing in cloud
* add project ids to volumes
* add back accidentally removed bridge name. str is reserved, so don't use it as a variable name
* whitespace fixes and format instances set of object fixes
* Use instdir to iterate through instances
* fix bridge name
* Adding basic validation of volume size on creation, plus tests for it
* finished gutting keeper from volume
* First pass at validation unit tests. Haven't figured out class methods yet
* Removing keeper sludge
* Set volume status properly, first pass at validation decorators
* Adding missing default values and fixing bare Redis fetch for volume list
* one more handler typo
* fix objectstore handler typo
* fix modify image attribute typo
* NetworkNode doesn't exist anymore
* Added back in missing gateway property on networks
* Refactored Instance to get rid of _s bits, and fixed some bugs in state management
* Delete instance files on shutdown
* Flush redis db in setup and teardown of tests
* Cleaning up my accidental merge of the docs branch
* change pipelib to work with projects
* Volumes support intermediate state. Don't have to cast to storage nodes for attach/detach anymore, just let node update redis with state
* Adding nojekyll for directories
* Fix for #437 (deleting attached volumes), plus some >9 blade_id fixes
* fix instance iteration to use self.instdir.all instead of older iterators
* nasa ldap defaults
* sensible rbac defaults
* Tests for rbac code
* Patch to allow rbac
* Adding mpi data
* Adding cloudpipe and vpn data back in to network.py
* how we build our debs
* Revert "fix a bug with AOE number generation"
* re-added cloudpipe
* devin's smoketests
* tools to clean vlans and run our old install script
* fix a bug with AOE number generation
* Initial commit of nodemonitor
* Create DescribeImageAttribute api method
* Create DescribeImageAttribute api method
* More rackspace API
* git checkpoint commit post-wsgi
* update spacing
* implement image serving in objectstore so nginx isn't required in development
* update twitter username
* make a "Running" topic instead of having it flow under "Configuration"
* Make nginx config be in a code block
* More doc updates: nginx & pycurl
* Add a README, because GitHub loves them. Update the getting started docs
* update spacing
* Commit what I have almost working before diverging
* first go at moving from tornado to twisted
* implement image serving in objectstore so nginx isn't required in development
* update twitter username
* Update documentation
* fix for reactor.spawnProcess sending deprecation warning
* patch from issue 4001
* Fix for LoopingCall failing Added in exception logging around amqp calls Creating deferred in receive before ack() message was causing IOError (interrupted system calls), probably because the same message was getting processed twice in some situations, causing the system calls to be doubled. Moving the ack() earlier fixed the problem. The code works now with an interval of 0 but that causes heavy processor usage. An interval of 0.01 keeps the cpu usage within reasonable limits
* get rid of anyjson in rpc and fix bad reference to rpc.Connection
* gateway undefined
* fix cloud instances method
* Various cloud fixes
* make get_my_ip return 127.0.0.1 for testing
* Adds a Twisted implementation of a process pool
* make a "Running" topic instead of having it flow under "Configuration"
* Make nginx config be in a code block
* More doc updates: nginx & pycurl
* Add a README, because GitHub loves them. Update the getting started docs
* whitespace fixes for nova/utils.py
* Add project methods to nova-manage
* Fix novarc to use project when creating access key
* removed reference to nonexistent flag
* Josh's networking refactor, modified to work with projects
* Merged Vish's work on adding projects to nova
* missed the gitignore
* initial commit
